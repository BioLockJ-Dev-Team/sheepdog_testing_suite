
---------> Execute CMD [ biolockj --docker --blj_sup <SHEP>/test/bash/configFile/example.properties ]
docker = true
blj_sup = true
KEY CMD: launch_docker --docker --blj_sup <SHEP>/test/bash/configFile/example.properties

---------> Execute CMD [ launch_docker --docker --blj_sup <SHEP>/test/bash/configFile/example.properties ]
docker = true
blj_sup = true
Using <SHEP>/test/bash/configFile/example.properties as the config file.
args used: docker blj_sup
configFile = <SHEP>/test/bash/configFile/example.properties
restartDir =
mapping directory "/Users/ieclabau/git/blj_support" into container...
Created "/Users/ieclabau/runDockerClone.sh"
This script will launch another instance of this docker image,
with the same env vars + volumes, but in interactive mode.

KEY CMD: docker run --rm -d -e "BLJ_OPTIONS=-u /Users/ieclabau -b <SHEP>/MockMain/pipelines -h CCI0PHJGH5AWS -i <SHEP>/test/bash/expected -blj_sup /Users/ieclabau/git/blj_support -c <SHEP>/test/bash/configFile/example.properties" -v /var/run/docker.sock:/var/run/docker.sock -v /Users/ieclabau:/home/ec2-user:delegated -v /Users/ieclabau/git/blj_support:/app/blj_support:ro -v <SHEP>/MockMain/pipelines:/mnt/efs/pipelines:delegated -v <SHEP>/test/bash/expected:/mnt/efs/input:ro -v <SHEP>/test/bash/configFile:/mnt/efs/config:ro biolockj/biolockj_controller
