
---------> Execute CMD [ biolockj -fd configFile/example.properties ]
docker = true
foreground = true
KEY CMD: launch_docker -fd configFile/example.properties

---------> Execute CMD [ launch_docker -fd configFile/example.properties ]
docker = true
foreground = true
Using configFile/example.properties as the config file.
args used: foreground docker
configFile = configFile/example.properties
restartDir =
Created "<HOME>/runDockerClone.sh"
This script will launch another instance of this docker image,
with the same env vars + volumes, but in interactive mode.

---------> Docker CMD [ docker run --rm -e "BLJ_OPTIONS=-projectDir <SHEP>/MockMain/pipelines -config <SHEP>/test/bash/configFile/example.properties" -v /var/run/docker.sock:/var/run/docker.sock --mount type=bind,source=<SHEP>/MockMain/pipelines,target=/mnt/efs/pipelines --mount type=bind,source=<SHEP>/test/bash/configFile,target=/mnt/efs/vol_1 --mount type=bind,source=<SHEP>/test/bash/expected,target=/mnt/efs/vol_2 biolockjdevteam/biolockj_controller:<VERSION> ]
KEY CMD: docker run --rm -e "BLJ_OPTIONS=-projectDir <SHEP>/MockMain/pipelines -config <SHEP>/test/bash/configFile/example.properties" -v /var/run/docker.sock:/var/run/docker.sock --mount type=bind,source=<SHEP>/MockMain/pipelines,target=/mnt/efs/pipelines --mount type=bind,source=<SHEP>/test/bash/configFile,target=/mnt/efs/vol_1 --mount type=bind,source=<SHEP>/test/bash/expected,target=/mnt/efs/vol_2 biolockjdevteam/biolockj_controller:<VERSION>
