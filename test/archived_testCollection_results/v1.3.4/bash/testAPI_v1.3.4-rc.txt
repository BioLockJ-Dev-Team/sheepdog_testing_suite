Most recent sheepdog commit: v1.3.4-rc-1-ga3a0677
Most recent BioLockJ commit: v1.3.4-rc
Output from individual tests are stored in: /Users/ieclabau/git/sheepdog_testing_suite/test/bash/output-api
-
api-test_00_bash_noArgs --> just as expected.
-
api-test_00_bash_help --> just as expected.
-
api-test_01_bash_listModules --> just as expected.
-
api-test_02_bash_listExtModules --> just as expected.
-
api-test_12_bash_isValidProp_mod --> just as expected.
-
api-test_23_bash_unknown_option --> just as expected.
-
api-test_24_bash_debug_option --> just as expected.
-
oh no! examine api-test_00_noArgs !
diff --git a/Users/ieclabau/git/sheepdog_testing_suite/test/bash/expected/api-test_00_noArgs_generic.out b/Users/ieclabau/git/sheepdog_testing_suite/test/bash/output-api/api-test_00_noArgs_generic.out
index b24b629..dc3606a 100644
--- a/Users/ieclabau/git/sheepdog_testing_suite/test/bash/expected/api-test_00_noArgs_generic.out
+++ b/Users/ieclabau/git/sheepdog_testing_suite/test/bash/output-api/api-test_00_noArgs_generic.out
@@ -5,12 +5,12 @@ biolockj-api <query> [options...]
 
 For some uses, redirecting stderr is recommended:
 biolockj-api <query> [options...] 2> /dev/null
+Options shown in [ ] are optional for a given query.
 
 Use biolockj-api without args to get help menu.
 
 Options:
 
-Options shown in [ ] are optional for a given query.
 --external-modules <dir>
 path to a directory containing additional modules
 --module <module_path>
-
oh no! examine api-test_00_help !
diff --git a/Users/ieclabau/git/sheepdog_testing_suite/test/bash/expected/api-test_00_help_generic.out b/Users/ieclabau/git/sheepdog_testing_suite/test/bash/output-api/api-test_00_help_generic.out
index b24b629..dc3606a 100644
--- a/Users/ieclabau/git/sheepdog_testing_suite/test/bash/expected/api-test_00_help_generic.out
+++ b/Users/ieclabau/git/sheepdog_testing_suite/test/bash/output-api/api-test_00_help_generic.out
@@ -5,12 +5,12 @@ biolockj-api <query> [options...]
 
 For some uses, redirecting stderr is recommended:
 biolockj-api <query> [options...] 2> /dev/null
+Options shown in [ ] are optional for a given query.
 
 Use biolockj-api without args to get help menu.
 
 Options:
 
-Options shown in [ ] are optional for a given query.
 --external-modules <dir>
 path to a directory containing additional modules
 --module <module_path>
-
oh no! examine api-test_01_listModules !
diff --git a/Users/ieclabau/git/sheepdog_testing_suite/test/bash/expected/api-test_01_listModules_generic.out b/Users/ieclabau/git/sheepdog_testing_suite/test/bash/output-api/api-test_01_listModules_generic.out
index c541c3c..69f00ad 100644
--- a/Users/ieclabau/git/sheepdog_testing_suite/test/bash/expected/api-test_01_listModules_generic.out
+++ b/Users/ieclabau/git/sheepdog_testing_suite/test/bash/output-api/api-test_01_listModules_generic.out
@@ -7,13 +7,19 @@ biolockj.module.classifier.wgs.Humann2Classifier
 biolockj.module.classifier.wgs.Kraken2Classifier
 biolockj.module.classifier.wgs.KrakenClassifier
 biolockj.module.classifier.wgs.Metaphlan2Classifier
+biolockj.module.diversity.ShannonDiversity
 biolockj.module.diy.GenMod
+biolockj.module.getData.sra.SraDownload
+biolockj.module.getData.sra.SraMetaDB
+biolockj.module.getData.sra.SraMetaData
+biolockj.module.getData.sra.SrpSrrConverter
 biolockj.module.implicit.Demultiplexer
 biolockj.module.implicit.ImportMetadata
 biolockj.module.implicit.RegisterNumReads
 biolockj.module.implicit.parser.r16s.QiimeParser
 biolockj.module.implicit.parser.r16s.RdpParser
 biolockj.module.implicit.parser.wgs.Humann2Parser
+biolockj.module.implicit.parser.wgs.Kraken2Parser
 biolockj.module.implicit.parser.wgs.KrakenParser
 biolockj.module.implicit.parser.wgs.Metaphlan2Parser
 biolockj.module.implicit.qiime.BuildQiimeMapping
@@ -39,6 +45,7 @@ biolockj.module.report.taxa.BuildTaxaTables
 biolockj.module.report.taxa.LogTransformTaxaTables
 biolockj.module.report.taxa.NormalizeByReadsPerMillion
 biolockj.module.report.taxa.NormalizeTaxaTables
+biolockj.module.rnaseq.DESeq2
 biolockj.module.seq.AwkFastaConverter
 biolockj.module.seq.Gunzipper
 biolockj.module.seq.KneadData
-
oh no! examine api-test_02_listExtModules !
diff --git a/Users/ieclabau/git/sheepdog_testing_suite/test/bash/expected/api-test_02_listExtModules_generic.out b/Users/ieclabau/git/sheepdog_testing_suite/test/bash/output-api/api-test_02_listExtModules_generic.out
index c1f91e9..28f7358 100644
--- a/Users/ieclabau/git/sheepdog_testing_suite/test/bash/expected/api-test_02_listExtModules_generic.out
+++ b/Users/ieclabau/git/sheepdog_testing_suite/test/bash/output-api/api-test_02_listExtModules_generic.out
@@ -7,13 +7,19 @@ biolockj.module.classifier.wgs.Humann2Classifier
 biolockj.module.classifier.wgs.Kraken2Classifier
 biolockj.module.classifier.wgs.KrakenClassifier
 biolockj.module.classifier.wgs.Metaphlan2Classifier
+biolockj.module.diversity.ShannonDiversity
 biolockj.module.diy.GenMod
+biolockj.module.getData.sra.SraDownload
+biolockj.module.getData.sra.SraMetaDB
+biolockj.module.getData.sra.SraMetaData
+biolockj.module.getData.sra.SrpSrrConverter
 biolockj.module.implicit.Demultiplexer
 biolockj.module.implicit.ImportMetadata
 biolockj.module.implicit.RegisterNumReads
 biolockj.module.implicit.parser.r16s.QiimeParser
 biolockj.module.implicit.parser.r16s.RdpParser
 biolockj.module.implicit.parser.wgs.Humann2Parser
+biolockj.module.implicit.parser.wgs.Kraken2Parser
 biolockj.module.implicit.parser.wgs.KrakenParser
 biolockj.module.implicit.parser.wgs.Metaphlan2Parser
 biolockj.module.implicit.qiime.BuildQiimeMapping
@@ -39,6 +45,7 @@ biolockj.module.report.taxa.BuildTaxaTables
 biolockj.module.report.taxa.LogTransformTaxaTables
 biolockj.module.report.taxa.NormalizeByReadsPerMillion
 biolockj.module.report.taxa.NormalizeTaxaTables
+biolockj.module.rnaseq.DESeq2
 biolockj.module.seq.AwkFastaConverter
 biolockj.module.seq.Gunzipper
 biolockj.module.seq.KneadData
@@ -51,11 +58,14 @@ sheepdog.modules.CheckCountTable
 sheepdog.modules.CheckNormalizationTable
 sheepdog.modules.CheckPipelineFiles
 sheepdog.modules.CheckPipelineName
+sheepdog.modules.CheckShannon
 sheepdog.modules.CopyMasterProps
 sheepdog.modules.KrakenReparse
+sheepdog.modules.NormalizeTaxaTables
 sheepdog.modules.RdpReparse
 testBash.ConfigToFail
 testBash.FailCheckDependencies
 testBash.LongCheckDependencies
+testBash.PipelineTime
 testBash.Wait
 testBash.WriteTime
-
oh no! examine api-test_02_listApiModules !
diff --git a/Users/ieclabau/git/sheepdog_testing_suite/test/bash/expected/api-test_02_listApiModules_generic.out b/Users/ieclabau/git/sheepdog_testing_suite/test/bash/output-api/api-test_02_listApiModules_generic.out
index 2de5bda..057167f 100644
--- a/Users/ieclabau/git/sheepdog_testing_suite/test/bash/expected/api-test_02_listApiModules_generic.out
+++ b/Users/ieclabau/git/sheepdog_testing_suite/test/bash/output-api/api-test_02_listApiModules_generic.out
@@ -1,3 +1,4 @@
+biolockj.module.assembly.GenomeAssembly
 biolockj.module.classifier.r16s.QiimeClosedRefClassifier
 biolockj.module.classifier.r16s.QiimeDeNovoClassifier
 biolockj.module.classifier.r16s.QiimeOpenRefClassifier
@@ -6,19 +7,31 @@ biolockj.module.classifier.wgs.Humann2Classifier
 biolockj.module.classifier.wgs.Kraken2Classifier
 biolockj.module.classifier.wgs.KrakenClassifier
 biolockj.module.classifier.wgs.Metaphlan2Classifier
+biolockj.module.diversity.ShannonDiversity
 biolockj.module.diy.GenMod
+biolockj.module.getData.sra.SraDownload
+biolockj.module.getData.sra.SraMetaDB
+biolockj.module.getData.sra.SraMetaData
+biolockj.module.getData.sra.SrpSrrConverter
 biolockj.module.implicit.Demultiplexer
+biolockj.module.implicit.ImportMetadata
 biolockj.module.implicit.parser.r16s.RdpParser
 biolockj.module.implicit.parser.wgs.Humann2Parser
+biolockj.module.implicit.parser.wgs.Kraken2Parser
 biolockj.module.implicit.parser.wgs.KrakenParser
 biolockj.module.report.Email
 biolockj.module.report.otu.RarefyOtuCounts
+biolockj.module.report.otu.RemoveLowOtuCounts
 biolockj.module.report.r.R_CalculateStats
 biolockj.module.report.r.R_PlotEffectSize
 biolockj.module.report.r.R_PlotMds
 biolockj.module.report.r.R_PlotOtus
 biolockj.module.report.r.R_PlotPvalHistograms
 biolockj.module.report.taxa.AddPseudoCount
+biolockj.module.report.taxa.NormalizeByReadsPerMillion
+biolockj.module.rnaseq.DESeq2
+biolockj.module.seq.AwkFastaConverter
+biolockj.module.seq.Gunzipper
 biolockj.module.seq.KneadData
 biolockj.module.seq.Multiplexer
 biolockj.module.seq.PearMergeReads
-
oh no! examine api-test_03_listExtApiModules !
diff --git a/Users/ieclabau/git/sheepdog_testing_suite/test/bash/expected/api-test_03_listExtApiModules_generic.out b/Users/ieclabau/git/sheepdog_testing_suite/test/bash/output-api/api-test_03_listExtApiModules_generic.out
index 5e557d0..13042b7 100644
--- a/Users/ieclabau/git/sheepdog_testing_suite/test/bash/expected/api-test_03_listExtApiModules_generic.out
+++ b/Users/ieclabau/git/sheepdog_testing_suite/test/bash/output-api/api-test_03_listExtApiModules_generic.out
@@ -1,3 +1,4 @@
+biolockj.module.assembly.GenomeAssembly
 biolockj.module.classifier.r16s.QiimeClosedRefClassifier
 biolockj.module.classifier.r16s.QiimeDeNovoClassifier
 biolockj.module.classifier.r16s.QiimeOpenRefClassifier
@@ -6,19 +7,31 @@ biolockj.module.classifier.wgs.Humann2Classifier
 biolockj.module.classifier.wgs.Kraken2Classifier
 biolockj.module.classifier.wgs.KrakenClassifier
 biolockj.module.classifier.wgs.Metaphlan2Classifier
+biolockj.module.diversity.ShannonDiversity
 biolockj.module.diy.GenMod
+biolockj.module.getData.sra.SraDownload
+biolockj.module.getData.sra.SraMetaDB
+biolockj.module.getData.sra.SraMetaData
+biolockj.module.getData.sra.SrpSrrConverter
 biolockj.module.implicit.Demultiplexer
+biolockj.module.implicit.ImportMetadata
 biolockj.module.implicit.parser.r16s.RdpParser
 biolockj.module.implicit.parser.wgs.Humann2Parser
+biolockj.module.implicit.parser.wgs.Kraken2Parser
 biolockj.module.implicit.parser.wgs.KrakenParser
 biolockj.module.report.Email
 biolockj.module.report.otu.RarefyOtuCounts
+biolockj.module.report.otu.RemoveLowOtuCounts
 biolockj.module.report.r.R_CalculateStats
 biolockj.module.report.r.R_PlotEffectSize
 biolockj.module.report.r.R_PlotMds
 biolockj.module.report.r.R_PlotOtus
 biolockj.module.report.r.R_PlotPvalHistograms
 biolockj.module.report.taxa.AddPseudoCount
+biolockj.module.report.taxa.NormalizeByReadsPerMillion
+biolockj.module.rnaseq.DESeq2
+biolockj.module.seq.AwkFastaConverter
+biolockj.module.seq.Gunzipper
 biolockj.module.seq.KneadData
 biolockj.module.seq.Multiplexer
 biolockj.module.seq.PearMergeReads
@@ -26,3 +39,4 @@ biolockj.module.seq.RarefySeqs
 biolockj.module.seq.SeqFileValidator
 biolockj.module.seq.TrimPrimers
 sheepdog.modules.CopyMasterProps
+testBash.PipelineTime
-
oh no! examine api-test_04_listProps_module !
diff --git a/Users/ieclabau/git/sheepdog_testing_suite/test/bash/expected/api-test_04_listProps_module_generic.out b/Users/ieclabau/git/sheepdog_testing_suite/test/bash/output-api/api-test_04_listProps_module_generic.out
index 044ba23..37a1555 100644
--- a/Users/ieclabau/git/sheepdog_testing_suite/test/bash/expected/api-test_04_listProps_module_generic.out
+++ b/Users/ieclabau/git/sheepdog_testing_suite/test/bash/output-api/api-test_04_listProps_module_generic.out
@@ -3,9 +3,8 @@ cluster.jobHeader
 cluster.modules
 cluster.prologue
 cluster.statusCommand
-docker.imgVersion
 docker.saveContainerOnExit
-docker.user
+docker.verifyImage
 script.defaultHeader
 script.numThreads
 script.numWorkers
-
oh no! examine api-test_05_listProps_backbone !
diff --git a/Users/ieclabau/git/sheepdog_testing_suite/test/bash/expected/api-test_05_listProps_backbone_generic.out b/Users/ieclabau/git/sheepdog_testing_suite/test/bash/output-api/api-test_05_listProps_backbone_generic.out
index 22aa394..d2c75e2 100644
--- a/Users/ieclabau/git/sheepdog_testing_suite/test/bash/expected/api-test_05_listProps_backbone_generic.out
+++ b/Users/ieclabau/git/sheepdog_testing_suite/test/bash/output-api/api-test_05_listProps_backbone_generic.out
@@ -22,16 +22,17 @@ cluster.jobHeader
 cluster.modules
 cluster.prologue
 cluster.statusCommand
-docker.imgVersion
+docker.imageName
+docker.imageOwner
+docker.imageTag
 docker.saveContainerOnExit
-docker.user
+docker.verifyImage
 exe.Rscript
 exe.awk
 exe.docker
 exe.gzip
 exe.java
 exe.python
-genMod.dockerContainerName
 humann2.disableGeneFamilies
 humann2.disablePathAbundance
 humann2.disablePathCoverage
@@ -62,6 +63,7 @@ pipeline.disableAddImplicitModules
 pipeline.disableAddPreReqModules
 pipeline.downloadDir
 pipeline.env
+pipeline.inputTypes
 pipeline.limitDebugClasses
 pipeline.logLevel
 pipeline.permissions
-
oh no! examine api-test_06_listAllProps !
diff --git a/Users/ieclabau/git/sheepdog_testing_suite/test/bash/expected/api-test_06_listAllProps_generic.out b/Users/ieclabau/git/sheepdog_testing_suite/test/bash/output-api/api-test_06_listAllProps_generic.out
index c7f2e89..741d7fb 100644
--- a/Users/ieclabau/git/sheepdog_testing_suite/test/bash/expected/api-test_06_listAllProps_generic.out
+++ b/Users/ieclabau/git/sheepdog_testing_suite/test/bash/output-api/api-test_06_listAllProps_generic.out
@@ -25,12 +25,21 @@ cluster.statusCommand
 demultiplexer.barcodeCutoff
 demultiplexer.barcodeRevComp
 demultiplexer.strategy
-docker.imgVersion
+deseq2.designFactors
+deseq2.designFormula
+deseq2.scriptPath
+docker.imageName
+docker.imageOwner
+docker.imageTag
 docker.saveContainerOnExit
-docker.user
+docker.verifyImage
 exe.Rscript
 exe.awk
 exe.docker
+exe.efetch
+exe.esearch
+exe.fasterq-dump
+exe.gunzip
 exe.gzip
 exe.humann2
 exe.java
@@ -39,9 +48,11 @@ exe.kraken
 exe.kraken2
 exe.metaphlan2
 exe.pear
+exe.pysradb
 exe.python
 exe.vsearch
-genMod.dockerContainerName
+exe.wget
+exe.xtract
 genMod.launcher
 genMod.param
 genMod.scriptPath
@@ -100,6 +111,7 @@ pipeline.disableAddImplicitModules
 pipeline.disableAddPreReqModules
 pipeline.downloadDir
 pipeline.env
+pipeline.inputTypes
 pipeline.limitDebugClasses
 pipeline.logLevel
 pipeline.permissions
@@ -170,6 +182,12 @@ script.timeout
 seqFileValidator.requireEqualNumPairs
 seqFileValidator.seqMaxLen
 seqFileValidator.seqMinLen
+sra.accessionIdColumn
+sra.destinationDir
+sra.forceDbUpdate
+sra.metaDataDir
+sra.sraAccList
+sra.sraProjectId
 trimPrimers.filePath
 trimPrimers.requirePrimer
 validation.compareOn
-
oh no! examine api-test_07_listAllExtProps !
diff --git a/Users/ieclabau/git/sheepdog_testing_suite/test/bash/expected/api-test_07_listAllExtProps_generic.out b/Users/ieclabau/git/sheepdog_testing_suite/test/bash/output-api/api-test_07_listAllExtProps_generic.out
index c7f2e89..a2b0e1c 100644
--- a/Users/ieclabau/git/sheepdog_testing_suite/test/bash/expected/api-test_07_listAllExtProps_generic.out
+++ b/Users/ieclabau/git/sheepdog_testing_suite/test/bash/output-api/api-test_07_listAllExtProps_generic.out
@@ -25,12 +25,21 @@ cluster.statusCommand
 demultiplexer.barcodeCutoff
 demultiplexer.barcodeRevComp
 demultiplexer.strategy
-docker.imgVersion
+deseq2.designFactors
+deseq2.designFormula
+deseq2.scriptPath
+docker.imageName
+docker.imageOwner
+docker.imageTag
 docker.saveContainerOnExit
-docker.user
+docker.verifyImage
 exe.Rscript
 exe.awk
 exe.docker
+exe.efetch
+exe.esearch
+exe.fasterq-dump
+exe.gunzip
 exe.gzip
 exe.humann2
 exe.java
@@ -39,9 +48,11 @@ exe.kraken
 exe.kraken2
 exe.metaphlan2
 exe.pear
+exe.pysradb
 exe.python
 exe.vsearch
-genMod.dockerContainerName
+exe.wget
+exe.xtract
 genMod.launcher
 genMod.param
 genMod.scriptPath
@@ -100,11 +111,14 @@ pipeline.disableAddImplicitModules
 pipeline.disableAddPreReqModules
 pipeline.downloadDir
 pipeline.env
+pipeline.inputTypes
 pipeline.limitDebugClasses
 pipeline.logLevel
 pipeline.permissions
 pipeline.setSeed
 pipeline.userProfile
+pipelineTime.maxMillis
+pipelineTime.minMillis
 qiime.alphaMetrics
 qiime.params
 qiime.plotAlphaMetrics
@@ -170,6 +184,12 @@ script.timeout
 seqFileValidator.requireEqualNumPairs
 seqFileValidator.seqMaxLen
 seqFileValidator.seqMinLen
+sra.accessionIdColumn
+sra.destinationDir
+sra.forceDbUpdate
+sra.metaDataDir
+sra.sraAccList
+sra.sraProjectId
 trimPrimers.filePath
 trimPrimers.requirePrimer
 validation.compareOn
-
api-test_08_propType_mod --> just as expected.
-
api-test_09_propType --> just as expected.
-
api-test_09_propType_bad --> just as expected.
-
api-test_10_descProp_mod --> just as expected.
-
api-test_11_descProp --> just as expected.
-
api-test_11_descProp_bad --> just as expected.
-
api-test_12_isValidProp_mod --> just as expected.
-
api-test_12_isValidProp_mod_msg --> just as expected.
-
api-test_13_isValidProp --> just as expected.
-
api-test_13_isValidProp_msg --> just as expected.
-
api-test_17_propValue --> just as expected.
-
api-test_18_propValue_config --> just as expected.
-
oh no! examine api-test_19_propInfo !
diff --git a/Users/ieclabau/git/sheepdog_testing_suite/test/bash/expected/api-test_19_propInfo_generic.out b/Users/ieclabau/git/sheepdog_testing_suite/test/bash/output-api/api-test_19_propInfo_generic.out
index 9683ac2..fa52efa 100644
--- a/Users/ieclabau/git/sheepdog_testing_suite/test/bash/expected/api-test_19_propInfo_generic.out
+++ b/Users/ieclabau/git/sheepdog_testing_suite/test/bash/output-api/api-test_19_propInfo_generic.out
@@ -117,22 +117,32 @@
 {
 "property": "cluster.statusCommand",
 "type": "string",
-"description": "Terminal command used to submit jobs on the cluster"
+"description": "Terminal command used to check the status of jobs on the cluster"
 },
 {
-"property": "docker.imgVersion",
+"property": "docker.imageName",
+"type": "string",
+"description": "The name of a docker image to override whatever a module says to use."
+},
+{
+"property": "docker.imageOwner",
+"type": "string",
+"description": "name of the Docker Hub user that owns the docker containers"
+},
+{
+"property": "docker.imageTag",
 "type": "string",
 "description": "indicate specific version of Docker images"
 },
 {
 "property": "docker.saveContainerOnExit",
 "type": "boolean",
-"description": "if ture, docker run command will NOT include the --rm flag"
+"description": "If Y, docker run command will NOT include the --rm flag"
 },
 {
-"property": "docker.user",
-"type": "string",
-"description": "name of the Docker Hub user for getting docker containers"
+"property": "docker.verifyImage",
+"type": "boolean",
+"description": "In check dependencies, run a test to verify the docker image."
 },
 {
 "property": "exe.Rscript",
@@ -165,11 +175,6 @@
 "description": "Path for the \"python\" executable; if not supplied, any script that needs the python command will assume it is on the PATH."
 },
 {
-"property": "genMod.dockerContainerName",
-"type": "string",
-"description": "Name of the docker container to use when executing an instance of the GenMod module."
-},
-{
 "property": "humann2.disableGeneFamilies",
 "type": "boolean",
 "description": "disable HumanN2 Gene Family report"
@@ -297,8 +302,9 @@
 },
 {
 "property": "pipeline.defaultStatsModule",
-"type": "string",
-"description": "Java class name for default module used generate p-value and other stats"
+"description": "Java class name for default module used generate p-value and other stats",
+"default": "biolockj.module.report.r.R_CalculateStats",
+"type": "string"
 },
 {
 "property": "pipeline.deleteTempFiles",
@@ -333,6 +339,11 @@
 "type": "string"
 },
 {
+"property": "pipeline.inputTypes",
+"type": "list",
+"description": "List of file types. This manually overrides the recommended auto-detection."
+},
+{
 "property": "pipeline.limitDebugClasses",
 "type": "list",
 "description": "limit classes that log debug statements"
-
oh no! examine api-test_20_moduleInfo !
diff --git a/Users/ieclabau/git/sheepdog_testing_suite/test/bash/expected/api-test_20_moduleInfo_generic.out b/Users/ieclabau/git/sheepdog_testing_suite/test/bash/output-api/api-test_20_moduleInfo_generic.out
index 41c2c0e..db76d9e 100644
--- a/Users/ieclabau/git/sheepdog_testing_suite/test/bash/expected/api-test_20_moduleInfo_generic.out
+++ b/Users/ieclabau/git/sheepdog_testing_suite/test/bash/output-api/api-test_20_moduleInfo_generic.out
@@ -1,9 +1,18 @@
 [
 {
-"description": "Pick OTUs using a closed reference database and construct an OTU table via the QIIME script pick_closed_reference_otus.py",
-"details": "This module picks OTUs using a closed reference database and constructs an OTU table via the QIIME script [pick_closed_reference_otus.py](http://qiime.org/scripts/pick_closed_reference_otus.html). Taxonomy is assigned using a pre-defined taxonomy map of reference sequence OTU to taxonomy. This is the fastest OTU picking method since samples can be processed in parallel batches. Before the QIIME script is run, batches are prepared in the temp directory, with each batch directory containing a fasta directory with *script.batchSize* fasta files and a QIIME mapping file, created with awk, called batchMapping.tsv for the batch of samples. Inherits from [QiimeClassifier](../../../module.implicit.qiime#QiimeClassifier).",
-"title": "QiimeClosedRefClassifier",
-"citation": "QIIME allows analysis of high-throughput community sequencing data\nJ Gregory Caporaso, Justin Kuczynski, Jesse Stombaugh, Kyle Bittinger, Frederic D Bushman, Elizabeth K Costello, Noah Fierer, Antonio Gonzalez Pena, Julia K Goodrich, Jeffrey I Gordon, Gavin A Huttley, Scott T Kelley, Dan Knights, Jeremy E Koenig, Ruth E Ley, Catherine A Lozupone, Daniel McDonald, Brian D Muegge, Meg Pirrung, Jens Reeder, Joel R Sevinsky, Peter J Turnbaugh, William A Walters, Jeremy Widmann, Tanya Yatsunenko, Jesse Zaneveld and Rob Knight; Nature Methods, 2010; doi:10.1038/nmeth.f.303\n(needs further citation)\nhttp://www.wernerlab.org/software/macqiime/citations",
+"menuPlacement": [
+"biolockj",
+"module",
+"assembly",
+"GenomeAssembly"
+],
+"citation": "checkM database\nhttps://data.ace.uq.edu.au/public/CheckM_databases/checkm_data_2015_01_16.tar.gz\nHMMER\nhttp://eddylab.org/software/hmmer/hmmer.tar.gz\nMASH\nhttps://github.com/marbl/Mash/releases/download/v2.2/mash-Linux64-v2.2.tar\nMetabat2\nhttps://bitbucket.org/berkeleylab/metabat/downloads/metabat-static-binary-linux-x64_v2.12.1.tar.gz\nMetaSPAdes\nhttps://github.com/ablab/spades/releases/download/v3.13.0/SPAdes-3.13.0-Linux.tar.gz\nPPLACER\nhttps://github.com/matsen/pplacer/releases/download/v1.1.alpha19/pplacer-linux-v1.1.alpha19.zip\nPRODIGAL\nhttps://github.com/hyattpd/Prodigal/releases/download/v2.6.3/prodigal.linux\n\nModule developed by Shan Sun\nBioLockJ <VERSION>",
+"usage": "#BioModule biolockj.module.assembly.GenomeAssembly",
+"pre-req modules": [],
+"description": "Assemble WGS sequences with MetaSPAdes, bin contigs with Metabat2 and check quality with checkM.",
+"details": "",
+"post-req modules": [],
+"title": "GenomeAssembly",
 "properties": [
 {
 "property": "cluster.batchCommand",
@@ -28,22 +37,97 @@
 {
 "property": "cluster.statusCommand",
 "type": "string",
+"description": "Terminal command used to check the status of jobs on the cluster"
+},
+{
+"property": "docker.saveContainerOnExit",
+"type": "boolean",
+"description": "If Y, docker run command will NOT include the --rm flag"
+},
+{
+"property": "docker.verifyImage",
+"type": "boolean",
+"description": "In check dependencies, run a test to verify the docker image."
+},
+{
+"property": "script.defaultHeader",
+"description": "Store default script header for MAIN script and locally run WORKER scripts.",
+"default": "#!/bin/bash",
+"type": "string"
+},
+{
+"property": "script.numThreads",
+"description": "Used to reserve cluster resources and passed to any external application call that accepts a numThreads parameter.",
+"default": "8",
+"type": "integer"
+},
+{
+"property": "script.numWorkers",
+"description": "Set number of samples to process per script (if parallel processing)",
+"default": "1",
+"type": "integer"
+},
+{
+"property": "script.permissions",
+"description": "Used as chmod permission parameter (ex: 774)",
+"default": "770",
+"type": "string"
+},
+{
+"property": "script.timeout",
+"type": "integer",
+"description": "Sets # of minutes before worker scripts times out."
+}
+]
+},
+{
+"menuPlacement": [
+"biolockj",
+"module",
+"classifier",
+"r16s",
+"QiimeClosedRefClassifier"
+],
+"citation": "QIIME allows analysis of high-throughput community sequencing data\nJ Gregory Caporaso, Justin Kuczynski, Jesse Stombaugh, Kyle Bittinger, Frederic D Bushman, Elizabeth K Costello, Noah Fierer, Antonio Gonzalez Pena, Julia K Goodrich, Jeffrey I Gordon, Gavin A Huttley, Scott T Kelley, Dan Knights, Jeremy E Koenig, Ruth E Ley, Catherine A Lozupone, Daniel McDonald, Brian D Muegge, Meg Pirrung, Jens Reeder, Joel R Sevinsky, Peter J Turnbaugh, William A Walters, Jeremy Widmann, Tanya Yatsunenko, Jesse Zaneveld and Rob Knight; Nature Methods, 2010; doi:10.1038/nmeth.f.303\n(needs further citation)\nhttp://www.wernerlab.org/software/macqiime/citations",
+"usage": "#BioModule biolockj.module.classifier.r16s.QiimeClosedRefClassifier",
+"description": "Pick OTUs using a closed reference database and construct an OTU table via the QIIME script pick_closed_reference_otus.py",
+"details": "This module picks OTUs using a closed reference database and constructs an OTU table via the QIIME script [pick_closed_reference_otus.py](http://qiime.org/scripts/pick_closed_reference_otus.html). Taxonomy is assigned using a pre-defined taxonomy map of reference sequence OTU to taxonomy. This is the fastest OTU picking method since samples can be processed in parallel batches. Before the QIIME script is run, batches are prepared in the temp directory, with each batch directory containing a fasta directory with *script.batchSize* fasta files and a QIIME mapping file, created with awk, called batchMapping.tsv for the batch of samples. Inherits from [QiimeClassifier](../../../module.implicit.qiime#QiimeClassifier).",
+"title": "QiimeClosedRefClassifier",
+"properties": [
+{
+"property": "cluster.batchCommand",
+"type": "string",
 "description": "Terminal command used to submit jobs on the cluster"
 },
 {
-"property": "docker.imgVersion",
+"property": "cluster.jobHeader",
+"type": "string",
+"description": "Header written at top of worker scripts"
+},
+{
+"property": "cluster.modules",
+"type": "list",
+"description": "List of cluster modules to load at start of worker scripts"
+},
+{
+"property": "cluster.prologue",
+"type": "string",
+"description": "To run at the start of every script after loading cluster modules (if any)"
+},
+{
+"property": "cluster.statusCommand",
 "type": "string",
-"description": "indicate specific version of Docker images"
+"description": "Terminal command used to check the status of jobs on the cluster"
 },
 {
 "property": "docker.saveContainerOnExit",
 "type": "boolean",
-"description": "if ture, docker run command will NOT include the --rm flag"
+"description": "If Y, docker run command will NOT include the --rm flag"
 },
 {
-"property": "docker.user",
-"type": "string",
-"description": "name of the Docker Hub user for getting docker containers"
+"property": "docker.verifyImage",
+"type": "boolean",
+"description": "In check dependencies, run a test to verify the docker image."
 },
 {
 "property": "exe.awk",
@@ -55,6 +139,18 @@
 "type": "executable",
 "description": "Path for the \"vsearch\" executable; if not supplied, any script that needs the vsearch command will assume it is on the PATH."
 },
+{
+"property": "pipeline.defaultFastaConverter",
+"description": "Java class name for default module used to convert files into fasta format",
+"default": "biolockj.module.seq.AwkFastaConverter",
+"type": "string"
+},
+{
+"property": "pipeline.defaultSeqMerger",
+"description": "Java class name for default module used combined paired read files",
+"default": "biolockj.module.seq.PearMergeReads",
+"type": "string"
+},
 {"property": "qiime.params"},
 {"property": "qiime.pynastAlignDB"},
 {"property": "qiime.refSeqDB"},
@@ -93,14 +189,21 @@
 "type": "integer",
 "description": "Sets # of minutes before worker scripts times out."
 }
-],
-"usage": "#BioModule biolockj.module.classifier.r16s.QiimeClosedRefClassifier"
+]
 },
 {
+"menuPlacement": [
+"biolockj",
+"module",
+"classifier",
+"r16s",
+"QiimeDeNovoClassifier"
+],
+"citation": "QIIME allows analysis of high-throughput community sequencing data\nJ Gregory Caporaso, Justin Kuczynski, Jesse Stombaugh, Kyle Bittinger, Frederic D Bushman, Elizabeth K Costello, Noah Fierer, Antonio Gonzalez Pena, Julia K Goodrich, Jeffrey I Gordon, Gavin A Huttley, Scott T Kelley, Dan Knights, Jeremy E Koenig, Ruth E Ley, Catherine A Lozupone, Daniel McDonald, Brian D Muegge, Meg Pirrung, Jens Reeder, Joel R Sevinsky, Peter J Turnbaugh, William A Walters, Jeremy Widmann, Tanya Yatsunenko, Jesse Zaneveld and Rob Knight; Nature Methods, 2010; doi:10.1038/nmeth.f.303\n(needs further citation)\nhttp://www.wernerlab.org/software/macqiime/citations",
+"usage": "#BioModule biolockj.module.classifier.r16s.QiimeDeNovoClassifier",
 "description": "Run the QIIME pick_de_novo_otus.py script on all fasta sequence files",
 "details": "This module runs the QIIME [pick_de_novo_otus.py](http://qiime.org/scripts/pick_de_novo_otus.html) script on all fasta sequence files in a single script since OTUs are assigned by a clustering algorithm. Additional parameters for this script are set using *exe.classifierParams*. If *qiime.removeChimeras* = \"Y\", vsearch is used to find chimeric sequences in the output and the QIIME script [filter_otus_from_otu_table.py](http://qiime.org/scripts/filter_otus_from_otu_table.html) is run to remove them from ./output/otu_table.biom. Inherits from [QiimeClassifier](../../../module.implicit.qiime#QiimeClassifier).",
 "title": "QiimeDeNovoClassifier",
-"citation": "QIIME allows analysis of high-throughput community sequencing data\nJ Gregory Caporaso, Justin Kuczynski, Jesse Stombaugh, Kyle Bittinger, Frederic D Bushman, Elizabeth K Costello, Noah Fierer, Antonio Gonzalez Pena, Julia K Goodrich, Jeffrey I Gordon, Gavin A Huttley, Scott T Kelley, Dan Knights, Jeremy E Koenig, Ruth E Ley, Catherine A Lozupone, Daniel McDonald, Brian D Muegge, Meg Pirrung, Jens Reeder, Joel R Sevinsky, Peter J Turnbaugh, William A Walters, Jeremy Widmann, Tanya Yatsunenko, Jesse Zaneveld and Rob Knight; Nature Methods, 2010; doi:10.1038/nmeth.f.303\n(needs further citation)\nhttp://www.wernerlab.org/software/macqiime/citations",
 "properties": [
 {
 "property": "cluster.batchCommand",
@@ -125,28 +228,35 @@
 {
 "property": "cluster.statusCommand",
 "type": "string",
-"description": "Terminal command used to submit jobs on the cluster"
-},
-{
-"property": "docker.imgVersion",
-"type": "string",
-"description": "indicate specific version of Docker images"
+"description": "Terminal command used to check the status of jobs on the cluster"
 },
 {
 "property": "docker.saveContainerOnExit",
 "type": "boolean",
-"description": "if ture, docker run command will NOT include the --rm flag"
+"description": "If Y, docker run command will NOT include the --rm flag"
 },
 {
-"property": "docker.user",
-"type": "string",
-"description": "name of the Docker Hub user for getting docker containers"
+"property": "docker.verifyImage",
+"type": "boolean",
+"description": "In check dependencies, run a test to verify the docker image."
 },
 {
 "property": "exe.vsearch",
 "type": "executable",
 "description": "Path for the \"vsearch\" executable; if not supplied, any script that needs the vsearch command will assume it is on the PATH."
 },
+{
+"property": "pipeline.defaultFastaConverter",
+"description": "Java class name for default module used to convert files into fasta format",
+"default": "biolockj.module.seq.AwkFastaConverter",
+"type": "string"
+},
+{
+"property": "pipeline.defaultSeqMerger",
+"description": "Java class name for default module used combined paired read files",
+"default": "biolockj.module.seq.PearMergeReads",
+"type": "string"
+},
 {"property": "qiime.params"},
 {"property": "qiime.pynastAlignDB"},
 {"property": "qiime.refSeqDB"},
@@ -185,14 +295,21 @@
 "type": "integer",
 "description": "Sets # of minutes before worker scripts times out."
 }
-],
-"usage": "#BioModule biolockj.module.classifier.r16s.QiimeDeNovoClassifier"
+]
 },
 {
+"menuPlacement": [
+"biolockj",
+"module",
+"classifier",
+"r16s",
+"QiimeOpenRefClassifier"
+],
+"citation": "QIIME allows analysis of high-throughput community sequencing data\nJ Gregory Caporaso, Justin Kuczynski, Jesse Stombaugh, Kyle Bittinger, Frederic D Bushman, Elizabeth K Costello, Noah Fierer, Antonio Gonzalez Pena, Julia K Goodrich, Jeffrey I Gordon, Gavin A Huttley, Scott T Kelley, Dan Knights, Jeremy E Koenig, Ruth E Ley, Catherine A Lozupone, Daniel McDonald, Brian D Muegge, Meg Pirrung, Jens Reeder, Joel R Sevinsky, Peter J Turnbaugh, William A Walters, Jeremy Widmann, Tanya Yatsunenko, Jesse Zaneveld and Rob Knight; Nature Methods, 2010; doi:10.1038/nmeth.f.303\n(needs further citation)\nhttp://www.wernerlab.org/software/macqiime/citations",
+"usage": "#BioModule biolockj.module.classifier.r16s.QiimeOpenRefClassifier",
 "description": "Run the QIIME pick_open_reference_otus.py script on all fasta sequence files",
 "details": "This module runs the QIIME [pick_open_reference_otus.py](http://qiime.org/scripts/pick_open_reference_otus.html) script on all fasta sequence files in a single script since clusters not identified in the reference database are assigned by a clustering algorithm. Additional parameters for this script are set using *exe.classifierParams*. If *qiime.removeChimeras* = \"Y\", vsearch is used to find chimeric sequences in the output and the QIIME script [filter_otus_from_otu_table.py](http://qiime.org/scripts/filter_otus_from_otu_table.html) is run to remove them from ./output/otu_table.biom. Inherits from [QiimeClassifier](../../../module.implicit.qiime#QiimeClassifier).",
 "title": "QiimeOpenRefClassifier",
-"citation": "QIIME allows analysis of high-throughput community sequencing data\nJ Gregory Caporaso, Justin Kuczynski, Jesse Stombaugh, Kyle Bittinger, Frederic D Bushman, Elizabeth K Costello, Noah Fierer, Antonio Gonzalez Pena, Julia K Goodrich, Jeffrey I Gordon, Gavin A Huttley, Scott T Kelley, Dan Knights, Jeremy E Koenig, Ruth E Ley, Catherine A Lozupone, Daniel McDonald, Brian D Muegge, Meg Pirrung, Jens Reeder, Joel R Sevinsky, Peter J Turnbaugh, William A Walters, Jeremy Widmann, Tanya Yatsunenko, Jesse Zaneveld and Rob Knight; Nature Methods, 2010; doi:10.1038/nmeth.f.303\n(needs further citation)\nhttp://www.wernerlab.org/software/macqiime/citations",
 "properties": [
 {
 "property": "cluster.batchCommand",
@@ -217,28 +334,35 @@
 {
 "property": "cluster.statusCommand",
 "type": "string",
-"description": "Terminal command used to submit jobs on the cluster"
-},
-{
-"property": "docker.imgVersion",
-"type": "string",
-"description": "indicate specific version of Docker images"
+"description": "Terminal command used to check the status of jobs on the cluster"
 },
 {
 "property": "docker.saveContainerOnExit",
 "type": "boolean",
-"description": "if ture, docker run command will NOT include the --rm flag"
+"description": "If Y, docker run command will NOT include the --rm flag"
 },
 {
-"property": "docker.user",
-"type": "string",
-"description": "name of the Docker Hub user for getting docker containers"
+"property": "docker.verifyImage",
+"type": "boolean",
+"description": "In check dependencies, run a test to verify the docker image."
 },
 {
 "property": "exe.vsearch",
 "type": "executable",
 "description": "Path for the \"vsearch\" executable; if not supplied, any script that needs the vsearch command will assume it is on the PATH."
 },
+{
+"property": "pipeline.defaultFastaConverter",
+"description": "Java class name for default module used to convert files into fasta format",
+"default": "biolockj.module.seq.AwkFastaConverter",
+"type": "string"
+},
+{
+"property": "pipeline.defaultSeqMerger",
+"description": "Java class name for default module used combined paired read files",
+"default": "biolockj.module.seq.PearMergeReads",
+"type": "string"
+},
 {"property": "qiime.params"},
 {"property": "qiime.pynastAlignDB"},
 {"property": "qiime.refSeqDB"},
@@ -277,11 +401,17 @@
 "type": "integer",
 "description": "Sets # of minutes before worker scripts times out."
 }
-],
-"usage": "#BioModule biolockj.module.classifier.r16s.QiimeOpenRefClassifier"
+]
 },
 {
-"citation": "Module developed by Mike Sioda\nBioLockj <VERSION>",
+"menuPlacement": [
+"biolockj",
+"module",
+"classifier",
+"r16s",
+"RdpClassifier"
+],
+"citation": "Module developed by Mike Sioda\nBioLockJ <VERSION>",
 "usage": "#BioModule biolockj.module.classifier.r16s.RdpClassifier",
 "pre-req modules": [],
 "description": "Classify 16s samples with [RDP](http://rdp.cme.msu.edu/classifier/classifier.jsp).",
@@ -312,22 +442,23 @@
 {
 "property": "cluster.statusCommand",
 "type": "string",
-"description": "Terminal command used to submit jobs on the cluster"
+"description": "Terminal command used to check the status of jobs on the cluster"
 },
 {
-"property": "docker.imgVersion",
-"type": "string",
-"description": "indicate specific version of Docker images"
+"property": "docker.saveContainerOnExit",
+"type": "boolean",
+"description": "If Y, docker run command will NOT include the --rm flag"
 },
 {
-"property": "docker.saveContainerOnExit",
+"property": "docker.verifyImage",
 "type": "boolean",
-"description": "if ture, docker run command will NOT include the --rm flag"
+"description": "In check dependencies, run a test to verify the docker image."
 },
 {
-"property": "docker.user",
-"type": "string",
-"description": "name of the Docker Hub user for getting docker containers"
+"property": "pipeline.defaultSeqMerger",
+"description": "Java class name for default module used combined paired read files",
+"default": "biolockj.module.seq.PearMergeReads",
+"type": "string"
 },
 {"property": "rdp.db"},
 {"property": "rdp.jar"},
@@ -368,6 +499,13 @@
 ]
 },
 {
+"menuPlacement": [
+"biolockj",
+"module",
+"classifier",
+"wgs",
+"Humann2Classifier"
+],
 "citation": "Franzosa EA*, McIver LJ*, Rahnavard G, Thompson LR, Schirmer M, Weingart G, Schwarzberg Lipson K, Knight R, Caporaso JG, Segata N, Huttenhower C. \nSpecies-level functional profiling of metagenomes and metatranscriptomes. Nat Methods 15: 962-968 (2018).\nhttp://huttenhower.sph.harvard.edu/humann2\nBioLockJ module developed by Mike Siota",
 "usage": "#BioModule biolockj.module.classifier.wgs.Humann2Classifier",
 "pre-req modules": [],
@@ -399,22 +537,17 @@
 {
 "property": "cluster.statusCommand",
 "type": "string",
-"description": "Terminal command used to submit jobs on the cluster"
-},
-{
-"property": "docker.imgVersion",
-"type": "string",
-"description": "indicate specific version of Docker images"
+"description": "Terminal command used to check the status of jobs on the cluster"
 },
 {
 "property": "docker.saveContainerOnExit",
 "type": "boolean",
-"description": "if ture, docker run command will NOT include the --rm flag"
+"description": "If Y, docker run command will NOT include the --rm flag"
 },
 {
-"property": "docker.user",
-"type": "string",
-"description": "name of the Docker Hub user for getting docker containers"
+"property": "docker.verifyImage",
+"type": "boolean",
+"description": "In check dependencies, run a test to verify the docker image."
 },
 {
 "property": "exe.humann2",
@@ -458,6 +591,13 @@
 ]
 },
 {
+"menuPlacement": [
+"biolockj",
+"module",
+"classifier",
+"wgs",
+"Kraken2Classifier"
+],
 "citation": "Improved metagenomic analysis with Kraken 2\r\nDerrick E. Wood, Jennifer Lu, Ben Langmead\r\nbioRxiv 762302; doi: https://doi.org/10.1101/762302",
 "usage": "#BioModule biolockj.module.classifier.wgs.Kraken2Classifier",
 "pre-req modules": [],
@@ -489,22 +629,17 @@
 {
 "property": "cluster.statusCommand",
 "type": "string",
-"description": "Terminal command used to submit jobs on the cluster"
-},
-{
-"property": "docker.imgVersion",
-"type": "string",
-"description": "indicate specific version of Docker images"
+"description": "Terminal command used to check the status of jobs on the cluster"
 },
 {
 "property": "docker.saveContainerOnExit",
 "type": "boolean",
-"description": "if ture, docker run command will NOT include the --rm flag"
+"description": "If Y, docker run command will NOT include the --rm flag"
 },
 {
-"property": "docker.user",
-"type": "string",
-"description": "name of the Docker Hub user for getting docker containers"
+"property": "docker.verifyImage",
+"type": "boolean",
+"description": "In check dependencies, run a test to verify the docker image."
 },
 {
 "property": "exe.kraken2",
@@ -545,11 +680,18 @@
 ]
 },
 {
+"menuPlacement": [
+"biolockj",
+"module",
+"classifier",
+"wgs",
+"KrakenClassifier"
+],
 "citation": "Wood DE, Salzberg SL: Kraken: ultrafast metagenomic sequence classification using exact alignments. Genome Biology 2014, 15:R46.",
 "usage": "#BioModule biolockj.module.classifier.wgs.KrakenClassifier",
 "pre-req modules": [],
 "description": "Classify WGS samples with KRAKEN.",
-"details": "Classify WGS samples with [KRAKEN](http://ccb.jhu.edu/software/kraken/).",
+"details": "Classify WGS samples with [KRAKEN](http://ccb.jhu.edu/software/kraken/). \nIf running in docker, the default docker container contains a kmer database which will be used if no database is supplied through the `kraken.db` property.",
 "post-req modules": ["biolockj.module.implicit.parser.wgs.KrakenParser"],
 "title": "KrakenClassifier",
 "properties": [
@@ -576,22 +718,17 @@
 {
 "property": "cluster.statusCommand",
 "type": "string",
-"description": "Terminal command used to submit jobs on the cluster"
-},
-{
-"property": "docker.imgVersion",
-"type": "string",
-"description": "indicate specific version of Docker images"
+"description": "Terminal command used to check the status of jobs on the cluster"
 },
 {
 "property": "docker.saveContainerOnExit",
 "type": "boolean",
-"description": "if ture, docker run command will NOT include the --rm flag"
+"description": "If Y, docker run command will NOT include the --rm flag"
 },
 {
-"property": "docker.user",
-"type": "string",
-"description": "name of the Docker Hub user for getting docker containers"
+"property": "docker.verifyImage",
+"type": "boolean",
+"description": "In check dependencies, run a test to verify the docker image."
 },
 {
 "property": "exe.kraken",
@@ -635,6 +772,13 @@
 ]
 },
 {
+"menuPlacement": [
+"biolockj",
+"module",
+"classifier",
+"wgs",
+"Metaphlan2Classifier"
+],
 "citation": "MetaPhlAn2 for enhanced metagenomic taxonomic profiling. Duy Tin Truong, Eric A Franzosa, Timothy L Tickle, Matthias Scholz, George Weingart, Edoardo Pasolli, Adrian Tett, Curtis Huttenhower & Nicola Segata. Nature Methods 12, 902-903 (2015)",
 "usage": "#BioModule biolockj.module.classifier.wgs.Metaphlan2Classifier",
 "pre-req modules": [],
@@ -666,22 +810,17 @@
 {
 "property": "cluster.statusCommand",
 "type": "string",
-"description": "Terminal command used to submit jobs on the cluster"
-},
-{
-"property": "docker.imgVersion",
-"type": "string",
-"description": "indicate specific version of Docker images"
+"description": "Terminal command used to check the status of jobs on the cluster"
 },
 {
 "property": "docker.saveContainerOnExit",
 "type": "boolean",
-"description": "if ture, docker run command will NOT include the --rm flag"
+"description": "If Y, docker run command will NOT include the --rm flag"
 },
 {
-"property": "docker.user",
-"type": "string",
-"description": "name of the Docker Hub user for getting docker containers"
+"property": "docker.verifyImage",
+"type": "boolean",
+"description": "In check dependencies, run a test to verify the docker image."
 },
 {
 "property": "exe.metaphlan2",
@@ -723,13 +862,17 @@
 ]
 },
 {
-"citation": "BioLockJ <VERSION>",
-"usage": "#BioModule biolockj.module.diy.GenMod",
-"pre-req modules": [],
-"description": "Allows user to add their own scripts into the BioLockJ pipeline.",
-"details": "",
-"post-req modules": [],
-"title": "GenMod",
+"menuPlacement": [
+"biolockj",
+"module",
+"diversity",
+"ShannonDiversity"
+],
+"citation": "Module developed by Anthony Fodor\nBioLockJ <VERSION>",
+"usage": "#BioModule biolockj.module.diversity.ShannonDiversity",
+"description": "Calculate shannon diversity as sum p(logp)",
+"details": "*If the pipeline input does not include at least one taxa table, then the BuildTaxaTables class is added by this module as a pre-requisite.*\n",
+"title": "ShannonDiversity",
 "properties": [
 {
 "property": "cluster.batchCommand",
@@ -754,26 +897,18 @@
 {
 "property": "cluster.statusCommand",
 "type": "string",
-"description": "Terminal command used to submit jobs on the cluster"
-},
-{
-"property": "docker.imgVersion",
-"type": "string",
-"description": "indicate specific version of Docker images"
+"description": "Terminal command used to check the status of jobs on the cluster"
 },
 {
 "property": "docker.saveContainerOnExit",
 "type": "boolean",
-"description": "if ture, docker run command will NOT include the --rm flag"
+"description": "If Y, docker run command will NOT include the --rm flag"
 },
 {
-"property": "docker.user",
-"type": "string",
-"description": "name of the Docker Hub user for getting docker containers"
+"property": "docker.verifyImage",
+"type": "boolean",
+"description": "In check dependencies, run a test to verify the docker image."
 },
-{"property": "genMod.launcher"},
-{"property": "genMod.param"},
-{"property": "genMod.scriptPath"},
 {
 "property": "script.defaultHeader",
 "description": "Store default script header for MAIN script and locally run WORKER scripts.",
@@ -806,13 +941,19 @@
 ]
 },
 {
-"citation": "Module developed by Mike Sioda\nBioLockj <VERSION>",
-"usage": "#BioModule biolockj.module.implicit.Demultiplexer",
+"menuPlacement": [
+"biolockj",
+"module",
+"diy",
+"GenMod"
+],
+"citation": "BioLockJ <VERSION>",
+"usage": "#BioModule biolockj.module.diy.GenMod",
 "pre-req modules": [],
-"description": "Demultiplex samples into separate files for each sample.",
-"details": "",
+"description": "Allows user to add their own scripts into the BioLockJ pipeline.",
+"details": " \nThe specified script is executed using the modules script directory as the current working directory. A _scriptPath_ is required. If specified, the _launcher_ program (ie R, Python) will be used. If specified, any _param_ will be listed as arguments to the script. If running in docker, _dockerContainerName_ is required. \n \nThis is ideal for: \n \n README.md basicRealTest.sh basicRealTest_v1.3.1-22-g232c7fa5_NOT_IN_GIT.txt basicRealTest_v1.3.1-22-g40e95fbd_NOT_IN_GIT.txt basicRealTest_v1.3.1-5-g7f6daf66_NOT_IN_GIT.txt basicRealTest_v1.3.2-18-g2b387977_NOT_IN_GIT.txt basicRealTest_v1.3.2-19-gc3bff5e9_NOT_IN_GIT.txt basicRealTest_v1.3.3-9-gcc07f2ca_NOT_IN_GIT.txt basicRealTest_v1.3.4-rc_NOT_IN_GIT.txt configFile empty_testList.txt empty_testList_results_NOT_IN_GIT.txt expected generalize.sh output output-api pipelines restartDir testAPI.sh testAPI_v1.3.1-22-g232c7fa5_NOT_IN_GIT.txt testAPI_v1.3.1-22-g40e95fbd_NOT_IN_GIT.txt testAPI_v1.3.1-5-g7f6daf66_NOT_IN_GIT.txt testAPI_v1.3.2-18-g2b387977_NOT_IN_GIT.txt testAPI_v1.3.2-19-gc3bff5e9_NOT_IN_GIT.txt testAPI_v1.3.3-9-gcc07f2ca_NOT_IN_GIT.txt testAPI_v1.3.4-rc_NOT_IN_GIT.txt testCommandLine.sh testCommandLine_v1.3.1-22-g232c7fa5_NOT_IN_GIT.txt testCommandLine_v1.3.1-22-g40e95fbd_NOT_IN_GIT.txt testCommandLine_v1.3.1-5-g7f6daf66_NOT_IN_GIT.txt testCommandLine_v1.3.2-18-g2b387977_NOT_IN_GIT.txt testCommandLine_v1.3.2-19-gc3bff5e9_NOT_IN_GIT.txt testCommandLine_v1.3.3-9-gcc07f2ca_NOT_IN_GIT.txt testCommandLine_v1.3.4-rc_NOT_IN_GIT.txt testRestartCylce.sh testRestartCylce_inDocker.sh testRestartCylce_inDocker_v1.3.1-22-g232c7fa5_NOT_IN_GIT.txt testRestartCylce_inDocker_v1.3.1-22-g40e95fbd_NOT_IN_GIT.txt testRestartCylce_inDocker_v1.3.1-5-g7f6daf66_NOT_IN_GIT.txt testRestartCylce_inDocker_v1.3.2-18-g2b387977_NOT_IN_GIT.txt testRestartCylce_inDocker_v1.3.2-19-gc3bff5e9_NOT_IN_GIT.txt testRestartCylce_inDocker_v1.3.3-9-gcc07f2ca_NOT_IN_GIT.txt testRestartCylce_inDocker_v1.3.4-rc_NOT_IN_GIT.txt testRestartCylce_v1.3.1-22-g232c7fa5_NOT_IN_GIT.txt testRestartCylce_v1.3.1-22-g40e95fbd_NOT_IN_GIT.txt testRestartCylce_v1.3.1-5-g7f6daf66_NOT_IN_GIT.txt testRestartCylce_v1.3.2-18-g2b387977_NOT_IN_GIT.txt testRestartCylce_v1.3.2-19-gc3bff5e9_NOT_IN_GIT.txt testRestartCylce_v1.3.3-9-gcc07f2ca_NOT_IN_GIT.txt testRestartCylce_v1.3.4-rc_NOT_IN_GIT.txt wrap_bash_tests.sh Custom analysis for a given pipeline, such as an R or python script \n README.md basicRealTest.sh basicRealTest_v1.3.1-22-g232c7fa5_NOT_IN_GIT.txt basicRealTest_v1.3.1-22-g40e95fbd_NOT_IN_GIT.txt basicRealTest_v1.3.1-5-g7f6daf66_NOT_IN_GIT.txt basicRealTest_v1.3.2-18-g2b387977_NOT_IN_GIT.txt basicRealTest_v1.3.2-19-gc3bff5e9_NOT_IN_GIT.txt basicRealTest_v1.3.3-9-gcc07f2ca_NOT_IN_GIT.txt basicRealTest_v1.3.4-rc_NOT_IN_GIT.txt configFile empty_testList.txt empty_testList_results_NOT_IN_GIT.txt expected generalize.sh output output-api pipelines restartDir testAPI.sh testAPI_v1.3.1-22-g232c7fa5_NOT_IN_GIT.txt testAPI_v1.3.1-22-g40e95fbd_NOT_IN_GIT.txt testAPI_v1.3.1-5-g7f6daf66_NOT_IN_GIT.txt testAPI_v1.3.2-18-g2b387977_NOT_IN_GIT.txt testAPI_v1.3.2-19-gc3bff5e9_NOT_IN_GIT.txt testAPI_v1.3.3-9-gcc07f2ca_NOT_IN_GIT.txt testAPI_v1.3.4-rc_NOT_IN_GIT.txt testCommandLine.sh testCommandLine_v1.3.1-22-g232c7fa5_NOT_IN_GIT.txt testCommandLine_v1.3.1-22-g40e95fbd_NOT_IN_GIT.txt testCommandLine_v1.3.1-5-g7f6daf66_NOT_IN_GIT.txt testCommandLine_v1.3.2-18-g2b387977_NOT_IN_GIT.txt testCommandLine_v1.3.2-19-gc3bff5e9_NOT_IN_GIT.txt testCommandLine_v1.3.3-9-gcc07f2ca_NOT_IN_GIT.txt testCommandLine_v1.3.4-rc_NOT_IN_GIT.txt testRestartCylce.sh testRestartCylce_inDocker.sh testRestartCylce_inDocker_v1.3.1-22-g232c7fa5_NOT_IN_GIT.txt testRestartCylce_inDocker_v1.3.1-22-g40e95fbd_NOT_IN_GIT.txt testRestartCylce_inDocker_v1.3.1-5-g7f6daf66_NOT_IN_GIT.txt testRestartCylce_inDocker_v1.3.2-18-g2b387977_NOT_IN_GIT.txt testRestartCylce_inDocker_v1.3.2-19-gc3bff5e9_NOT_IN_GIT.txt testRestartCylce_inDocker_v1.3.3-9-gcc07f2ca_NOT_IN_GIT.txt testRestartCylce_inDocker_v1.3.4-rc_NOT_IN_GIT.txt testRestartCylce_v1.3.1-22-g232c7fa5_NOT_IN_GIT.txt testRestartCylce_v1.3.1-22-g40e95fbd_NOT_IN_GIT.txt testRestartCylce_v1.3.1-5-g7f6daf66_NOT_IN_GIT.txt testRestartCylce_v1.3.2-18-g2b387977_NOT_IN_GIT.txt testRestartCylce_v1.3.2-19-gc3bff5e9_NOT_IN_GIT.txt testRestartCylce_v1.3.3-9-gcc07f2ca_NOT_IN_GIT.txt testRestartCylce_v1.3.4-rc_NOT_IN_GIT.txt wrap_bash_tests.sh Any steps where an appropriate BioLockJ module does not exist \n \nAny step in your analysis process that might otherwise have to be done manually can be stored as a custom script so that the entire process is as reproducible as possible. \n \nIt is STRONGLY encouraged that users write scripts using common module conventions: \n \n README.md basicRealTest.sh basicRealTest_v1.3.1-22-g232c7fa5_NOT_IN_GIT.txt basicRealTest_v1.3.1-22-g40e95fbd_NOT_IN_GIT.txt basicRealTest_v1.3.1-5-g7f6daf66_NOT_IN_GIT.txt basicRealTest_v1.3.2-18-g2b387977_NOT_IN_GIT.txt basicRealTest_v1.3.2-19-gc3bff5e9_NOT_IN_GIT.txt basicRealTest_v1.3.3-9-gcc07f2ca_NOT_IN_GIT.txt basicRealTest_v1.3.4-rc_NOT_IN_GIT.txt configFile empty_testList.txt empty_testList_results_NOT_IN_GIT.txt expected generalize.sh output output-api pipelines restartDir testAPI.sh testAPI_v1.3.1-22-g232c7fa5_NOT_IN_GIT.txt testAPI_v1.3.1-22-g40e95fbd_NOT_IN_GIT.txt testAPI_v1.3.1-5-g7f6daf66_NOT_IN_GIT.txt testAPI_v1.3.2-18-g2b387977_NOT_IN_GIT.txt testAPI_v1.3.2-19-gc3bff5e9_NOT_IN_GIT.txt testAPI_v1.3.3-9-gcc07f2ca_NOT_IN_GIT.txt testAPI_v1.3.4-rc_NOT_IN_GIT.txt testCommandLine.sh testCommandLine_v1.3.1-22-g232c7fa5_NOT_IN_GIT.txt testCommandLine_v1.3.1-22-g40e95fbd_NOT_IN_GIT.txt testCommandLine_v1.3.1-5-g7f6daf66_NOT_IN_GIT.txt testCommandLine_v1.3.2-18-g2b387977_NOT_IN_GIT.txt testCommandLine_v1.3.2-19-gc3bff5e9_NOT_IN_GIT.txt testCommandLine_v1.3.3-9-gcc07f2ca_NOT_IN_GIT.txt testCommandLine_v1.3.4-rc_NOT_IN_GIT.txt testRestartCylce.sh testRestartCylce_inDocker.sh testRestartCylce_inDocker_v1.3.1-22-g232c7fa5_NOT_IN_GIT.txt testRestartCylce_inDocker_v1.3.1-22-g40e95fbd_NOT_IN_GIT.txt testRestartCylce_inDocker_v1.3.1-5-g7f6daf66_NOT_IN_GIT.txt testRestartCylce_inDocker_v1.3.2-18-g2b387977_NOT_IN_GIT.txt testRestartCylce_inDocker_v1.3.2-19-gc3bff5e9_NOT_IN_GIT.txt testRestartCylce_inDocker_v1.3.3-9-gcc07f2ca_NOT_IN_GIT.txt testRestartCylce_inDocker_v1.3.4-rc_NOT_IN_GIT.txt testRestartCylce_v1.3.1-22-g232c7fa5_NOT_IN_GIT.txt testRestartCylce_v1.3.1-22-g40e95fbd_NOT_IN_GIT.txt testRestartCylce_v1.3.1-5-g7f6daf66_NOT_IN_GIT.txt testRestartCylce_v1.3.2-18-g2b387977_NOT_IN_GIT.txt testRestartCylce_v1.3.2-19-gc3bff5e9_NOT_IN_GIT.txt testRestartCylce_v1.3.3-9-gcc07f2ca_NOT_IN_GIT.txt testRestartCylce_v1.3.4-rc_NOT_IN_GIT.txt wrap_bash_tests.sh use relative file paths (starting with `.` or `..`) \n README.md basicRealTest.sh basicRealTest_v1.3.1-22-g232c7fa5_NOT_IN_GIT.txt basicRealTest_v1.3.1-22-g40e95fbd_NOT_IN_GIT.txt basicRealTest_v1.3.1-5-g7f6daf66_NOT_IN_GIT.txt basicRealTest_v1.3.2-18-g2b387977_NOT_IN_GIT.txt basicRealTest_v1.3.2-19-gc3bff5e9_NOT_IN_GIT.txt basicRealTest_v1.3.3-9-gcc07f2ca_NOT_IN_GIT.txt basicRealTest_v1.3.4-rc_NOT_IN_GIT.txt configFile empty_testList.txt empty_testList_results_NOT_IN_GIT.txt expected generalize.sh output output-api pipelines restartDir testAPI.sh testAPI_v1.3.1-22-g232c7fa5_NOT_IN_GIT.txt testAPI_v1.3.1-22-g40e95fbd_NOT_IN_GIT.txt testAPI_v1.3.1-5-g7f6daf66_NOT_IN_GIT.txt testAPI_v1.3.2-18-g2b387977_NOT_IN_GIT.txt testAPI_v1.3.2-19-gc3bff5e9_NOT_IN_GIT.txt testAPI_v1.3.3-9-gcc07f2ca_NOT_IN_GIT.txt testAPI_v1.3.4-rc_NOT_IN_GIT.txt testCommandLine.sh testCommandLine_v1.3.1-22-g232c7fa5_NOT_IN_GIT.txt testCommandLine_v1.3.1-22-g40e95fbd_NOT_IN_GIT.txt testCommandLine_v1.3.1-5-g7f6daf66_NOT_IN_GIT.txt testCommandLine_v1.3.2-18-g2b387977_NOT_IN_GIT.txt testCommandLine_v1.3.2-19-gc3bff5e9_NOT_IN_GIT.txt testCommandLine_v1.3.3-9-gcc07f2ca_NOT_IN_GIT.txt testCommandLine_v1.3.4-rc_NOT_IN_GIT.txt testRestartCylce.sh testRestartCylce_inDocker.sh testRestartCylce_inDocker_v1.3.1-22-g232c7fa5_NOT_IN_GIT.txt testRestartCylce_inDocker_v1.3.1-22-g40e95fbd_NOT_IN_GIT.txt testRestartCylce_inDocker_v1.3.1-5-g7f6daf66_NOT_IN_GIT.txt testRestartCylce_inDocker_v1.3.2-18-g2b387977_NOT_IN_GIT.txt testRestartCylce_inDocker_v1.3.2-19-gc3bff5e9_NOT_IN_GIT.txt testRestartCylce_inDocker_v1.3.3-9-gcc07f2ca_NOT_IN_GIT.txt testRestartCylce_inDocker_v1.3.4-rc_NOT_IN_GIT.txt testRestartCylce_v1.3.1-22-g232c7fa5_NOT_IN_GIT.txt testRestartCylce_v1.3.1-22-g40e95fbd_NOT_IN_GIT.txt testRestartCylce_v1.3.1-5-g7f6daf66_NOT_IN_GIT.txt testRestartCylce_v1.3.2-18-g2b387977_NOT_IN_GIT.txt testRestartCylce_v1.3.2-19-gc3bff5e9_NOT_IN_GIT.txt testRestartCylce_v1.3.3-9-gcc07f2ca_NOT_IN_GIT.txt testRestartCylce_v1.3.4-rc_NOT_IN_GIT.txt wrap_bash_tests.sh put all generated output in the modules `output` directory (`../output`) \n README.md basicRealTest.sh basicRealTest_v1.3.1-22-g232c7fa5_NOT_IN_GIT.txt basicRealTest_v1.3.1-22-g40e95fbd_NOT_IN_GIT.txt basicRealTest_v1.3.1-5-g7f6daf66_NOT_IN_GIT.txt basicRealTest_v1.3.2-18-g2b387977_NOT_IN_GIT.txt basicRealTest_v1.3.2-19-gc3bff5e9_NOT_IN_GIT.txt basicRealTest_v1.3.3-9-gcc07f2ca_NOT_IN_GIT.txt basicRealTest_v1.3.4-rc_NOT_IN_GIT.txt configFile empty_testList.txt empty_testList_results_NOT_IN_GIT.txt expected generalize.sh output output-api pipelines restartDir testAPI.sh testAPI_v1.3.1-22-g232c7fa5_NOT_IN_GIT.txt testAPI_v1.3.1-22-g40e95fbd_NOT_IN_GIT.txt testAPI_v1.3.1-5-g7f6daf66_NOT_IN_GIT.txt testAPI_v1.3.2-18-g2b387977_NOT_IN_GIT.txt testAPI_v1.3.2-19-gc3bff5e9_NOT_IN_GIT.txt testAPI_v1.3.3-9-gcc07f2ca_NOT_IN_GIT.txt testAPI_v1.3.4-rc_NOT_IN_GIT.txt testCommandLine.sh testCommandLine_v1.3.1-22-g232c7fa5_NOT_IN_GIT.txt testCommandLine_v1.3.1-22-g40e95fbd_NOT_IN_GIT.txt testCommandLine_v1.3.1-5-g7f6daf66_NOT_IN_GIT.txt testCommandLine_v1.3.2-18-g2b387977_NOT_IN_GIT.txt testCommandLine_v1.3.2-19-gc3bff5e9_NOT_IN_GIT.txt testCommandLine_v1.3.3-9-gcc07f2ca_NOT_IN_GIT.txt testCommandLine_v1.3.4-rc_NOT_IN_GIT.txt testRestartCylce.sh testRestartCylce_inDocker.sh testRestartCylce_inDocker_v1.3.1-22-g232c7fa5_NOT_IN_GIT.txt testRestartCylce_inDocker_v1.3.1-22-g40e95fbd_NOT_IN_GIT.txt testRestartCylce_inDocker_v1.3.1-5-g7f6daf66_NOT_IN_GIT.txt testRestartCylce_inDocker_v1.3.2-18-g2b387977_NOT_IN_GIT.txt testRestartCylce_inDocker_v1.3.2-19-gc3bff5e9_NOT_IN_GIT.txt testRestartCylce_inDocker_v1.3.3-9-gcc07f2ca_NOT_IN_GIT.txt testRestartCylce_inDocker_v1.3.4-rc_NOT_IN_GIT.txt testRestartCylce_v1.3.1-22-g232c7fa5_NOT_IN_GIT.txt testRestartCylce_v1.3.1-22-g40e95fbd_NOT_IN_GIT.txt testRestartCylce_v1.3.1-5-g7f6daf66_NOT_IN_GIT.txt testRestartCylce_v1.3.2-18-g2b387977_NOT_IN_GIT.txt testRestartCylce_v1.3.2-19-gc3bff5e9_NOT_IN_GIT.txt testRestartCylce_v1.3.3-9-gcc07f2ca_NOT_IN_GIT.txt testRestartCylce_v1.3.4-rc_NOT_IN_GIT.txt wrap_bash_tests.sh put any temporary files in the modules `temp` directory (`../tmep`). \n README.md basicRealTest.sh basicRealTest_v1.3.1-22-g232c7fa5_NOT_IN_GIT.txt basicRealTest_v1.3.1-22-g40e95fbd_NOT_IN_GIT.txt basicRealTest_v1.3.1-5-g7f6daf66_NOT_IN_GIT.txt basicRealTest_v1.3.2-18-g2b387977_NOT_IN_GIT.txt basicRealTest_v1.3.2-19-gc3bff5e9_NOT_IN_GIT.txt basicRealTest_v1.3.3-9-gcc07f2ca_NOT_IN_GIT.txt basicRealTest_v1.3.4-rc_NOT_IN_GIT.txt configFile empty_testList.txt empty_testList_results_NOT_IN_GIT.txt expected generalize.sh output output-api pipelines restartDir testAPI.sh testAPI_v1.3.1-22-g232c7fa5_NOT_IN_GIT.txt testAPI_v1.3.1-22-g40e95fbd_NOT_IN_GIT.txt testAPI_v1.3.1-5-g7f6daf66_NOT_IN_GIT.txt testAPI_v1.3.2-18-g2b387977_NOT_IN_GIT.txt testAPI_v1.3.2-19-gc3bff5e9_NOT_IN_GIT.txt testAPI_v1.3.3-9-gcc07f2ca_NOT_IN_GIT.txt testAPI_v1.3.4-rc_NOT_IN_GIT.txt testCommandLine.sh testCommandLine_v1.3.1-22-g232c7fa5_NOT_IN_GIT.txt testCommandLine_v1.3.1-22-g40e95fbd_NOT_IN_GIT.txt testCommandLine_v1.3.1-5-g7f6daf66_NOT_IN_GIT.txt testCommandLine_v1.3.2-18-g2b387977_NOT_IN_GIT.txt testCommandLine_v1.3.2-19-gc3bff5e9_NOT_IN_GIT.txt testCommandLine_v1.3.3-9-gcc07f2ca_NOT_IN_GIT.txt testCommandLine_v1.3.4-rc_NOT_IN_GIT.txt testRestartCylce.sh testRestartCylce_inDocker.sh testRestartCylce_inDocker_v1.3.1-22-g232c7fa5_NOT_IN_GIT.txt testRestartCylce_inDocker_v1.3.1-22-g40e95fbd_NOT_IN_GIT.txt testRestartCylce_inDocker_v1.3.1-5-g7f6daf66_NOT_IN_GIT.txt testRestartCylce_inDocker_v1.3.2-18-g2b387977_NOT_IN_GIT.txt testRestartCylce_inDocker_v1.3.2-19-gc3bff5e9_NOT_IN_GIT.txt testRestartCylce_inDocker_v1.3.3-9-gcc07f2ca_NOT_IN_GIT.txt testRestartCylce_inDocker_v1.3.4-rc_NOT_IN_GIT.txt testRestartCylce_v1.3.1-22-g232c7fa5_NOT_IN_GIT.txt testRestartCylce_v1.3.1-22-g40e95fbd_NOT_IN_GIT.txt testRestartCylce_v1.3.1-5-g7f6daf66_NOT_IN_GIT.txt testRestartCylce_v1.3.2-18-g2b387977_NOT_IN_GIT.txt testRestartCylce_v1.3.2-19-gc3bff5e9_NOT_IN_GIT.txt testRestartCylce_v1.3.3-9-gcc07f2ca_NOT_IN_GIT.txt testRestartCylce_v1.3.4-rc_NOT_IN_GIT.txt wrap_bash_tests.sh the main pipeline directory would be `../..`, and the output of a previous module such as `PearMergedReads` would be in `../../*_PearMergedReads/output` \n \nTo use the GenMod module multiple times in a single pipeline, use the `AS` keyword to direct properties to the correct instance of the module. \n \nFor example: \n``` \n#BioModule biolockj.module.diy.GenMod AS Part1 \n#<other modules> \n#BioModule biolockj.module.diy.GenMod AS Part2 \n \nPart1.launcher=python \nPart1.script=path/to/first/script.py \n \nPart2.script=path/to/bash/script/doLast.sh \n``` \nWith this, `script.py` will be run using python. Then other modules will run. Then `doLast.sh` will be run using the default system (probably bash, unless it has a shebang line specifiying something else). \n",
 "post-req modules": [],
-"title": "Demultiplexer",
+"title": "GenMod",
 "properties": [
 {
 "property": "cluster.batchCommand",
@@ -837,35 +978,21 @@
 {
 "property": "cluster.statusCommand",
 "type": "string",
-"description": "Terminal command used to submit jobs on the cluster"
-},
-{
-"property": "demultiplexer.barcodeCutoff",
-"default": "0.05"
-},
-{"property": "demultiplexer.barcodeRevComp"},
-{"property": "demultiplexer.strategy"},
-{
-"property": "docker.imgVersion",
-"type": "string",
-"description": "indicate specific version of Docker images"
+"description": "Terminal command used to check the status of jobs on the cluster"
 },
 {
 "property": "docker.saveContainerOnExit",
 "type": "boolean",
-"description": "if ture, docker run command will NOT include the --rm flag"
-},
-{
-"property": "docker.user",
-"type": "string",
-"description": "name of the Docker Hub user for getting docker containers"
+"description": "If Y, docker run command will NOT include the --rm flag"
 },
 {
-"property": "metadata.barcodeColumn",
-"description": "metadata column with identifying barcodes",
-"default": "BarcodeSequence",
-"type": "string"
+"property": "docker.verifyImage",
+"type": "boolean",
+"description": "In check dependencies, run a test to verify the docker image."
 },
+{"property": "genMod.launcher"},
+{"property": "genMod.param"},
+{"property": "genMod.scriptPath"},
 {
 "property": "script.defaultHeader",
 "description": "Store default script header for MAIN script and locally run WORKER scripts.",
@@ -898,13 +1025,20 @@
 ]
 },
 {
-"citation": "Module developed by Mike Sioda\nBioLockj <VERSION>",
-"usage": "#BioModule biolockj.module.implicit.parser.r16s.RdpParser",
+"menuPlacement": [
+"biolockj",
+"module",
+"getData",
+"sra",
+"SraDownload"
+],
+"citation": "[sra-tools](https://github.com/ncbi/sra-tools)\nModule developed by Philip Badzuh\nBioLockJ <VERSION>",
+"usage": "#BioModule biolockj.module.getData.sra.SraDownload",
 "pre-req modules": [],
-"description": "Build OTU tables from [RDP](http://rdp.cme.msu.edu/classifier/classifier.jsp) reports.",
-"details": "",
+"description": "SraDownload downloads and compresses short read archive (SRA) files to fastq.gz",
+"details": "Downloading and compressing files requires fasterq-dump and gzip.The accessions to download can be specified using any ONE of the following:<br> 1. A metadata file (given by *metadata.filePath* that has column *sra.accessionIdColumn*.<br> 2. *sra.sraProjectId*, OR <br> 3. *sra.sraAccList*<br>\n*sra.destinationDir* gives an external directory that can be shared across pipelines. This is recommended. If it is not specified, the files will be downlaoded to this modules output directory. <br>\nSuggested: input.dirPaths = ${sra.destinationDir}<br>\nTypically, BioLockJ will automatically determine modules to add to the pipeline to process sequence data. If the files are not present on the system when the pipeline starts, then it is up to the user to configure any and all sequence processing modules.",
 "post-req modules": [],
-"title": "RdpParser",
+"title": "SraDownload",
 "properties": [
 {
 "property": "cluster.batchCommand",
@@ -929,26 +1063,32 @@
 {
 "property": "cluster.statusCommand",
 "type": "string",
-"description": "Terminal command used to submit jobs on the cluster"
+"description": "Terminal command used to check the status of jobs on the cluster"
 },
 {
-"property": "docker.imgVersion",
-"type": "string",
-"description": "indicate specific version of Docker images"
+"property": "docker.saveContainerOnExit",
+"type": "boolean",
+"description": "If Y, docker run command will NOT include the --rm flag"
 },
 {
-"property": "docker.saveContainerOnExit",
+"property": "docker.verifyImage",
 "type": "boolean",
-"description": "if ture, docker run command will NOT include the --rm flag"
+"description": "In check dependencies, run a test to verify the docker image."
 },
 {
-"property": "docker.user",
-"type": "string",
-"description": "name of the Docker Hub user for getting docker containers"
+"property": "exe.fasterq-dump",
+"type": "executable",
+"description": "Path for the \"fasterq-dump\" executable; if not supplied, any script that needs the fasterq-dump command will assume it is on the PATH."
 },
 {
-"property": "rdp.minThresholdScore",
-"default": "80"
+"property": "exe.gzip",
+"type": "executable",
+"description": "Path for the \"gzip\" executable; if not supplied, any script that needs the gzip command will assume it is on the PATH."
+},
+{
+"property": "metadata.filePath",
+"type": "string",
+"description": "If absolute file path, use file as metadata.<br>If directory path, must find exactly 1 file within, to use as metadata."
 },
 {
 "property": "script.defaultHeader",
@@ -978,17 +1118,28 @@
 "property": "script.timeout",
 "type": "integer",
 "description": "Sets # of minutes before worker scripts times out."
-}
+},
+{"property": "sra.accessionIdColumn"},
+{"property": "sra.destinationDir"},
+{"property": "sra.sraAccList"},
+{"property": "sra.sraProjectId"}
 ]
 },
 {
-"citation": "Module developed by Mike Sioda\nBioLockJ <VERSION>",
-"usage": "#BioModule biolockj.module.implicit.parser.wgs.Humann2Parser",
+"menuPlacement": [
+"biolockj",
+"module",
+"getData",
+"sra",
+"SraMetaDB"
+],
+"citation": "Module developed by Malcolm Zapatas and Ivory Blakley\nBioLockJ <VERSION>",
+"usage": "#BioModule biolockj.module.getData.sra.SraMetaDB",
 "pre-req modules": [],
-"description": "Build OTU tables from HumanN2 classifier module output.",
-"details": "",
+"description": "Makes sure that the SRAmetadb exists, downloads if it does not already exist.",
+"details": "If *sra.forceDbUpdate* is set to Y, then the zipped form of the database is downloaded, and kept and used to compare the local version to the server version; and the server version is downloaded if it is newer.\n\nServer version location: https://starbuck1.s3.amazonaws.com/sradb/SRAmetadb.sqlite.gz\n\n*sra.metaDataDir* directory must exist. If the database does not exist at that location, it will be downloaded.\n\nThe download process is somewhat error-prone, especially in docker. The download is about 4GB and the unzipped database is up to 30GB.It is generally recommended to download and unzip the database manually:\n\nwget https://starbuck1.s3.amazonaws.com/sradb/SRAmetadb.sqlite.gz; <br>gunzip SRAmetadb.sqlite",
 "post-req modules": [],
-"title": "Humann2Parser",
+"title": "SraMetaDB",
 "properties": [
 {
 "property": "cluster.batchCommand",
@@ -1013,25 +1164,28 @@
 {
 "property": "cluster.statusCommand",
 "type": "string",
-"description": "Terminal command used to submit jobs on the cluster"
+"description": "Terminal command used to check the status of jobs on the cluster"
 },
 {
-"property": "docker.imgVersion",
-"type": "string",
-"description": "indicate specific version of Docker images"
+"property": "docker.saveContainerOnExit",
+"type": "boolean",
+"description": "If Y, docker run command will NOT include the --rm flag"
 },
 {
-"property": "docker.saveContainerOnExit",
+"property": "docker.verifyImage",
 "type": "boolean",
-"description": "if ture, docker run command will NOT include the --rm flag"
+"description": "In check dependencies, run a test to verify the docker image."
 },
 {
-"property": "docker.user",
-"type": "string",
-"description": "name of the Docker Hub user for getting docker containers"
+"property": "exe.gunzip",
+"type": "executable",
+"description": "Path for the \"gunzip\" executable; if not supplied, any script that needs the gunzip command will assume it is on the PATH."
+},
+{
+"property": "exe.wget",
+"type": "executable",
+"description": "Path for the \"wget\" executable; if not supplied, any script that needs the wget command will assume it is on the PATH."
 },
-{"property": "humann2.keepUnintegrated"},
-{"property": "humann2.keepUnmapped"},
 {
 "property": "script.defaultHeader",
 "description": "Store default script header for MAIN script and locally run WORKER scripts.",
@@ -1060,17 +1214,26 @@
 "property": "script.timeout",
 "type": "integer",
 "description": "Sets # of minutes before worker scripts times out."
-}
+},
+{"property": "sra.forceDbUpdate"},
+{"property": "sra.metaDataDir"}
 ]
 },
 {
-"citation": "Module developed by Mike Sioda\nBioLockj <VERSION>",
-"usage": "#BioModule biolockj.module.implicit.parser.wgs.KrakenParser",
-"pre-req modules": [],
-"description": "Build OTU tables from [KRAKEN](http://ccb.jhu.edu/software/kraken/) mpa-format reports.",
-"details": "",
+"menuPlacement": [
+"biolockj",
+"module",
+"getData",
+"sra",
+"SraMetaData"
+],
+"citation": "Module developed by Malcolm Zapatas and Ivory Blakley\nBioLockJ <VERSION>",
+"usage": "#BioModule biolockj.module.getData.sra.SraMetaData",
+"pre-req modules": ["biolockj.module.getData.sra.SraMetaDB"],
+"description": "Extract metadata via pysradb from local copy of SRAmetadb.sqlite.",
+"details": "The **biolockj.module.getData.sra.SraMetaDB** module is added a pre-requisite to ensure that the database is available.",
 "post-req modules": [],
-"title": "KrakenParser",
+"title": "SraMetaData",
 "properties": [
 {
 "property": "cluster.batchCommand",
@@ -1095,30 +1258,768 @@
 {
 "property": "cluster.statusCommand",
 "type": "string",
-"description": "Terminal command used to submit jobs on the cluster"
+"description": "Terminal command used to check the status of jobs on the cluster"
 },
 {
-"property": "docker.imgVersion",
-"type": "string",
-"description": "indicate specific version of Docker images"
+"property": "docker.saveContainerOnExit",
+"type": "boolean",
+"description": "If Y, docker run command will NOT include the --rm flag"
 },
 {
-"property": "docker.saveContainerOnExit",
+"property": "docker.verifyImage",
 "type": "boolean",
-"description": "if ture, docker run command will NOT include the --rm flag"
+"description": "In check dependencies, run a test to verify the docker image."
 },
 {
-"property": "docker.user",
-"type": "string",
-"description": "name of the Docker Hub user for getting docker containers"
+"property": "exe.pysradb",
+"type": "executable",
+"description": "Path for the \"pysradb\" executable; if not supplied, any script that needs the pysradb command will assume it is on the PATH."
 },
 {
-"property": "report.unclassifiedTaxa",
-"description": "report unclassified taxa",
+"property": "script.defaultHeader",
+"description": "Store default script header for MAIN script and locally run WORKER scripts.",
+"default": "#!/bin/bash",
+"type": "string"
+},
+{
+"property": "script.numThreads",
+"description": "Used to reserve cluster resources and passed to any external application call that accepts a numThreads parameter.",
+"default": "8",
+"type": "integer"
+},
+{
+"property": "script.numWorkers",
+"description": "Set number of samples to process per script (if parallel processing)",
+"default": "1",
+"type": "integer"
+},
+{
+"property": "script.permissions",
+"description": "Used as chmod permission parameter (ex: 774)",
+"default": "770",
+"type": "string"
+},
+{
+"property": "script.timeout",
+"type": "integer",
+"description": "Sets # of minutes before worker scripts times out."
+},
+{"property": "sra.metaDataDir"},
+{"property": "sra.sraProjectId"}
+]
+},
+{
+"menuPlacement": [
+"biolockj",
+"module",
+"getData",
+"sra",
+"SrpSrrConverter"
+],
+"citation": "Module developed by Malcolm Zapatas and Ivory Blakley\nBioLockJ <VERSION>",
+"usage": "#BioModule biolockj.module.getData.sra.SrpSrrConverter",
+"pre-req modules": [],
+"description": "Create an SraAccList.txt file from an SRA project identifier.",
+"details": "Typcially, this module is only added to the pipeline when SraDownload needs it.<br>\nThis sets the value of *sra.sraAccList* to the SraAccList.txt file in this modules output directory",
+"post-req modules": [],
+"title": "SrpSrrConverter",
+"properties": [
+{
+"property": "cluster.batchCommand",
+"type": "string",
+"description": "Terminal command used to submit jobs on the cluster"
+},
+{
+"property": "cluster.jobHeader",
+"type": "string",
+"description": "Header written at top of worker scripts"
+},
+{
+"property": "cluster.modules",
+"type": "list",
+"description": "List of cluster modules to load at start of worker scripts"
+},
+{
+"property": "cluster.prologue",
+"type": "string",
+"description": "To run at the start of every script after loading cluster modules (if any)"
+},
+{
+"property": "cluster.statusCommand",
+"type": "string",
+"description": "Terminal command used to check the status of jobs on the cluster"
+},
+{
+"property": "docker.saveContainerOnExit",
+"type": "boolean",
+"description": "If Y, docker run command will NOT include the --rm flag"
+},
+{
+"property": "docker.verifyImage",
+"type": "boolean",
+"description": "In check dependencies, run a test to verify the docker image."
+},
+{
+"property": "exe.efetch",
+"type": "executable",
+"description": "Path for the \"efetch\" executable; if not supplied, any script that needs the efetch command will assume it is on the PATH."
+},
+{
+"property": "exe.esearch",
+"type": "executable",
+"description": "Path for the \"esearch\" executable; if not supplied, any script that needs the esearch command will assume it is on the PATH."
+},
+{
+"property": "exe.xtract",
+"type": "executable",
+"description": "Path for the \"xtract\" executable; if not supplied, any script that needs the xtract command will assume it is on the PATH."
+},
+{
+"property": "script.defaultHeader",
+"description": "Store default script header for MAIN script and locally run WORKER scripts.",
+"default": "#!/bin/bash",
+"type": "string"
+},
+{
+"property": "script.numThreads",
+"description": "Used to reserve cluster resources and passed to any external application call that accepts a numThreads parameter.",
+"default": "8",
+"type": "integer"
+},
+{
+"property": "script.numWorkers",
+"description": "Set number of samples to process per script (if parallel processing)",
+"default": "1",
+"type": "integer"
+},
+{
+"property": "script.permissions",
+"description": "Used as chmod permission parameter (ex: 774)",
+"default": "770",
+"type": "string"
+},
+{
+"property": "script.timeout",
+"type": "integer",
+"description": "Sets # of minutes before worker scripts times out."
+},
+{"property": "sra.sraProjectId"}
+]
+},
+{
+"menuPlacement": [
+"biolockj",
+"module",
+"implicit",
+"Demultiplexer"
+],
+"citation": "Module developed by Mike Sioda\nBioLockJ <VERSION>",
+"usage": "#BioModule biolockj.module.implicit.Demultiplexer",
+"pre-req modules": [],
+"description": "Demultiplex samples into separate files for each sample.",
+"details": "",
+"post-req modules": [],
+"title": "Demultiplexer",
+"properties": [
+{
+"property": "cluster.batchCommand",
+"type": "string",
+"description": "Terminal command used to submit jobs on the cluster"
+},
+{
+"property": "cluster.jobHeader",
+"type": "string",
+"description": "Header written at top of worker scripts"
+},
+{
+"property": "cluster.modules",
+"type": "list",
+"description": "List of cluster modules to load at start of worker scripts"
+},
+{
+"property": "cluster.prologue",
+"type": "string",
+"description": "To run at the start of every script after loading cluster modules (if any)"
+},
+{
+"property": "cluster.statusCommand",
+"type": "string",
+"description": "Terminal command used to check the status of jobs on the cluster"
+},
+{
+"property": "demultiplexer.barcodeCutoff",
+"default": "0.05"
+},
+{"property": "demultiplexer.barcodeRevComp"},
+{"property": "demultiplexer.strategy"},
+{
+"property": "docker.saveContainerOnExit",
+"type": "boolean",
+"description": "If Y, docker run command will NOT include the --rm flag"
+},
+{
+"property": "docker.verifyImage",
+"type": "boolean",
+"description": "In check dependencies, run a test to verify the docker image."
+},
+{
+"property": "metadata.barcodeColumn",
+"description": "metadata column with identifying barcodes",
+"default": "BarcodeSequence",
+"type": "string"
+},
+{
+"property": "script.defaultHeader",
+"description": "Store default script header for MAIN script and locally run WORKER scripts.",
+"default": "#!/bin/bash",
+"type": "string"
+},
+{
+"property": "script.numThreads",
+"description": "Used to reserve cluster resources and passed to any external application call that accepts a numThreads parameter.",
+"default": "8",
+"type": "integer"
+},
+{
+"property": "script.numWorkers",
+"description": "Set number of samples to process per script (if parallel processing)",
+"default": "1",
+"type": "integer"
+},
+{
+"property": "script.permissions",
+"description": "Used as chmod permission parameter (ex: 774)",
+"default": "770",
+"type": "string"
+},
+{
+"property": "script.timeout",
+"type": "integer",
+"description": "Sets # of minutes before worker scripts times out."
+}
+]
+},
+{
+"menuPlacement": [
+"biolockj",
+"module",
+"implicit",
+"ImportMetadata"
+],
+"citation": "Module developed by Mike Sioda\nBioLockJ <VERSION>",
+"usage": "#BioModule biolockj.module.implicit.ImportMetadata",
+"pre-req modules": [],
+"description": "Read existing metadata file, or create a default one.",
+"details": "*This module is automatically added to the beginning of every pipeline.*\nThis module ensures that every pipeline has a metadata file, which is requried for modules that add columns to the metadata. If the configuration file does not specify a metadata file, this module will create an empty table with a row for each file in the input directory. This also ensures that any pre-existing metadata file has a suitable format.",
+"post-req modules": [],
+"title": "ImportMetadata",
+"properties": [
+{
+"property": "metadata.columnDelim",
+"description": "defines how metadata columns are separated; Typically files are tab or comma separated.",
+"default": "\\t",
+"type": "string"
+},
+{
+"property": "metadata.filePath",
+"type": "string",
+"description": "If absolute file path, use file as metadata.<br>If directory path, must find exactly 1 file within, to use as metadata."
+}
+]
+},
+{
+"menuPlacement": [
+"biolockj",
+"module",
+"implicit",
+"parser",
+"r16s",
+"RdpParser"
+],
+"citation": "Module developed by Mike Sioda\nBioLockJ <VERSION>",
+"usage": "#BioModule biolockj.module.implicit.parser.r16s.RdpParser",
+"pre-req modules": [],
+"description": "Build OTU tables from [RDP](http://rdp.cme.msu.edu/classifier/classifier.jsp) reports.",
+"details": "",
+"post-req modules": [],
+"title": "RdpParser",
+"properties": [
+{
+"property": "cluster.batchCommand",
+"type": "string",
+"description": "Terminal command used to submit jobs on the cluster"
+},
+{
+"property": "cluster.jobHeader",
+"type": "string",
+"description": "Header written at top of worker scripts"
+},
+{
+"property": "cluster.modules",
+"type": "list",
+"description": "List of cluster modules to load at start of worker scripts"
+},
+{
+"property": "cluster.prologue",
+"type": "string",
+"description": "To run at the start of every script after loading cluster modules (if any)"
+},
+{
+"property": "cluster.statusCommand",
+"type": "string",
+"description": "Terminal command used to check the status of jobs on the cluster"
+},
+{
+"property": "docker.saveContainerOnExit",
+"type": "boolean",
+"description": "If Y, docker run command will NOT include the --rm flag"
+},
+{
+"property": "docker.verifyImage",
+"type": "boolean",
+"description": "In check dependencies, run a test to verify the docker image."
+},
+{
+"property": "rdp.minThresholdScore",
+"default": "80"
+},
+{
+"property": "report.numHits",
+"description": "Options: Y/N. If Y, and add Num_Hits to metadata",
+"default": "Y",
+"type": "boolean"
+},
+{
+"property": "report.unclassifiedTaxa",
+"description": "report unclassified taxa",
+"default": "Y",
+"type": "boolean"
+},
+{
+"property": "script.defaultHeader",
+"description": "Store default script header for MAIN script and locally run WORKER scripts.",
+"default": "#!/bin/bash",
+"type": "string"
+},
+{
+"property": "script.numThreads",
+"description": "Used to reserve cluster resources and passed to any external application call that accepts a numThreads parameter.",
+"default": "8",
+"type": "integer"
+},
+{
+"property": "script.numWorkers",
+"description": "Set number of samples to process per script (if parallel processing)",
+"default": "1",
+"type": "integer"
+},
+{
+"property": "script.permissions",
+"description": "Used as chmod permission parameter (ex: 774)",
+"default": "770",
+"type": "string"
+},
+{
+"property": "script.timeout",
+"type": "integer",
+"description": "Sets # of minutes before worker scripts times out."
+}
+]
+},
+{
+"menuPlacement": [
+"biolockj",
+"module",
+"implicit",
+"parser",
+"wgs",
+"Humann2Parser"
+],
+"citation": "Module developed by Mike Sioda\nBioLockJ <VERSION>",
+"usage": "#BioModule biolockj.module.implicit.parser.wgs.Humann2Parser",
+"pre-req modules": [],
+"description": "Build OTU tables from HumanN2 classifier module output.",
+"details": "",
+"post-req modules": [],
+"title": "Humann2Parser",
+"properties": [
+{
+"property": "cluster.batchCommand",
+"type": "string",
+"description": "Terminal command used to submit jobs on the cluster"
+},
+{
+"property": "cluster.jobHeader",
+"type": "string",
+"description": "Header written at top of worker scripts"
+},
+{
+"property": "cluster.modules",
+"type": "list",
+"description": "List of cluster modules to load at start of worker scripts"
+},
+{
+"property": "cluster.prologue",
+"type": "string",
+"description": "To run at the start of every script after loading cluster modules (if any)"
+},
+{
+"property": "cluster.statusCommand",
+"type": "string",
+"description": "Terminal command used to check the status of jobs on the cluster"
+},
+{
+"property": "docker.saveContainerOnExit",
+"type": "boolean",
+"description": "If Y, docker run command will NOT include the --rm flag"
+},
+{
+"property": "docker.verifyImage",
+"type": "boolean",
+"description": "In check dependencies, run a test to verify the docker image."
+},
+{"property": "humann2.keepUnintegrated"},
+{"property": "humann2.keepUnmapped"},
+{
+"property": "report.numHits",
+"description": "Options: Y/N. If Y, and add Num_Hits to metadata",
+"default": "Y",
+"type": "boolean"
+},
+{
+"property": "report.unclassifiedTaxa",
+"description": "report unclassified taxa",
+"default": "Y",
+"type": "boolean"
+},
+{
+"property": "script.defaultHeader",
+"description": "Store default script header for MAIN script and locally run WORKER scripts.",
+"default": "#!/bin/bash",
+"type": "string"
+},
+{
+"property": "script.numThreads",
+"description": "Used to reserve cluster resources and passed to any external application call that accepts a numThreads parameter.",
+"default": "8",
+"type": "integer"
+},
+{
+"property": "script.numWorkers",
+"description": "Set number of samples to process per script (if parallel processing)",
+"default": "1",
+"type": "integer"
+},
+{
+"property": "script.permissions",
+"description": "Used as chmod permission parameter (ex: 774)",
+"default": "770",
+"type": "string"
+},
+{
+"property": "script.timeout",
+"type": "integer",
+"description": "Sets # of minutes before worker scripts times out."
+}
+]
+},
+{
+"menuPlacement": [
+"biolockj",
+"module",
+"implicit",
+"parser",
+"wgs",
+"Kraken2Parser"
+],
+"citation": "Module developed by Mike Sioda\nBioLockJ <VERSION>",
+"usage": "#BioModule biolockj.module.implicit.parser.wgs.Kraken2Parser",
+"pre-req modules": [],
+"description": "Build OTU tables from [KRAKEN](http://ccb.jhu.edu/software/kraken/) mpa-format reports.",
+"details": "",
+"post-req modules": [],
+"title": "Kraken2Parser",
+"properties": [
+{
+"property": "cluster.batchCommand",
+"type": "string",
+"description": "Terminal command used to submit jobs on the cluster"
+},
+{
+"property": "cluster.jobHeader",
+"type": "string",
+"description": "Header written at top of worker scripts"
+},
+{
+"property": "cluster.modules",
+"type": "list",
+"description": "List of cluster modules to load at start of worker scripts"
+},
+{
+"property": "cluster.prologue",
+"type": "string",
+"description": "To run at the start of every script after loading cluster modules (if any)"
+},
+{
+"property": "cluster.statusCommand",
+"type": "string",
+"description": "Terminal command used to check the status of jobs on the cluster"
+},
+{
+"property": "docker.saveContainerOnExit",
+"type": "boolean",
+"description": "If Y, docker run command will NOT include the --rm flag"
+},
+{
+"property": "docker.verifyImage",
+"type": "boolean",
+"description": "In check dependencies, run a test to verify the docker image."
+},
+{
+"property": "report.numHits",
+"description": "Options: Y/N. If Y, and add Num_Hits to metadata",
 "default": "Y",
 "type": "boolean"
 },
 {
+"property": "report.unclassifiedTaxa",
+"description": "report unclassified taxa",
+"default": "Y",
+"type": "boolean"
+},
+{
+"property": "script.defaultHeader",
+"description": "Store default script header for MAIN script and locally run WORKER scripts.",
+"default": "#!/bin/bash",
+"type": "string"
+},
+{
+"property": "script.numThreads",
+"description": "Used to reserve cluster resources and passed to any external application call that accepts a numThreads parameter.",
+"default": "8",
+"type": "integer"
+},
+{
+"property": "script.numWorkers",
+"description": "Set number of samples to process per script (if parallel processing)",
+"default": "1",
+"type": "integer"
+},
+{
+"property": "script.permissions",
+"description": "Used as chmod permission parameter (ex: 774)",
+"default": "770",
+"type": "string"
+},
+{
+"property": "script.timeout",
+"type": "integer",
+"description": "Sets # of minutes before worker scripts times out."
+}
+]
+},
+{
+"menuPlacement": [
+"biolockj",
+"module",
+"implicit",
+"parser",
+"wgs",
+"KrakenParser"
+],
+"citation": "Module developed by Mike Sioda\nBioLockJ <VERSION>",
+"usage": "#BioModule biolockj.module.implicit.parser.wgs.KrakenParser",
+"pre-req modules": [],
+"description": "Build OTU tables from [KRAKEN](http://ccb.jhu.edu/software/kraken/) mpa-format reports.",
+"details": "",
+"post-req modules": [],
+"title": "KrakenParser",
+"properties": [
+{
+"property": "cluster.batchCommand",
+"type": "string",
+"description": "Terminal command used to submit jobs on the cluster"
+},
+{
+"property": "cluster.jobHeader",
+"type": "string",
+"description": "Header written at top of worker scripts"
+},
+{
+"property": "cluster.modules",
+"type": "list",
+"description": "List of cluster modules to load at start of worker scripts"
+},
+{
+"property": "cluster.prologue",
+"type": "string",
+"description": "To run at the start of every script after loading cluster modules (if any)"
+},
+{
+"property": "cluster.statusCommand",
+"type": "string",
+"description": "Terminal command used to check the status of jobs on the cluster"
+},
+{
+"property": "docker.saveContainerOnExit",
+"type": "boolean",
+"description": "If Y, docker run command will NOT include the --rm flag"
+},
+{
+"property": "docker.verifyImage",
+"type": "boolean",
+"description": "In check dependencies, run a test to verify the docker image."
+},
+{
+"property": "report.numHits",
+"description": "Options: Y/N. If Y, and add Num_Hits to metadata",
+"default": "Y",
+"type": "boolean"
+},
+{
+"property": "report.unclassifiedTaxa",
+"description": "report unclassified taxa",
+"default": "Y",
+"type": "boolean"
+},
+{
+"property": "script.defaultHeader",
+"description": "Store default script header for MAIN script and locally run WORKER scripts.",
+"default": "#!/bin/bash",
+"type": "string"
+},
+{
+"property": "script.numThreads",
+"description": "Used to reserve cluster resources and passed to any external application call that accepts a numThreads parameter.",
+"default": "8",
+"type": "integer"
+},
+{
+"property": "script.numWorkers",
+"description": "Set number of samples to process per script (if parallel processing)",
+"default": "1",
+"type": "integer"
+},
+{
+"property": "script.permissions",
+"description": "Used as chmod permission parameter (ex: 774)",
+"default": "770",
+"type": "string"
+},
+{
+"property": "script.timeout",
+"type": "integer",
+"description": "Sets # of minutes before worker scripts times out."
+}
+]
+},
+{
+"menuPlacement": [
+"biolockj",
+"module",
+"report",
+"Email"
+],
+"citation": "Module developed by Mike Sioda.\nBioLockJ <VERSION>",
+"usage": "#BioModule biolockj.module.report.Email",
+"pre-req modules": [],
+"description": "Send an email containing the pipeline summary when the pipeline either completes or fails.",
+"details": "",
+"post-req modules": [],
+"title": "Email",
+"properties": [
+{
+"property": "mail.encryptedPassword",
+"default": "7GYvu1m+Yv1Gk7Cd9BLaznJ/jq33g0q1"
+},
+{
+"property": "mail.from",
+"default": "biolockj@gmail.com"
+},
+{
+"property": "mail.smtp.auth",
+"default": "Y"
+},
+{
+"property": "mail.smtp.host",
+"default": "smtp.gmail.com"
+},
+{
+"property": "mail.smtp.port",
+"default": "587"
+},
+{
+"property": "mail.smtp.starttls.enable",
+"default": "Y"
+},
+{"property": "mail.to"}
+]
+},
+{
+"menuPlacement": [
+"biolockj",
+"module",
+"report",
+"otu",
+"RarefyOtuCounts"
+],
+"citation": "Module developed by Mike Sioda\nBioLockJ <VERSION>",
+"usage": "#BioModule biolockj.module.report.otu.RarefyOtuCounts",
+"pre-req modules": [],
+"description": "Applies a mean iterative post-OTU classification rarefication algorithm so that each output sample will have approximately the same number of OTUs.",
+"details": "",
+"post-req modules": [],
+"title": "RarefyOtuCounts",
+"properties": [
+{
+"property": "cluster.batchCommand",
+"type": "string",
+"description": "Terminal command used to submit jobs on the cluster"
+},
+{
+"property": "cluster.jobHeader",
+"type": "string",
+"description": "Header written at top of worker scripts"
+},
+{
+"property": "cluster.modules",
+"type": "list",
+"description": "List of cluster modules to load at start of worker scripts"
+},
+{
+"property": "cluster.prologue",
+"type": "string",
+"description": "To run at the start of every script after loading cluster modules (if any)"
+},
+{
+"property": "cluster.statusCommand",
+"type": "string",
+"description": "Terminal command used to check the status of jobs on the cluster"
+},
+{
+"property": "docker.saveContainerOnExit",
+"type": "boolean",
+"description": "If Y, docker run command will NOT include the --rm flag"
+},
+{
+"property": "docker.verifyImage",
+"type": "boolean",
+"description": "In check dependencies, run a test to verify the docker image."
+},
+{
+"property": "rarefyOtuCounts.iterations",
+"default": "10"
+},
+{
+"property": "rarefyOtuCounts.lowAbundantCutoff",
+"default": "0.01"
+},
+{
+"property": "rarefyOtuCounts.quantile",
+"default": "0.5"
+},
+{"property": "rarefyOtuCounts.rmLowSamples"},
+{
 "property": "script.defaultHeader",
 "description": "Store default script header for MAIN script and locally run WORKER scripts.",
 "default": "#!/bin/bash",
@@ -1150,49 +2051,221 @@
 ]
 },
 {
-"citation": "Module developed by Mike Sioda.\nBioLockJ <VERSION>",
-"usage": "#BioModule biolockj.module.report.Email",
+"menuPlacement": [
+"biolockj",
+"module",
+"report",
+"otu",
+"RemoveLowOtuCounts"
+],
+"citation": "Module developed by Mike Sioda\nBioLockJ <VERSION>",
+"usage": "#BioModule biolockj.module.report.otu.RemoveLowOtuCounts",
 "pre-req modules": [],
-"description": "Send user an email containing the pipeline summary when the pipeline either completes or fails.",
+"description": "Removes OTUs with counts below report.minCount.",
 "details": "",
 "post-req modules": [],
-"title": "Email",
+"title": "RemoveLowOtuCounts",
 "properties": [
 {
-"property": "mail.encryptedPassword",
-"default": "7GYvu1m+Yv1Gk7Cd9BLaznJ/jq33g0q1"
+"property": "cluster.batchCommand",
+"type": "string",
+"description": "Terminal command used to submit jobs on the cluster"
 },
 {
-"property": "mail.from",
-"default": "biolockj@gmail.com"
+"property": "cluster.jobHeader",
+"type": "string",
+"description": "Header written at top of worker scripts"
 },
 {
-"property": "mail.smtp.auth",
-"default": "Y"
+"property": "cluster.modules",
+"type": "list",
+"description": "List of cluster modules to load at start of worker scripts"
 },
 {
-"property": "mail.smtp.host",
-"default": "smtp.gmail.com"
+"property": "cluster.prologue",
+"type": "string",
+"description": "To run at the start of every script after loading cluster modules (if any)"
 },
 {
-"property": "mail.smtp.port",
-"default": "587"
+"property": "cluster.statusCommand",
+"type": "string",
+"description": "Terminal command used to check the status of jobs on the cluster"
 },
 {
-"property": "mail.smtp.starttls.enable",
-"default": "Y"
+"property": "docker.saveContainerOnExit",
+"type": "boolean",
+"description": "If Y, docker run command will NOT include the --rm flag"
 },
-{"property": "mail.to"}
+{
+"property": "docker.verifyImage",
+"type": "boolean",
+"description": "In check dependencies, run a test to verify the docker image."
+},
+{
+"property": "script.defaultHeader",
+"description": "Store default script header for MAIN script and locally run WORKER scripts.",
+"default": "#!/bin/bash",
+"type": "string"
+},
+{
+"property": "script.numThreads",
+"description": "Used to reserve cluster resources and passed to any external application call that accepts a numThreads parameter.",
+"default": "8",
+"type": "integer"
+},
+{
+"property": "script.numWorkers",
+"description": "Set number of samples to process per script (if parallel processing)",
+"default": "1",
+"type": "integer"
+},
+{
+"property": "script.permissions",
+"description": "Used as chmod permission parameter (ex: 774)",
+"default": "770",
+"type": "string"
+},
+{
+"property": "script.timeout",
+"type": "integer",
+"description": "Sets # of minutes before worker scripts times out."
+}
 ]
 },
 {
-"citation": "Module developed by Mike Sioda\nBioLockj <VERSION>",
-"usage": "#BioModule biolockj.module.report.otu.RarefyOtuCounts",
-"pre-req modules": [],
-"description": "Applies a mean iterative post-OTU classification rarefication algorithm so that each output sample will have approximately the same number of OTUs.",
+"menuPlacement": [
+"biolockj",
+"module",
+"report",
+"r",
+"R_CalculateStats"
+],
+"citation": "BioLockJ <VERSION>\nModule developted by Mike Sioda.",
+"usage": "#BioModule biolockj.module.report.r.R_CalculateStats",
+"description": "Generate a summary statistics table with [adjusted and unadjusted] [parameteric and non-parametirc] p-values and r<sup>2<\/sup> values for each reportable metadata field and each *report.taxonomyLevel* configured.",
+"details": "",
+"title": "R_CalculateStats",
+"properties": [
+{
+"property": "cluster.batchCommand",
+"type": "string",
+"description": "Terminal command used to submit jobs on the cluster"
+},
+{
+"property": "cluster.jobHeader",
+"type": "string",
+"description": "Header written at top of worker scripts"
+},
+{
+"property": "cluster.modules",
+"type": "list",
+"description": "List of cluster modules to load at start of worker scripts"
+},
+{
+"property": "cluster.prologue",
+"type": "string",
+"description": "To run at the start of every script after loading cluster modules (if any)"
+},
+{
+"property": "cluster.statusCommand",
+"type": "string",
+"description": "Terminal command used to check the status of jobs on the cluster"
+},
+{
+"property": "docker.saveContainerOnExit",
+"type": "boolean",
+"description": "If Y, docker run command will NOT include the --rm flag"
+},
+{
+"property": "docker.verifyImage",
+"type": "boolean",
+"description": "In check dependencies, run a test to verify the docker image."
+},
+{
+"property": "exe.Rscript",
+"type": "executable",
+"description": "Path for the \"Rscript\" executable; if not supplied, any script that needs the Rscript command will assume it is on the PATH."
+},
+{
+"property": "pipeline.defaultStatsModule",
+"description": "Java class name for default module used generate p-value and other stats",
+"default": "biolockj.module.report.r.R_CalculateStats",
+"type": "string"
+},
+{
+"property": "r.colorFile",
+"type": "file path",
+"description": "path to a tab-delimited file giving the color to use for each value of each metadata field plotted."
+},
+{
+"property": "r.debug",
+"description": "Options: Y/N. If Y, will generate R Script log files",
+"default": "Y",
+"type": "boolean"
+},
+{
+"property": "r.saveRData",
+"type": "boolean",
+"description": "If Y, all R script generating BioModules will save R Session data to the module output directory to a file using the extension \".RData\""
+},
+{
+"property": "r.timeout",
+"description": "the # minutes before R Script will time out and fail; If undefined, no timeout is used.",
+"default": "10",
+"type": "integer"
+},
+{
+"property": "r_CalculateStats.pAdjustMethod",
+"default": "BH"
+},
+{
+"property": "r_CalculateStats.pAdjustScope",
+"default": "LOCAL"
+},
+{
+"property": "script.defaultHeader",
+"description": "Store default script header for MAIN script and locally run WORKER scripts.",
+"default": "#!/bin/bash",
+"type": "string"
+},
+{
+"property": "script.numThreads",
+"description": "Used to reserve cluster resources and passed to any external application call that accepts a numThreads parameter.",
+"default": "8",
+"type": "integer"
+},
+{
+"property": "script.numWorkers",
+"description": "Set number of samples to process per script (if parallel processing)",
+"default": "1",
+"type": "integer"
+},
+{
+"property": "script.permissions",
+"description": "Used as chmod permission parameter (ex: 774)",
+"default": "770",
+"type": "string"
+},
+{
+"property": "script.timeout",
+"type": "integer",
+"description": "Sets # of minutes before worker scripts times out."
+}
+]
+},
+{
+"menuPlacement": [
+"biolockj",
+"module",
+"report",
+"r",
+"R_PlotEffectSize"
+],
+"citation": "BioLockJ <VERSION>\nModule developted by Ivory Blakley.",
+"usage": "#BioModule biolockj.module.report.r.R_PlotEffectSize",
+"description": "Generate horizontal barplot representing effect size (Cohen's d, r<sup>2<\/sup>, and/or fold change) for each reportable metadata field and each *report.taxonomyLevel* configured.",
 "details": "",
-"post-req modules": [],
-"title": "RarefyOtuCounts",
+"title": "R_PlotEffectSize",
 "properties": [
 {
 "property": "cluster.batchCommand",
@@ -1217,36 +2290,68 @@
 {
 "property": "cluster.statusCommand",
 "type": "string",
-"description": "Terminal command used to submit jobs on the cluster"
+"description": "Terminal command used to check the status of jobs on the cluster"
 },
 {
-"property": "docker.imgVersion",
-"type": "string",
-"description": "indicate specific version of Docker images"
+"property": "docker.saveContainerOnExit",
+"type": "boolean",
+"description": "If Y, docker run command will NOT include the --rm flag"
 },
 {
-"property": "docker.saveContainerOnExit",
+"property": "docker.verifyImage",
 "type": "boolean",
-"description": "if ture, docker run command will NOT include the --rm flag"
+"description": "In check dependencies, run a test to verify the docker image."
 },
 {
-"property": "docker.user",
-"type": "string",
-"description": "name of the Docker Hub user for getting docker containers"
+"property": "exe.Rscript",
+"type": "executable",
+"description": "Path for the \"Rscript\" executable; if not supplied, any script that needs the Rscript command will assume it is on the PATH."
 },
 {
-"property": "rarefyOtuCounts.iterations",
-"default": "10"
+"property": "pipeline.defaultStatsModule",
+"description": "Java class name for default module used generate p-value and other stats",
+"default": "biolockj.module.report.r.R_CalculateStats",
+"type": "string"
 },
 {
-"property": "rarefyOtuCounts.lowAbundantCutoff",
-"default": "0.01"
+"property": "r.colorFile",
+"type": "file path",
+"description": "path to a tab-delimited file giving the color to use for each value of each metadata field plotted."
 },
 {
-"property": "rarefyOtuCounts.quantile",
-"default": "0.5"
+"property": "r.debug",
+"description": "Options: Y/N. If Y, will generate R Script log files",
+"default": "Y",
+"type": "boolean"
 },
-{"property": "rarefyOtuCounts.rmLowSamples"},
+{
+"property": "r.saveRData",
+"type": "boolean",
+"description": "If Y, all R script generating BioModules will save R Session data to the module output directory to a file using the extension \".RData\""
+},
+{
+"property": "r.timeout",
+"description": "the # minutes before R Script will time out and fail; If undefined, no timeout is used.",
+"default": "10",
+"type": "integer"
+},
+{"property": "r_PlotEffectSize.disableCohensD"},
+{
+"property": "r_PlotEffectSize.disableFoldChange",
+"default": "Y"
+},
+{"property": "r_PlotEffectSize.disablePvalAdj"},
+{"property": "r_PlotEffectSize.disableRSquared"},
+{
+"property": "r_PlotEffectSize.excludePvalAbove",
+"default": "1"
+},
+{
+"property": "r_PlotEffectSize.maxNumTaxa",
+"default": "40"
+},
+{"property": "r_PlotEffectSize.parametricPval"},
+{"property": "r_PlotEffectSize.taxa"},
 {
 "property": "script.defaultHeader",
 "description": "Store default script header for MAIN script and locally run WORKER scripts.",
@@ -1279,10 +2384,18 @@
 ]
 },
 {
-"description": "Generate a summary statistics table with [adjusted and unadjusted] [parameteric and non-parametirc] p-values and r<sup>2<\/sup> values for each reportable metadata field and each *report.taxonomyLevel* configured.",
+"menuPlacement": [
+"biolockj",
+"module",
+"report",
+"r",
+"R_PlotMds"
+],
+"citation": "Module developed by Mike Sioda\nBioLockJ <VERSION>",
+"usage": "#BioModule biolockj.module.report.r.R_PlotMds",
+"description": "Generate sets of multidimensional scaling plots showing 2 axes at a time (up to the <*r_PlotMds.numAxis*>th axis) with color coding based on each categorical metadata field (default) or by each field given in *r_PlotMds.reportFields*",
 "details": "",
-"title": "R_CalculateStats",
-"citation": "BioLockJ <VERSION>\nModule developted by Mike Sioda.",
+"title": "R_PlotMds",
 "properties": [
 {
 "property": "cluster.batchCommand",
@@ -1307,22 +2420,17 @@
 {
 "property": "cluster.statusCommand",
 "type": "string",
-"description": "Terminal command used to submit jobs on the cluster"
-},
-{
-"property": "docker.imgVersion",
-"type": "string",
-"description": "indicate specific version of Docker images"
+"description": "Terminal command used to check the status of jobs on the cluster"
 },
 {
 "property": "docker.saveContainerOnExit",
 "type": "boolean",
-"description": "if ture, docker run command will NOT include the --rm flag"
+"description": "If Y, docker run command will NOT include the --rm flag"
 },
 {
-"property": "docker.user",
-"type": "string",
-"description": "name of the Docker Hub user for getting docker containers"
+"property": "docker.verifyImage",
+"type": "boolean",
+"description": "In check dependencies, run a test to verify the docker image."
 },
 {
 "property": "exe.Rscript",
@@ -1330,17 +2438,46 @@
 "description": "Path for the \"Rscript\" executable; if not supplied, any script that needs the Rscript command will assume it is on the PATH."
 },
 {
+"property": "pipeline.defaultStatsModule",
+"description": "Java class name for default module used generate p-value and other stats",
+"default": "biolockj.module.report.r.R_CalculateStats",
+"type": "string"
+},
+{
+"property": "r.colorBase",
+"description": "base color used for labels & headings in the PDF report; Must be a valid color in R.",
+"default": "black",
+"type": "string"
+},
+{
 "property": "r.colorFile",
 "type": "file path",
 "description": "path to a tab-delimited file giving the color to use for each value of each metadata field plotted."
 },
 {
+"property": "r.colorHighlight",
+"description": "color is used to highlight significant OTUs in plot",
+"default": "red",
+"type": "string"
+},
+{
+"property": "r.colorPalette",
+"type": "string",
+"description": "palette argument passed to [get_palette {ggpubr}](https://www.rdocumentation.org/packages/ggpubr/versions/0.2/topics/get_palette) to select colors for some output visualiztions"
+},
+{
 "property": "r.debug",
 "description": "Options: Y/N. If Y, will generate R Script log files",
 "default": "Y",
 "type": "boolean"
 },
 {
+"property": "r.pch",
+"description": "Sets R plot pch parameter for PDF report",
+"default": "21",
+"type": "integer"
+},
+{
 "property": "r.saveRData",
 "type": "boolean",
 "description": "If Y, all R script generating BioModules will save R Session data to the module output directory to a file using the extension \".RData\""
@@ -1352,12 +2489,17 @@
 "type": "integer"
 },
 {
-"property": "r_CalculateStats.pAdjustMethod",
-"default": "BH"
+"property": "r_PlotMds.distance",
+"default": "bray"
 },
 {
-"property": "r_CalculateStats.pAdjustScope",
-"default": "LOCAL"
+"property": "r_PlotMds.numAxis",
+"default": "3"
+},
+{
+"property": "r_PlotMds.reportFields",
+"type": "list",
+"description": "Metadata column names indicating fields to include in the MDS report; Fields listed here must exist in the metadata file."
 },
 {
 "property": "script.defaultHeader",
@@ -1388,14 +2530,21 @@
 "type": "integer",
 "description": "Sets # of minutes before worker scripts times out."
 }
-],
-"usage": "#BioModule biolockj.module.report.r.R_CalculateStats"
+]
 },
 {
-"description": "Generate horizontal barplot representing effect size (Cohen's d, r<sup>2<\/sup>, and/or fold change) for each reportable metadata field and each *report.taxonomyLevel* configured.",
+"menuPlacement": [
+"biolockj",
+"module",
+"report",
+"r",
+"R_PlotOtus"
+],
+"citation": "Module developed by Mike Sioda\nBioLockJ <VERSION>",
+"usage": "#BioModule biolockj.module.report.r.R_PlotOtus",
+"description": "Generate OTU-metadata box-plots and scatter-plots for each reportable metadata field and each *report.taxonomyLevel* configured",
 "details": "",
-"title": "R_PlotEffectSize",
-"citation": "BioLockJ <VERSION>\nModule developted by Ivory Blakley.",
+"title": "R_PlotOtus",
 "properties": [
 {
 "property": "cluster.batchCommand",
@@ -1420,22 +2569,17 @@
 {
 "property": "cluster.statusCommand",
 "type": "string",
-"description": "Terminal command used to submit jobs on the cluster"
-},
-{
-"property": "docker.imgVersion",
-"type": "string",
-"description": "indicate specific version of Docker images"
+"description": "Terminal command used to check the status of jobs on the cluster"
 },
 {
 "property": "docker.saveContainerOnExit",
 "type": "boolean",
-"description": "if ture, docker run command will NOT include the --rm flag"
+"description": "If Y, docker run command will NOT include the --rm flag"
 },
 {
-"property": "docker.user",
-"type": "string",
-"description": "name of the Docker Hub user for getting docker containers"
+"property": "docker.verifyImage",
+"type": "boolean",
+"description": "In check dependencies, run a test to verify the docker image."
 },
 {
 "property": "exe.Rscript",
@@ -1443,44 +2587,72 @@
 "description": "Path for the \"Rscript\" executable; if not supplied, any script that needs the Rscript command will assume it is on the PATH."
 },
 {
+"property": "pipeline.defaultStatsModule",
+"description": "Java class name for default module used generate p-value and other stats",
+"default": "biolockj.module.report.r.R_CalculateStats",
+"type": "string"
+},
+{
+"property": "r.colorBase",
+"description": "base color used for labels & headings in the PDF report; Must be a valid color in R.",
+"default": "black",
+"type": "string"
+},
+{
 "property": "r.colorFile",
 "type": "file path",
 "description": "path to a tab-delimited file giving the color to use for each value of each metadata field plotted."
 },
 {
+"property": "r.colorHighlight",
+"description": "color is used to highlight significant OTUs in plot",
+"default": "red",
+"type": "string"
+},
+{
+"property": "r.colorPalette",
+"type": "string",
+"description": "palette argument passed to [get_palette {ggpubr}](https://www.rdocumentation.org/packages/ggpubr/versions/0.2/topics/get_palette) to select colors for some output visualiztions"
+},
+{
+"property": "r.colorPoint",
+"description": "default color of scatterplot and strip-chart plot points",
+"default": "black",
+"type": "string"
+},
+{
 "property": "r.debug",
 "description": "Options: Y/N. If Y, will generate R Script log files",
 "default": "Y",
 "type": "boolean"
 },
 {
-"property": "r.saveRData",
-"type": "boolean",
-"description": "If Y, all R script generating BioModules will save R Session data to the module output directory to a file using the extension \".RData\""
+"property": "r.pValFormat",
+"default": "%1.2g"
 },
 {
-"property": "r.timeout",
-"description": "the # minutes before R Script will time out and fail; If undefined, no timeout is used.",
-"default": "10",
+"property": "r.pch",
+"description": "Sets R plot pch parameter for PDF report",
+"default": "21",
 "type": "integer"
 },
-{"property": "r_PlotEffectSize.disableCohensD"},
 {
-"property": "r_PlotEffectSize.disableFoldChange",
-"default": "Y"
+"property": "r.rareOtuThreshold",
+"description": "If >=1, R will filter OTUs found in fewer than this many samples. If <1, R will interperate the value as a percentage and discard OTUs not found in at least that percentage of samples",
+"default": "1",
+"type": "numeric"
 },
-{"property": "r_PlotEffectSize.disablePvalAdj"},
-{"property": "r_PlotEffectSize.disableRSquared"},
 {
-"property": "r_PlotEffectSize.excludePvalAbove",
-"default": "1"
+"property": "r.saveRData",
+"type": "boolean",
+"description": "If Y, all R script generating BioModules will save R Session data to the module output directory to a file using the extension \".RData\""
 },
 {
-"property": "r_PlotEffectSize.maxNumTaxa",
-"default": "40"
+"property": "r.timeout",
+"description": "the # minutes before R Script will time out and fail; If undefined, no timeout is used.",
+"default": "10",
+"type": "integer"
 },
-{"property": "r_PlotEffectSize.parametricPval"},
-{"property": "r_PlotEffectSize.taxa"},
 {
 "property": "script.defaultHeader",
 "description": "Store default script header for MAIN script and locally run WORKER scripts.",
@@ -1510,14 +2682,21 @@
 "type": "integer",
 "description": "Sets # of minutes before worker scripts times out."
 }
-],
-"usage": "#BioModule biolockj.module.report.r.R_PlotEffectSize"
+]
 },
 {
-"description": "Generate sets of multidimensional scaling plots showing 2 axes at a time (up to the <*r_PlotMds.numAxis*>th axis) with color coding based on each categorical metadata field (default) or by each field given in *r_PlotMds.reportFields*",
+"menuPlacement": [
+"biolockj",
+"module",
+"report",
+"r",
+"R_PlotPvalHistograms"
+],
+"citation": "Module developed by Mike Sioda\nBioLockJ <VERSION>",
+"usage": "#BioModule biolockj.module.report.r.R_PlotPvalHistograms",
+"description": "Generate p-value histograms for each reportable metadata field and each *report.taxonomyLevel* configured",
 "details": "",
-"title": "R_PlotMds",
-"citation": "Module developed by Mike Sioda\nBioLockj <VERSION>",
+"title": "R_PlotPvalHistograms",
 "properties": [
 {
 "property": "cluster.batchCommand",
@@ -1542,22 +2721,17 @@
 {
 "property": "cluster.statusCommand",
 "type": "string",
-"description": "Terminal command used to submit jobs on the cluster"
-},
-{
-"property": "docker.imgVersion",
-"type": "string",
-"description": "indicate specific version of Docker images"
+"description": "Terminal command used to check the status of jobs on the cluster"
 },
 {
 "property": "docker.saveContainerOnExit",
 "type": "boolean",
-"description": "if ture, docker run command will NOT include the --rm flag"
+"description": "If Y, docker run command will NOT include the --rm flag"
 },
 {
-"property": "docker.user",
-"type": "string",
-"description": "name of the Docker Hub user for getting docker containers"
+"property": "docker.verifyImage",
+"type": "boolean",
+"description": "In check dependencies, run a test to verify the docker image."
 },
 {
 "property": "exe.Rscript",
@@ -1565,9 +2739,9 @@
 "description": "Path for the \"Rscript\" executable; if not supplied, any script that needs the Rscript command will assume it is on the PATH."
 },
 {
-"property": "r.colorBase",
-"description": "base color used for labels & headings in the PDF report; Must be a valid color in R.",
-"default": "black",
+"property": "pipeline.defaultStatsModule",
+"description": "Java class name for default module used generate p-value and other stats",
+"default": "biolockj.module.report.r.R_CalculateStats",
 "type": "string"
 },
 {
@@ -1576,51 +2750,107 @@
 "description": "path to a tab-delimited file giving the color to use for each value of each metadata field plotted."
 },
 {
-"property": "r.colorHighlight",
-"description": "color is used to highlight significant OTUs in plot",
-"default": "red",
+"property": "r.debug",
+"description": "Options: Y/N. If Y, will generate R Script log files",
+"default": "Y",
+"type": "boolean"
+},
+{
+"property": "r.pvalCutoff",
+"description": "p-value cutoff used to assign label _r.colorHighlight_",
+"default": "0.05",
+"type": "numeric"
+},
+{
+"property": "r.saveRData",
+"type": "boolean",
+"description": "If Y, all R script generating BioModules will save R Session data to the module output directory to a file using the extension \".RData\""
+},
+{
+"property": "r.timeout",
+"description": "the # minutes before R Script will time out and fail; If undefined, no timeout is used.",
+"default": "10",
+"type": "integer"
+},
+{
+"property": "script.defaultHeader",
+"description": "Store default script header for MAIN script and locally run WORKER scripts.",
+"default": "#!/bin/bash",
+"type": "string"
+},
+{
+"property": "script.numThreads",
+"description": "Used to reserve cluster resources and passed to any external application call that accepts a numThreads parameter.",
+"default": "8",
+"type": "integer"
+},
+{
+"property": "script.numWorkers",
+"description": "Set number of samples to process per script (if parallel processing)",
+"default": "1",
+"type": "integer"
+},
+{
+"property": "script.permissions",
+"description": "Used as chmod permission parameter (ex: 774)",
+"default": "770",
 "type": "string"
 },
 {
-"property": "r.colorPalette",
-"type": "string",
-"description": "palette argument passed to [get_palette {ggpubr}](https://www.rdocumentation.org/packages/ggpubr/versions/0.2/topics/get_palette) to select colors for some output visualiztions"
-},
+"property": "script.timeout",
+"type": "integer",
+"description": "Sets # of minutes before worker scripts times out."
+}
+]
+},
+{
+"menuPlacement": [
+"biolockj",
+"module",
+"report",
+"taxa",
+"AddPseudoCount"
+],
+"citation": "BioLockJ <VERSION>",
+"usage": "#BioModule biolockj.module.report.taxa.AddPseudoCount",
+"description": "Add a pseudocount (+1) to each value in each taxa table.",
+"details": "*If the pipeline input does not include at least one taxa table, then the BuildTaxaTables class is added by this module as a pre-requisite.*\n",
+"title": "AddPseudoCount",
+"properties": [
 {
-"property": "r.debug",
-"description": "Options: Y/N. If Y, will generate R Script log files",
-"default": "Y",
-"type": "boolean"
+"property": "cluster.batchCommand",
+"type": "string",
+"description": "Terminal command used to submit jobs on the cluster"
 },
 {
-"property": "r.pch",
-"description": "Sets R plot pch parameter for PDF report",
-"default": "21",
-"type": "integer"
+"property": "cluster.jobHeader",
+"type": "string",
+"description": "Header written at top of worker scripts"
 },
 {
-"property": "r.saveRData",
-"type": "boolean",
-"description": "If Y, all R script generating BioModules will save R Session data to the module output directory to a file using the extension \".RData\""
+"property": "cluster.modules",
+"type": "list",
+"description": "List of cluster modules to load at start of worker scripts"
 },
 {
-"property": "r.timeout",
-"description": "the # minutes before R Script will time out and fail; If undefined, no timeout is used.",
-"default": "10",
-"type": "integer"
+"property": "cluster.prologue",
+"type": "string",
+"description": "To run at the start of every script after loading cluster modules (if any)"
 },
 {
-"property": "r_PlotMds.distance",
-"default": "bray"
+"property": "cluster.statusCommand",
+"type": "string",
+"description": "Terminal command used to check the status of jobs on the cluster"
 },
 {
-"property": "r_PlotMds.numAxis",
-"default": "3"
+"property": "docker.saveContainerOnExit",
+"type": "boolean",
+"description": "If Y, docker run command will NOT include the --rm flag"
 },
 {
-"property": "r_PlotMds.reportFields",
-"type": "list",
-"description": "Metadata column names indicating fields to include in the MDS report; Fields listed here must exist in the metadata file."
+"property": "docker.verifyImage",
+"type": "boolean",
+"description": "In check dependencies, run a test to verify the docker image."
 },
 {
 "property": "script.defaultHeader",
@@ -1651,14 +2881,21 @@
 "type": "integer",
 "description": "Sets # of minutes before worker scripts times out."
 }
-],
-"usage": "#BioModule biolockj.module.report.r.R_PlotMds"
+]
 },
 {
-"description": "Generate OTU-metadata box-plots and scatter-plots for each reportable metadata field and each *report.taxonomyLevel* configured",
-"details": "",
-"title": "R_PlotOtus",
-"citation": "Module developed by Mike Sioda\nBioLockj <VERSION>",
+"menuPlacement": [
+"biolockj",
+"module",
+"report",
+"taxa",
+"NormalizeByReadsPerMillion"
+],
+"citation": "Module developed by Ivory Blakley\nBioLockj <VERSION>",
+"usage": "#BioModule biolockj.module.report.taxa.NormalizeByReadsPerMillion",
+"description": "Represent each count value in the table as: counts / (total counts in sample / 1 million)",
+"details": "*If the pipeline input does not include at least one taxa table, then the BuildTaxaTables class is added by this module as a pre-requisite.*\n",
+"title": "NormalizeByReadsPerMillion",
 "properties": [
 {
 "property": "cluster.batchCommand",
@@ -1683,88 +2920,106 @@
 {
 "property": "cluster.statusCommand",
 "type": "string",
-"description": "Terminal command used to submit jobs on the cluster"
-},
-{
-"property": "docker.imgVersion",
-"type": "string",
-"description": "indicate specific version of Docker images"
+"description": "Terminal command used to check the status of jobs on the cluster"
 },
 {
 "property": "docker.saveContainerOnExit",
 "type": "boolean",
-"description": "if ture, docker run command will NOT include the --rm flag"
+"description": "If Y, docker run command will NOT include the --rm flag"
 },
 {
-"property": "docker.user",
-"type": "string",
-"description": "name of the Docker Hub user for getting docker containers"
+"property": "docker.verifyImage",
+"type": "boolean",
+"description": "In check dependencies, run a test to verify the docker image."
 },
 {
-"property": "exe.Rscript",
-"type": "executable",
-"description": "Path for the \"Rscript\" executable; if not supplied, any script that needs the Rscript command will assume it is on the PATH."
+"property": "script.defaultHeader",
+"description": "Store default script header for MAIN script and locally run WORKER scripts.",
+"default": "#!/bin/bash",
+"type": "string"
 },
 {
-"property": "r.colorBase",
-"description": "base color used for labels & headings in the PDF report; Must be a valid color in R.",
-"default": "black",
-"type": "string"
+"property": "script.numThreads",
+"description": "Used to reserve cluster resources and passed to any external application call that accepts a numThreads parameter.",
+"default": "8",
+"type": "integer"
 },
 {
-"property": "r.colorFile",
-"type": "file path",
-"description": "path to a tab-delimited file giving the color to use for each value of each metadata field plotted."
+"property": "script.numWorkers",
+"description": "Set number of samples to process per script (if parallel processing)",
+"default": "1",
+"type": "integer"
 },
 {
-"property": "r.colorHighlight",
-"description": "color is used to highlight significant OTUs in plot",
-"default": "red",
+"property": "script.permissions",
+"description": "Used as chmod permission parameter (ex: 774)",
+"default": "770",
 "type": "string"
 },
 {
-"property": "r.colorPalette",
+"property": "script.timeout",
+"type": "integer",
+"description": "Sets # of minutes before worker scripts times out."
+}
+]
+},
+{
+"menuPlacement": [
+"biolockj",
+"module",
+"rnaseq",
+"DESeq2"
+],
+"citation": "R Core Team (2019). R: A language and environment for statistical computing. R Foundation for Statistical Computing, Vienna, Austria. URL https://www.R-project.org/.\nLove, M.I., Huber, W., Anders, S. (2014) Moderated estimation of fold change and dispersion for RNA-seq data with DESeq2. Genome Biology, 15:550. 10.1186/s13059-014-0550-8\n\nModule developed by Ivory, Ke and Rosh\nBioLockJ <VERSION>",
+"usage": "#BioModule biolockj.module.rnaseq.DESeq2",
+"pre-req modules": [],
+"description": "Determine statistically significant differences using DESeq2.",
+"details": "The two methods of expresison the design are mutually exclusive.<br>*deseq2.designFormula* is used as an exact string to pass as the design argument to DESeqDataSetFromMatrix(); example: \" ~ Location:SoilType\" (DO include quotes around the formula). *deseq2.designFactors* is a list (such as \"fist,second\") of one or more metadata columns to use in a formula. Using this method, the formula will take the form: \" ~ first + second \" <br>The following two lines are equivilent:<br>`deseq2.designFormula =\"~ treatment + batch\"`<br>`deseq2.designFactors = treatment,batch `\n\nAdvanced users may want to make more advanced modifications to the call to the DESeq2 functions. The easiest way to do this is to run the module with the default script, and treat that as a working template (ie, see how input/outputs are passed to/from the R script). Modify the script in that first pipeline, and save the modified script to a stable location. Then run the pipeline with *deseq2.scriptPath* giving the path to the modified script.",
+"post-req modules": [],
+"title": "DESeq2",
+"properties": [
+{
+"property": "cluster.batchCommand",
 "type": "string",
-"description": "palette argument passed to [get_palette {ggpubr}](https://www.rdocumentation.org/packages/ggpubr/versions/0.2/topics/get_palette) to select colors for some output visualiztions"
+"description": "Terminal command used to submit jobs on the cluster"
 },
 {
-"property": "r.colorPoint",
-"description": "default color of scatterplot and strip-chart plot points",
-"default": "black",
-"type": "string"
+"property": "cluster.jobHeader",
+"type": "string",
+"description": "Header written at top of worker scripts"
 },
 {
-"property": "r.debug",
-"description": "Options: Y/N. If Y, will generate R Script log files",
-"default": "Y",
-"type": "boolean"
+"property": "cluster.modules",
+"type": "list",
+"description": "List of cluster modules to load at start of worker scripts"
 },
 {
-"property": "r.pValFormat",
-"default": "%1.2g"
+"property": "cluster.prologue",
+"type": "string",
+"description": "To run at the start of every script after loading cluster modules (if any)"
 },
 {
-"property": "r.pch",
-"description": "Sets R plot pch parameter for PDF report",
-"default": "21",
-"type": "integer"
+"property": "cluster.statusCommand",
+"type": "string",
+"description": "Terminal command used to check the status of jobs on the cluster"
 },
+{"property": "deseq2.designFactors"},
+{"property": "deseq2.designFormula"},
+{"property": "deseq2.scriptPath"},
 {
-"property": "r.rareOtuThreshold",
-"description": "If >=1, R will filter OTUs found in fewer than this many samples. If <1, R will interperate the value as a percentage and discard OTUs not found in at least that percentage of samples",
-"default": "1",
-"type": "numeric"
+"property": "docker.saveContainerOnExit",
+"type": "boolean",
+"description": "If Y, docker run command will NOT include the --rm flag"
 },
 {
-"property": "r.saveRData",
+"property": "docker.verifyImage",
 "type": "boolean",
-"description": "If Y, all R script generating BioModules will save R Session data to the module output directory to a file using the extension \".RData\""
+"description": "In check dependencies, run a test to verify the docker image."
 },
 {
-"property": "r.timeout",
-"description": "the # minutes before R Script will time out and fail; If undefined, no timeout is used.",
-"default": "10",
-"type": "integer"
+"property": "exe.Rscript",
+"type": "executable",
+"description": "Path for the \"Rscript\" executable; if not supplied, any script that needs the Rscript command will assume it is on the PATH."
 },
 {
 "property": "script.defaultHeader",
@@ -1795,14 +3050,22 @@
 "type": "integer",
 "description": "Sets # of minutes before worker scripts times out."
 }
-],
-"usage": "#BioModule biolockj.module.report.r.R_PlotOtus"
+]
 },
 {
-"description": "Generate p-value histograms for each reportable metadata field and each *report.taxonomyLevel* configured",
-"details": "",
-"title": "R_PlotPvalHistograms",
-"citation": "Module developed by Mike Sioda\nBioLockj <VERSION>",
+"menuPlacement": [
+"biolockj",
+"module",
+"seq",
+"AwkFastaConverter"
+],
+"citation": "BioLockJ <VERSION>\nModule developed by Mike Sioda",
+"usage": "#BioModule biolockj.module.seq.AwkFastaConverter",
+"pre-req modules": [],
+"description": "Convert fastq files into fasta format.",
+"details": "This module was first introduced because it was required for [QIIME](http://qiime.org).",
+"post-req modules": [],
+"title": "AwkFastaConverter",
 "properties": [
 {
 "property": "cluster.batchCommand",
@@ -1827,55 +3090,27 @@
 {
 "property": "cluster.statusCommand",
 "type": "string",
-"description": "Terminal command used to submit jobs on the cluster"
-},
-{
-"property": "docker.imgVersion",
-"type": "string",
-"description": "indicate specific version of Docker images"
+"description": "Terminal command used to check the status of jobs on the cluster"
 },
 {
 "property": "docker.saveContainerOnExit",
 "type": "boolean",
-"description": "if ture, docker run command will NOT include the --rm flag"
+"description": "If Y, docker run command will NOT include the --rm flag"
 },
 {
-"property": "docker.user",
-"type": "string",
-"description": "name of the Docker Hub user for getting docker containers"
+"property": "docker.verifyImage",
+"type": "boolean",
+"description": "In check dependencies, run a test to verify the docker image."
 },
 {
-"property": "exe.Rscript",
+"property": "exe.awk",
 "type": "executable",
-"description": "Path for the \"Rscript\" executable; if not supplied, any script that needs the Rscript command will assume it is on the PATH."
-},
-{
-"property": "r.colorFile",
-"type": "file path",
-"description": "path to a tab-delimited file giving the color to use for each value of each metadata field plotted."
-},
-{
-"property": "r.debug",
-"description": "Options: Y/N. If Y, will generate R Script log files",
-"default": "Y",
-"type": "boolean"
-},
-{
-"property": "r.pvalCutoff",
-"description": "p-value cutoff used to assign label _r.colorHighlight_",
-"default": "0.05",
-"type": "numeric"
-},
-{
-"property": "r.saveRData",
-"type": "boolean",
-"description": "If Y, all R script generating BioModules will save R Session data to the module output directory to a file using the extension \".RData\""
+"description": "Path for the \"awk\" executable; if not supplied, any script that needs the awk command will assume it is on the PATH."
 },
 {
-"property": "r.timeout",
-"description": "the # minutes before R Script will time out and fail; If undefined, no timeout is used.",
-"default": "10",
-"type": "integer"
+"property": "exe.gzip",
+"type": "executable",
+"description": "Path for the \"gzip\" executable; if not supplied, any script that needs the gzip command will assume it is on the PATH."
 },
 {
 "property": "script.defaultHeader",
@@ -1906,14 +3141,22 @@
 "type": "integer",
 "description": "Sets # of minutes before worker scripts times out."
 }
-],
-"usage": "#BioModule biolockj.module.report.r.R_PlotPvalHistograms"
+]
 },
 {
-"description": "Add a pseudocount (+1) to each value in each taxa table.",
+"menuPlacement": [
+"biolockj",
+"module",
+"seq",
+"Gunzipper"
+],
+"citation": "BioLockJ <VERSION>\nModule developed by Mike Sioda",
+"usage": "#BioModule biolockj.module.seq.Gunzipper",
+"pre-req modules": [],
+"description": "Decompress gzipped files.",
 "details": "",
-"title": "AddPseudoCount",
-"citation": "BioLockJ <VERSION>",
+"post-req modules": [],
+"title": "Gunzipper",
 "properties": [
 {
 "property": "cluster.batchCommand",
@@ -1938,22 +3181,22 @@
 {
 "property": "cluster.statusCommand",
 "type": "string",
-"description": "Terminal command used to submit jobs on the cluster"
+"description": "Terminal command used to check the status of jobs on the cluster"
 },
 {
-"property": "docker.imgVersion",
-"type": "string",
-"description": "indicate specific version of Docker images"
+"property": "docker.saveContainerOnExit",
+"type": "boolean",
+"description": "If Y, docker run command will NOT include the --rm flag"
 },
 {
-"property": "docker.saveContainerOnExit",
+"property": "docker.verifyImage",
 "type": "boolean",
-"description": "if ture, docker run command will NOT include the --rm flag"
+"description": "In check dependencies, run a test to verify the docker image."
 },
 {
-"property": "docker.user",
-"type": "string",
-"description": "name of the Docker Hub user for getting docker containers"
+"property": "exe.gzip",
+"type": "executable",
+"description": "Path for the \"gzip\" executable; if not supplied, any script that needs the gzip command will assume it is on the PATH."
 },
 {
 "property": "script.defaultHeader",
@@ -1984,10 +3227,15 @@
 "type": "integer",
 "description": "Sets # of minutes before worker scripts times out."
 }
-],
-"usage": "#BioModule biolockj.module.report.taxa.AddPseudoCount"
+]
 },
 {
+"menuPlacement": [
+"biolockj",
+"module",
+"seq",
+"KneadData"
+],
 "citation": "https://bitbucket.org/biobakery/kneaddata/wiki/Home\nModule developed by Mike Sioda",
 "usage": "#BioModule biolockj.module.seq.KneadData",
 "pre-req modules": [],
@@ -2019,22 +3267,17 @@
 {
 "property": "cluster.statusCommand",
 "type": "string",
-"description": "Terminal command used to submit jobs on the cluster"
-},
-{
-"property": "docker.imgVersion",
-"type": "string",
-"description": "indicate specific version of Docker images"
+"description": "Terminal command used to check the status of jobs on the cluster"
 },
 {
 "property": "docker.saveContainerOnExit",
 "type": "boolean",
-"description": "if ture, docker run command will NOT include the --rm flag"
+"description": "If Y, docker run command will NOT include the --rm flag"
 },
 {
-"property": "docker.user",
-"type": "string",
-"description": "name of the Docker Hub user for getting docker containers"
+"property": "docker.verifyImage",
+"type": "boolean",
+"description": "In check dependencies, run a test to verify the docker image."
 },
 {
 "property": "exe.kneaddata",
@@ -2075,7 +3318,13 @@
 ]
 },
 {
-"citation": "Module developed by Mike Sioda\nBioLockj <VERSION>",
+"menuPlacement": [
+"biolockj",
+"module",
+"seq",
+"Multiplexer"
+],
+"citation": "Module developed by Mike Sioda\nBioLockJ <VERSION>",
 "usage": "#BioModule biolockj.module.seq.Multiplexer",
 "pre-req modules": [],
 "description": "Multiplex samples into a single file, or two files (one with forward reads, one with reverse reads) if multiplexing paired reads.",
@@ -2106,22 +3355,17 @@
 {
 "property": "cluster.statusCommand",
 "type": "string",
-"description": "Terminal command used to submit jobs on the cluster"
-},
-{
-"property": "docker.imgVersion",
-"type": "string",
-"description": "indicate specific version of Docker images"
+"description": "Terminal command used to check the status of jobs on the cluster"
 },
 {
 "property": "docker.saveContainerOnExit",
 "type": "boolean",
-"description": "if ture, docker run command will NOT include the --rm flag"
+"description": "If Y, docker run command will NOT include the --rm flag"
 },
 {
-"property": "docker.user",
-"type": "string",
-"description": "name of the Docker Hub user for getting docker containers"
+"property": "docker.verifyImage",
+"type": "boolean",
+"description": "In check dependencies, run a test to verify the docker image."
 },
 {
 "property": "metadata.barcodeColumn",
@@ -2165,6 +3409,12 @@
 ]
 },
 {
+"menuPlacement": [
+"biolockj",
+"module",
+"seq",
+"PearMergeReads"
+],
 "citation": "Jiajie Zhang, Kassian Kobert, Tomáš Flouri, Alexandros Stamatakis, PEAR: a fast and accurate Illumina Paired-End reAd mergeR, Bioinformatics, Volume 30, Issue 5, 1 March 2014, Pages 614\u2013620, https://doi.org/10.1093/bioinformatics/btt593\nhttps://cme.h-its.org/exelixis/web/software/pear/doc.html\nModule developed by Mike Sioda",
 "usage": "#BioModule biolockj.module.seq.PearMergeReads",
 "pre-req modules": [],
@@ -2196,22 +3446,17 @@
 {
 "property": "cluster.statusCommand",
 "type": "string",
-"description": "Terminal command used to submit jobs on the cluster"
-},
-{
-"property": "docker.imgVersion",
-"type": "string",
-"description": "indicate specific version of Docker images"
+"description": "Terminal command used to check the status of jobs on the cluster"
 },
 {
 "property": "docker.saveContainerOnExit",
 "type": "boolean",
-"description": "if ture, docker run command will NOT include the --rm flag"
+"description": "If Y, docker run command will NOT include the --rm flag"
 },
 {
-"property": "docker.user",
-"type": "string",
-"description": "name of the Docker Hub user for getting docker containers"
+"property": "docker.verifyImage",
+"type": "boolean",
+"description": "In check dependencies, run a test to verify the docker image."
 },
 {
 "property": "exe.pear",
@@ -2251,10 +3496,17 @@
 ]
 },
 {
-"description": "Randomly select samples to reduce all samples to the configured maximum.<br> Samples with less than the minimum number of reads are discarded. ",
-"details": "",
+"menuPlacement": [
+"biolockj",
+"module",
+"seq",
+"RarefySeqs"
+],
+"citation": "Module developed by Mike Sioda\nBioLockJ <VERSION>",
+"usage": "#BioModule biolockj.module.seq.RarefySeqs",
+"description": "Randomly sub-sample sequences to reduce all samples to the configured maximum.",
+"details": "Randomly sub-sample sequences to reduce all samples to the configured maximum `rarefySeqs.max`. Samples with less than the minimum number of reads `rarefySeqs.min` are discarded.<br>This module will add **biolockj.module.implicit.RegisterNumReads** if there is not already a module to count starting reads per sample.<br>If the input data are paired reads, this module will add a sequence merger, based on property `pipeline.defaultSeqMerger` (currently: biolockj.module.seq.PearMergeReads).",
 "title": "RarefySeqs",
-"citation": "Module developed by Mike Sioda\nBioLockj <VERSION>",
 "properties": [
 {
 "property": "cluster.batchCommand",
@@ -2279,22 +3531,23 @@
 {
 "property": "cluster.statusCommand",
 "type": "string",
-"description": "Terminal command used to submit jobs on the cluster"
+"description": "Terminal command used to check the status of jobs on the cluster"
 },
 {
-"property": "docker.imgVersion",
-"type": "string",
-"description": "indicate specific version of Docker images"
+"property": "docker.saveContainerOnExit",
+"type": "boolean",
+"description": "If Y, docker run command will NOT include the --rm flag"
 },
 {
-"property": "docker.saveContainerOnExit",
+"property": "docker.verifyImage",
 "type": "boolean",
-"description": "if ture, docker run command will NOT include the --rm flag"
+"description": "In check dependencies, run a test to verify the docker image."
 },
 {
-"property": "docker.user",
-"type": "string",
-"description": "name of the Docker Hub user for getting docker containers"
+"property": "pipeline.defaultSeqMerger",
+"description": "Java class name for default module used combined paired read files",
+"default": "biolockj.module.seq.PearMergeReads",
+"type": "string"
 },
 {"property": "rarefySeqs.max"},
 {"property": "rarefySeqs.min"},
@@ -2327,11 +3580,16 @@
 "type": "integer",
 "description": "Sets # of minutes before worker scripts times out."
 }
-],
-"usage": "#BioModule biolockj.module.seq.RarefySeqs"
+]
 },
 {
-"citation": "Module developed by Mike Sioda\nBioLockj <VERSION>",
+"menuPlacement": [
+"biolockj",
+"module",
+"seq",
+"SeqFileValidator"
+],
+"citation": "Module developed by Mike Sioda\nBioLockJ <VERSION>",
 "usage": "#BioModule biolockj.module.seq.SeqFileValidator",
 "pre-req modules": [],
 "description": "This BioModule validates fasta/fastq file formats are valid and enforces min/max read lengths.",
@@ -2362,22 +3620,17 @@
 {
 "property": "cluster.statusCommand",
 "type": "string",
-"description": "Terminal command used to submit jobs on the cluster"
-},
-{
-"property": "docker.imgVersion",
-"type": "string",
-"description": "indicate specific version of Docker images"
+"description": "Terminal command used to check the status of jobs on the cluster"
 },
 {
 "property": "docker.saveContainerOnExit",
 "type": "boolean",
-"description": "if ture, docker run command will NOT include the --rm flag"
+"description": "If Y, docker run command will NOT include the --rm flag"
 },
 {
-"property": "docker.user",
-"type": "string",
-"description": "name of the Docker Hub user for getting docker containers"
+"property": "docker.verifyImage",
+"type": "boolean",
+"description": "In check dependencies, run a test to verify the docker image."
 },
 {
 "property": "script.defaultHeader",
@@ -2417,7 +3670,13 @@
 ]
 },
 {
-"citation": "Module developed by Mike Sioda\nBioLockj <VERSION>",
+"menuPlacement": [
+"biolockj",
+"module",
+"seq",
+"TrimPrimers"
+],
+"citation": "Module developed by Mike Sioda\nBioLockJ <VERSION>",
 "usage": "#BioModule biolockj.module.seq.TrimPrimers",
 "pre-req modules": [],
 "description": "Remove primers from reads, option to discard reads unless primers are attached to both forward and reverse reads.",
@@ -2448,22 +3707,17 @@
 {
 "property": "cluster.statusCommand",
 "type": "string",
-"description": "Terminal command used to submit jobs on the cluster"
-},
-{
-"property": "docker.imgVersion",
-"type": "string",
-"description": "indicate specific version of Docker images"
+"description": "Terminal command used to check the status of jobs on the cluster"
 },
 {
 "property": "docker.saveContainerOnExit",
 "type": "boolean",
-"description": "if ture, docker run command will NOT include the --rm flag"
+"description": "If Y, docker run command will NOT include the --rm flag"
 },
 {
-"property": "docker.user",
-"type": "string",
-"description": "name of the Docker Hub user for getting docker containers"
+"property": "docker.verifyImage",
+"type": "boolean",
+"description": "In check dependencies, run a test to verify the docker image."
 },
 {
 "property": "script.defaultHeader",
-
oh no! examine api-test_21_moduleExtInfo !
diff --git a/Users/ieclabau/git/sheepdog_testing_suite/test/bash/expected/api-test_21_moduleExtInfo_generic.out b/Users/ieclabau/git/sheepdog_testing_suite/test/bash/output-api/api-test_21_moduleExtInfo_generic.out
index 7f172e9..54e5401 100644
--- a/Users/ieclabau/git/sheepdog_testing_suite/test/bash/expected/api-test_21_moduleExtInfo_generic.out
+++ b/Users/ieclabau/git/sheepdog_testing_suite/test/bash/output-api/api-test_21_moduleExtInfo_generic.out
@@ -1,9 +1,18 @@
 [
 {
-"description": "Pick OTUs using a closed reference database and construct an OTU table via the QIIME script pick_closed_reference_otus.py",
-"details": "This module picks OTUs using a closed reference database and constructs an OTU table via the QIIME script [pick_closed_reference_otus.py](http://qiime.org/scripts/pick_closed_reference_otus.html). Taxonomy is assigned using a pre-defined taxonomy map of reference sequence OTU to taxonomy. This is the fastest OTU picking method since samples can be processed in parallel batches. Before the QIIME script is run, batches are prepared in the temp directory, with each batch directory containing a fasta directory with *script.batchSize* fasta files and a QIIME mapping file, created with awk, called batchMapping.tsv for the batch of samples. Inherits from [QiimeClassifier](../../../module.implicit.qiime#QiimeClassifier).",
-"title": "QiimeClosedRefClassifier",
-"citation": "QIIME allows analysis of high-throughput community sequencing data\nJ Gregory Caporaso, Justin Kuczynski, Jesse Stombaugh, Kyle Bittinger, Frederic D Bushman, Elizabeth K Costello, Noah Fierer, Antonio Gonzalez Pena, Julia K Goodrich, Jeffrey I Gordon, Gavin A Huttley, Scott T Kelley, Dan Knights, Jeremy E Koenig, Ruth E Ley, Catherine A Lozupone, Daniel McDonald, Brian D Muegge, Meg Pirrung, Jens Reeder, Joel R Sevinsky, Peter J Turnbaugh, William A Walters, Jeremy Widmann, Tanya Yatsunenko, Jesse Zaneveld and Rob Knight; Nature Methods, 2010; doi:10.1038/nmeth.f.303\n(needs further citation)\nhttp://www.wernerlab.org/software/macqiime/citations",
+"menuPlacement": [
+"biolockj",
+"module",
+"assembly",
+"GenomeAssembly"
+],
+"citation": "checkM database\nhttps://data.ace.uq.edu.au/public/CheckM_databases/checkm_data_2015_01_16.tar.gz\nHMMER\nhttp://eddylab.org/software/hmmer/hmmer.tar.gz\nMASH\nhttps://github.com/marbl/Mash/releases/download/v2.2/mash-Linux64-v2.2.tar\nMetabat2\nhttps://bitbucket.org/berkeleylab/metabat/downloads/metabat-static-binary-linux-x64_v2.12.1.tar.gz\nMetaSPAdes\nhttps://github.com/ablab/spades/releases/download/v3.13.0/SPAdes-3.13.0-Linux.tar.gz\nPPLACER\nhttps://github.com/matsen/pplacer/releases/download/v1.1.alpha19/pplacer-linux-v1.1.alpha19.zip\nPRODIGAL\nhttps://github.com/hyattpd/Prodigal/releases/download/v2.6.3/prodigal.linux\n\nModule developed by Shan Sun\nBioLockJ <VERSION>",
+"usage": "#BioModule biolockj.module.assembly.GenomeAssembly",
+"pre-req modules": [],
+"description": "Assemble WGS sequences with MetaSPAdes, bin contigs with Metabat2 and check quality with checkM.",
+"details": "",
+"post-req modules": [],
+"title": "GenomeAssembly",
 "properties": [
 {
 "property": "cluster.batchCommand",
@@ -28,22 +37,97 @@
 {
 "property": "cluster.statusCommand",
 "type": "string",
+"description": "Terminal command used to check the status of jobs on the cluster"
+},
+{
+"property": "docker.saveContainerOnExit",
+"type": "boolean",
+"description": "If Y, docker run command will NOT include the --rm flag"
+},
+{
+"property": "docker.verifyImage",
+"type": "boolean",
+"description": "In check dependencies, run a test to verify the docker image."
+},
+{
+"property": "script.defaultHeader",
+"description": "Store default script header for MAIN script and locally run WORKER scripts.",
+"default": "#!/bin/bash",
+"type": "string"
+},
+{
+"property": "script.numThreads",
+"description": "Used to reserve cluster resources and passed to any external application call that accepts a numThreads parameter.",
+"default": "8",
+"type": "integer"
+},
+{
+"property": "script.numWorkers",
+"description": "Set number of samples to process per script (if parallel processing)",
+"default": "1",
+"type": "integer"
+},
+{
+"property": "script.permissions",
+"description": "Used as chmod permission parameter (ex: 774)",
+"default": "770",
+"type": "string"
+},
+{
+"property": "script.timeout",
+"type": "integer",
+"description": "Sets # of minutes before worker scripts times out."
+}
+]
+},
+{
+"menuPlacement": [
+"biolockj",
+"module",
+"classifier",
+"r16s",
+"QiimeClosedRefClassifier"
+],
+"citation": "QIIME allows analysis of high-throughput community sequencing data\nJ Gregory Caporaso, Justin Kuczynski, Jesse Stombaugh, Kyle Bittinger, Frederic D Bushman, Elizabeth K Costello, Noah Fierer, Antonio Gonzalez Pena, Julia K Goodrich, Jeffrey I Gordon, Gavin A Huttley, Scott T Kelley, Dan Knights, Jeremy E Koenig, Ruth E Ley, Catherine A Lozupone, Daniel McDonald, Brian D Muegge, Meg Pirrung, Jens Reeder, Joel R Sevinsky, Peter J Turnbaugh, William A Walters, Jeremy Widmann, Tanya Yatsunenko, Jesse Zaneveld and Rob Knight; Nature Methods, 2010; doi:10.1038/nmeth.f.303\n(needs further citation)\nhttp://www.wernerlab.org/software/macqiime/citations",
+"usage": "#BioModule biolockj.module.classifier.r16s.QiimeClosedRefClassifier",
+"description": "Pick OTUs using a closed reference database and construct an OTU table via the QIIME script pick_closed_reference_otus.py",
+"details": "This module picks OTUs using a closed reference database and constructs an OTU table via the QIIME script [pick_closed_reference_otus.py](http://qiime.org/scripts/pick_closed_reference_otus.html). Taxonomy is assigned using a pre-defined taxonomy map of reference sequence OTU to taxonomy. This is the fastest OTU picking method since samples can be processed in parallel batches. Before the QIIME script is run, batches are prepared in the temp directory, with each batch directory containing a fasta directory with *script.batchSize* fasta files and a QIIME mapping file, created with awk, called batchMapping.tsv for the batch of samples. Inherits from [QiimeClassifier](../../../module.implicit.qiime#QiimeClassifier).",
+"title": "QiimeClosedRefClassifier",
+"properties": [
+{
+"property": "cluster.batchCommand",
+"type": "string",
 "description": "Terminal command used to submit jobs on the cluster"
 },
 {
-"property": "docker.imgVersion",
+"property": "cluster.jobHeader",
+"type": "string",
+"description": "Header written at top of worker scripts"
+},
+{
+"property": "cluster.modules",
+"type": "list",
+"description": "List of cluster modules to load at start of worker scripts"
+},
+{
+"property": "cluster.prologue",
+"type": "string",
+"description": "To run at the start of every script after loading cluster modules (if any)"
+},
+{
+"property": "cluster.statusCommand",
 "type": "string",
-"description": "indicate specific version of Docker images"
+"description": "Terminal command used to check the status of jobs on the cluster"
 },
 {
 "property": "docker.saveContainerOnExit",
 "type": "boolean",
-"description": "if ture, docker run command will NOT include the --rm flag"
+"description": "If Y, docker run command will NOT include the --rm flag"
 },
 {
-"property": "docker.user",
-"type": "string",
-"description": "name of the Docker Hub user for getting docker containers"
+"property": "docker.verifyImage",
+"type": "boolean",
+"description": "In check dependencies, run a test to verify the docker image."
 },
 {
 "property": "exe.awk",
@@ -55,6 +139,18 @@
 "type": "executable",
 "description": "Path for the \"vsearch\" executable; if not supplied, any script that needs the vsearch command will assume it is on the PATH."
 },
+{
+"property": "pipeline.defaultFastaConverter",
+"description": "Java class name for default module used to convert files into fasta format",
+"default": "biolockj.module.seq.AwkFastaConverter",
+"type": "string"
+},
+{
+"property": "pipeline.defaultSeqMerger",
+"description": "Java class name for default module used combined paired read files",
+"default": "biolockj.module.seq.PearMergeReads",
+"type": "string"
+},
 {"property": "qiime.params"},
 {"property": "qiime.pynastAlignDB"},
 {"property": "qiime.refSeqDB"},
@@ -93,14 +189,21 @@
 "type": "integer",
 "description": "Sets # of minutes before worker scripts times out."
 }
-],
-"usage": "#BioModule biolockj.module.classifier.r16s.QiimeClosedRefClassifier"
+]
 },
 {
+"menuPlacement": [
+"biolockj",
+"module",
+"classifier",
+"r16s",
+"QiimeDeNovoClassifier"
+],
+"citation": "QIIME allows analysis of high-throughput community sequencing data\nJ Gregory Caporaso, Justin Kuczynski, Jesse Stombaugh, Kyle Bittinger, Frederic D Bushman, Elizabeth K Costello, Noah Fierer, Antonio Gonzalez Pena, Julia K Goodrich, Jeffrey I Gordon, Gavin A Huttley, Scott T Kelley, Dan Knights, Jeremy E Koenig, Ruth E Ley, Catherine A Lozupone, Daniel McDonald, Brian D Muegge, Meg Pirrung, Jens Reeder, Joel R Sevinsky, Peter J Turnbaugh, William A Walters, Jeremy Widmann, Tanya Yatsunenko, Jesse Zaneveld and Rob Knight; Nature Methods, 2010; doi:10.1038/nmeth.f.303\n(needs further citation)\nhttp://www.wernerlab.org/software/macqiime/citations",
+"usage": "#BioModule biolockj.module.classifier.r16s.QiimeDeNovoClassifier",
 "description": "Run the QIIME pick_de_novo_otus.py script on all fasta sequence files",
 "details": "This module runs the QIIME [pick_de_novo_otus.py](http://qiime.org/scripts/pick_de_novo_otus.html) script on all fasta sequence files in a single script since OTUs are assigned by a clustering algorithm. Additional parameters for this script are set using *exe.classifierParams*. If *qiime.removeChimeras* = \"Y\", vsearch is used to find chimeric sequences in the output and the QIIME script [filter_otus_from_otu_table.py](http://qiime.org/scripts/filter_otus_from_otu_table.html) is run to remove them from ./output/otu_table.biom. Inherits from [QiimeClassifier](../../../module.implicit.qiime#QiimeClassifier).",
 "title": "QiimeDeNovoClassifier",
-"citation": "QIIME allows analysis of high-throughput community sequencing data\nJ Gregory Caporaso, Justin Kuczynski, Jesse Stombaugh, Kyle Bittinger, Frederic D Bushman, Elizabeth K Costello, Noah Fierer, Antonio Gonzalez Pena, Julia K Goodrich, Jeffrey I Gordon, Gavin A Huttley, Scott T Kelley, Dan Knights, Jeremy E Koenig, Ruth E Ley, Catherine A Lozupone, Daniel McDonald, Brian D Muegge, Meg Pirrung, Jens Reeder, Joel R Sevinsky, Peter J Turnbaugh, William A Walters, Jeremy Widmann, Tanya Yatsunenko, Jesse Zaneveld and Rob Knight; Nature Methods, 2010; doi:10.1038/nmeth.f.303\n(needs further citation)\nhttp://www.wernerlab.org/software/macqiime/citations",
 "properties": [
 {
 "property": "cluster.batchCommand",
@@ -125,28 +228,35 @@
 {
 "property": "cluster.statusCommand",
 "type": "string",
-"description": "Terminal command used to submit jobs on the cluster"
-},
-{
-"property": "docker.imgVersion",
-"type": "string",
-"description": "indicate specific version of Docker images"
+"description": "Terminal command used to check the status of jobs on the cluster"
 },
 {
 "property": "docker.saveContainerOnExit",
 "type": "boolean",
-"description": "if ture, docker run command will NOT include the --rm flag"
+"description": "If Y, docker run command will NOT include the --rm flag"
 },
 {
-"property": "docker.user",
-"type": "string",
-"description": "name of the Docker Hub user for getting docker containers"
+"property": "docker.verifyImage",
+"type": "boolean",
+"description": "In check dependencies, run a test to verify the docker image."
 },
 {
 "property": "exe.vsearch",
 "type": "executable",
 "description": "Path for the \"vsearch\" executable; if not supplied, any script that needs the vsearch command will assume it is on the PATH."
 },
+{
+"property": "pipeline.defaultFastaConverter",
+"description": "Java class name for default module used to convert files into fasta format",
+"default": "biolockj.module.seq.AwkFastaConverter",
+"type": "string"
+},
+{
+"property": "pipeline.defaultSeqMerger",
+"description": "Java class name for default module used combined paired read files",
+"default": "biolockj.module.seq.PearMergeReads",
+"type": "string"
+},
 {"property": "qiime.params"},
 {"property": "qiime.pynastAlignDB"},
 {"property": "qiime.refSeqDB"},
@@ -185,14 +295,21 @@
 "type": "integer",
 "description": "Sets # of minutes before worker scripts times out."
 }
-],
-"usage": "#BioModule biolockj.module.classifier.r16s.QiimeDeNovoClassifier"
+]
 },
 {
+"menuPlacement": [
+"biolockj",
+"module",
+"classifier",
+"r16s",
+"QiimeOpenRefClassifier"
+],
+"citation": "QIIME allows analysis of high-throughput community sequencing data\nJ Gregory Caporaso, Justin Kuczynski, Jesse Stombaugh, Kyle Bittinger, Frederic D Bushman, Elizabeth K Costello, Noah Fierer, Antonio Gonzalez Pena, Julia K Goodrich, Jeffrey I Gordon, Gavin A Huttley, Scott T Kelley, Dan Knights, Jeremy E Koenig, Ruth E Ley, Catherine A Lozupone, Daniel McDonald, Brian D Muegge, Meg Pirrung, Jens Reeder, Joel R Sevinsky, Peter J Turnbaugh, William A Walters, Jeremy Widmann, Tanya Yatsunenko, Jesse Zaneveld and Rob Knight; Nature Methods, 2010; doi:10.1038/nmeth.f.303\n(needs further citation)\nhttp://www.wernerlab.org/software/macqiime/citations",
+"usage": "#BioModule biolockj.module.classifier.r16s.QiimeOpenRefClassifier",
 "description": "Run the QIIME pick_open_reference_otus.py script on all fasta sequence files",
 "details": "This module runs the QIIME [pick_open_reference_otus.py](http://qiime.org/scripts/pick_open_reference_otus.html) script on all fasta sequence files in a single script since clusters not identified in the reference database are assigned by a clustering algorithm. Additional parameters for this script are set using *exe.classifierParams*. If *qiime.removeChimeras* = \"Y\", vsearch is used to find chimeric sequences in the output and the QIIME script [filter_otus_from_otu_table.py](http://qiime.org/scripts/filter_otus_from_otu_table.html) is run to remove them from ./output/otu_table.biom. Inherits from [QiimeClassifier](../../../module.implicit.qiime#QiimeClassifier).",
 "title": "QiimeOpenRefClassifier",
-"citation": "QIIME allows analysis of high-throughput community sequencing data\nJ Gregory Caporaso, Justin Kuczynski, Jesse Stombaugh, Kyle Bittinger, Frederic D Bushman, Elizabeth K Costello, Noah Fierer, Antonio Gonzalez Pena, Julia K Goodrich, Jeffrey I Gordon, Gavin A Huttley, Scott T Kelley, Dan Knights, Jeremy E Koenig, Ruth E Ley, Catherine A Lozupone, Daniel McDonald, Brian D Muegge, Meg Pirrung, Jens Reeder, Joel R Sevinsky, Peter J Turnbaugh, William A Walters, Jeremy Widmann, Tanya Yatsunenko, Jesse Zaneveld and Rob Knight; Nature Methods, 2010; doi:10.1038/nmeth.f.303\n(needs further citation)\nhttp://www.wernerlab.org/software/macqiime/citations",
 "properties": [
 {
 "property": "cluster.batchCommand",
@@ -217,28 +334,35 @@
 {
 "property": "cluster.statusCommand",
 "type": "string",
-"description": "Terminal command used to submit jobs on the cluster"
-},
-{
-"property": "docker.imgVersion",
-"type": "string",
-"description": "indicate specific version of Docker images"
+"description": "Terminal command used to check the status of jobs on the cluster"
 },
 {
 "property": "docker.saveContainerOnExit",
 "type": "boolean",
-"description": "if ture, docker run command will NOT include the --rm flag"
+"description": "If Y, docker run command will NOT include the --rm flag"
 },
 {
-"property": "docker.user",
-"type": "string",
-"description": "name of the Docker Hub user for getting docker containers"
+"property": "docker.verifyImage",
+"type": "boolean",
+"description": "In check dependencies, run a test to verify the docker image."
 },
 {
 "property": "exe.vsearch",
 "type": "executable",
 "description": "Path for the \"vsearch\" executable; if not supplied, any script that needs the vsearch command will assume it is on the PATH."
 },
+{
+"property": "pipeline.defaultFastaConverter",
+"description": "Java class name for default module used to convert files into fasta format",
+"default": "biolockj.module.seq.AwkFastaConverter",
+"type": "string"
+},
+{
+"property": "pipeline.defaultSeqMerger",
+"description": "Java class name for default module used combined paired read files",
+"default": "biolockj.module.seq.PearMergeReads",
+"type": "string"
+},
 {"property": "qiime.params"},
 {"property": "qiime.pynastAlignDB"},
 {"property": "qiime.refSeqDB"},
@@ -277,11 +401,17 @@
 "type": "integer",
 "description": "Sets # of minutes before worker scripts times out."
 }
-],
-"usage": "#BioModule biolockj.module.classifier.r16s.QiimeOpenRefClassifier"
+]
 },
 {
-"citation": "Module developed by Mike Sioda\nBioLockj <VERSION>",
+"menuPlacement": [
+"biolockj",
+"module",
+"classifier",
+"r16s",
+"RdpClassifier"
+],
+"citation": "Module developed by Mike Sioda\nBioLockJ <VERSION>",
 "usage": "#BioModule biolockj.module.classifier.r16s.RdpClassifier",
 "pre-req modules": [],
 "description": "Classify 16s samples with [RDP](http://rdp.cme.msu.edu/classifier/classifier.jsp).",
@@ -312,22 +442,23 @@
 {
 "property": "cluster.statusCommand",
 "type": "string",
-"description": "Terminal command used to submit jobs on the cluster"
+"description": "Terminal command used to check the status of jobs on the cluster"
 },
 {
-"property": "docker.imgVersion",
-"type": "string",
-"description": "indicate specific version of Docker images"
+"property": "docker.saveContainerOnExit",
+"type": "boolean",
+"description": "If Y, docker run command will NOT include the --rm flag"
 },
 {
-"property": "docker.saveContainerOnExit",
+"property": "docker.verifyImage",
 "type": "boolean",
-"description": "if ture, docker run command will NOT include the --rm flag"
+"description": "In check dependencies, run a test to verify the docker image."
 },
 {
-"property": "docker.user",
-"type": "string",
-"description": "name of the Docker Hub user for getting docker containers"
+"property": "pipeline.defaultSeqMerger",
+"description": "Java class name for default module used combined paired read files",
+"default": "biolockj.module.seq.PearMergeReads",
+"type": "string"
 },
 {"property": "rdp.db"},
 {"property": "rdp.jar"},
@@ -368,6 +499,13 @@
 ]
 },
 {
+"menuPlacement": [
+"biolockj",
+"module",
+"classifier",
+"wgs",
+"Humann2Classifier"
+],
 "citation": "Franzosa EA*, McIver LJ*, Rahnavard G, Thompson LR, Schirmer M, Weingart G, Schwarzberg Lipson K, Knight R, Caporaso JG, Segata N, Huttenhower C. \nSpecies-level functional profiling of metagenomes and metatranscriptomes. Nat Methods 15: 962-968 (2018).\nhttp://huttenhower.sph.harvard.edu/humann2\nBioLockJ module developed by Mike Siota",
 "usage": "#BioModule biolockj.module.classifier.wgs.Humann2Classifier",
 "pre-req modules": [],
@@ -399,22 +537,17 @@
 {
 "property": "cluster.statusCommand",
 "type": "string",
-"description": "Terminal command used to submit jobs on the cluster"
-},
-{
-"property": "docker.imgVersion",
-"type": "string",
-"description": "indicate specific version of Docker images"
+"description": "Terminal command used to check the status of jobs on the cluster"
 },
 {
 "property": "docker.saveContainerOnExit",
 "type": "boolean",
-"description": "if ture, docker run command will NOT include the --rm flag"
+"description": "If Y, docker run command will NOT include the --rm flag"
 },
 {
-"property": "docker.user",
-"type": "string",
-"description": "name of the Docker Hub user for getting docker containers"
+"property": "docker.verifyImage",
+"type": "boolean",
+"description": "In check dependencies, run a test to verify the docker image."
 },
 {
 "property": "exe.humann2",
@@ -458,6 +591,13 @@
 ]
 },
 {
+"menuPlacement": [
+"biolockj",
+"module",
+"classifier",
+"wgs",
+"Kraken2Classifier"
+],
 "citation": "Improved metagenomic analysis with Kraken 2\r\nDerrick E. Wood, Jennifer Lu, Ben Langmead\r\nbioRxiv 762302; doi: https://doi.org/10.1101/762302",
 "usage": "#BioModule biolockj.module.classifier.wgs.Kraken2Classifier",
 "pre-req modules": [],
@@ -489,22 +629,17 @@
 {
 "property": "cluster.statusCommand",
 "type": "string",
-"description": "Terminal command used to submit jobs on the cluster"
-},
-{
-"property": "docker.imgVersion",
-"type": "string",
-"description": "indicate specific version of Docker images"
+"description": "Terminal command used to check the status of jobs on the cluster"
 },
 {
 "property": "docker.saveContainerOnExit",
 "type": "boolean",
-"description": "if ture, docker run command will NOT include the --rm flag"
+"description": "If Y, docker run command will NOT include the --rm flag"
 },
 {
-"property": "docker.user",
-"type": "string",
-"description": "name of the Docker Hub user for getting docker containers"
+"property": "docker.verifyImage",
+"type": "boolean",
+"description": "In check dependencies, run a test to verify the docker image."
 },
 {
 "property": "exe.kraken2",
@@ -545,11 +680,18 @@
 ]
 },
 {
+"menuPlacement": [
+"biolockj",
+"module",
+"classifier",
+"wgs",
+"KrakenClassifier"
+],
 "citation": "Wood DE, Salzberg SL: Kraken: ultrafast metagenomic sequence classification using exact alignments. Genome Biology 2014, 15:R46.",
 "usage": "#BioModule biolockj.module.classifier.wgs.KrakenClassifier",
 "pre-req modules": [],
 "description": "Classify WGS samples with KRAKEN.",
-"details": "Classify WGS samples with [KRAKEN](http://ccb.jhu.edu/software/kraken/).",
+"details": "Classify WGS samples with [KRAKEN](http://ccb.jhu.edu/software/kraken/). \nIf running in docker, the default docker container contains a kmer database which will be used if no database is supplied through the `kraken.db` property.",
 "post-req modules": ["biolockj.module.implicit.parser.wgs.KrakenParser"],
 "title": "KrakenClassifier",
 "properties": [
@@ -576,22 +718,17 @@
 {
 "property": "cluster.statusCommand",
 "type": "string",
-"description": "Terminal command used to submit jobs on the cluster"
-},
-{
-"property": "docker.imgVersion",
-"type": "string",
-"description": "indicate specific version of Docker images"
+"description": "Terminal command used to check the status of jobs on the cluster"
 },
 {
 "property": "docker.saveContainerOnExit",
 "type": "boolean",
-"description": "if ture, docker run command will NOT include the --rm flag"
+"description": "If Y, docker run command will NOT include the --rm flag"
 },
 {
-"property": "docker.user",
-"type": "string",
-"description": "name of the Docker Hub user for getting docker containers"
+"property": "docker.verifyImage",
+"type": "boolean",
+"description": "In check dependencies, run a test to verify the docker image."
 },
 {
 "property": "exe.kraken",
@@ -635,6 +772,13 @@
 ]
 },
 {
+"menuPlacement": [
+"biolockj",
+"module",
+"classifier",
+"wgs",
+"Metaphlan2Classifier"
+],
 "citation": "MetaPhlAn2 for enhanced metagenomic taxonomic profiling. Duy Tin Truong, Eric A Franzosa, Timothy L Tickle, Matthias Scholz, George Weingart, Edoardo Pasolli, Adrian Tett, Curtis Huttenhower & Nicola Segata. Nature Methods 12, 902-903 (2015)",
 "usage": "#BioModule biolockj.module.classifier.wgs.Metaphlan2Classifier",
 "pre-req modules": [],
@@ -666,22 +810,17 @@
 {
 "property": "cluster.statusCommand",
 "type": "string",
-"description": "Terminal command used to submit jobs on the cluster"
-},
-{
-"property": "docker.imgVersion",
-"type": "string",
-"description": "indicate specific version of Docker images"
+"description": "Terminal command used to check the status of jobs on the cluster"
 },
 {
 "property": "docker.saveContainerOnExit",
 "type": "boolean",
-"description": "if ture, docker run command will NOT include the --rm flag"
+"description": "If Y, docker run command will NOT include the --rm flag"
 },
 {
-"property": "docker.user",
-"type": "string",
-"description": "name of the Docker Hub user for getting docker containers"
+"property": "docker.verifyImage",
+"type": "boolean",
+"description": "In check dependencies, run a test to verify the docker image."
 },
 {
 "property": "exe.metaphlan2",
@@ -723,13 +862,17 @@
 ]
 },
 {
-"citation": "BioLockJ <VERSION>",
-"usage": "#BioModule biolockj.module.diy.GenMod",
-"pre-req modules": [],
-"description": "Allows user to add their own scripts into the BioLockJ pipeline.",
-"details": "",
-"post-req modules": [],
-"title": "GenMod",
+"menuPlacement": [
+"biolockj",
+"module",
+"diversity",
+"ShannonDiversity"
+],
+"citation": "Module developed by Anthony Fodor\nBioLockJ <VERSION>",
+"usage": "#BioModule biolockj.module.diversity.ShannonDiversity",
+"description": "Calculate shannon diversity as sum p(logp)",
+"details": "*If the pipeline input does not include at least one taxa table, then the BuildTaxaTables class is added by this module as a pre-requisite.*\n",
+"title": "ShannonDiversity",
 "properties": [
 {
 "property": "cluster.batchCommand",
@@ -754,26 +897,18 @@
 {
 "property": "cluster.statusCommand",
 "type": "string",
-"description": "Terminal command used to submit jobs on the cluster"
-},
-{
-"property": "docker.imgVersion",
-"type": "string",
-"description": "indicate specific version of Docker images"
+"description": "Terminal command used to check the status of jobs on the cluster"
 },
 {
 "property": "docker.saveContainerOnExit",
 "type": "boolean",
-"description": "if ture, docker run command will NOT include the --rm flag"
+"description": "If Y, docker run command will NOT include the --rm flag"
 },
 {
-"property": "docker.user",
-"type": "string",
-"description": "name of the Docker Hub user for getting docker containers"
+"property": "docker.verifyImage",
+"type": "boolean",
+"description": "In check dependencies, run a test to verify the docker image."
 },
-{"property": "genMod.launcher"},
-{"property": "genMod.param"},
-{"property": "genMod.scriptPath"},
 {
 "property": "script.defaultHeader",
 "description": "Store default script header for MAIN script and locally run WORKER scripts.",
@@ -806,13 +941,19 @@
 ]
 },
 {
-"citation": "Module developed by Mike Sioda\nBioLockj <VERSION>",
-"usage": "#BioModule biolockj.module.implicit.Demultiplexer",
+"menuPlacement": [
+"biolockj",
+"module",
+"diy",
+"GenMod"
+],
+"citation": "BioLockJ <VERSION>",
+"usage": "#BioModule biolockj.module.diy.GenMod",
 "pre-req modules": [],
-"description": "Demultiplex samples into separate files for each sample.",
-"details": "",
+"description": "Allows user to add their own scripts into the BioLockJ pipeline.",
+"details": " \nThe specified script is executed using the modules script directory as the current working directory. A _scriptPath_ is required. If specified, the _launcher_ program (ie R, Python) will be used. If specified, any _param_ will be listed as arguments to the script. If running in docker, _dockerContainerName_ is required. \n \nThis is ideal for: \n \n README.md basicRealTest.sh basicRealTest_v1.3.1-22-g232c7fa5_NOT_IN_GIT.txt basicRealTest_v1.3.1-22-g40e95fbd_NOT_IN_GIT.txt basicRealTest_v1.3.1-5-g7f6daf66_NOT_IN_GIT.txt basicRealTest_v1.3.2-18-g2b387977_NOT_IN_GIT.txt basicRealTest_v1.3.2-19-gc3bff5e9_NOT_IN_GIT.txt basicRealTest_v1.3.3-9-gcc07f2ca_NOT_IN_GIT.txt basicRealTest_v1.3.4-rc_NOT_IN_GIT.txt configFile empty_testList.txt empty_testList_results_NOT_IN_GIT.txt expected generalize.sh output output-api pipelines restartDir testAPI.sh testAPI_v1.3.1-22-g232c7fa5_NOT_IN_GIT.txt testAPI_v1.3.1-22-g40e95fbd_NOT_IN_GIT.txt testAPI_v1.3.1-5-g7f6daf66_NOT_IN_GIT.txt testAPI_v1.3.2-18-g2b387977_NOT_IN_GIT.txt testAPI_v1.3.2-19-gc3bff5e9_NOT_IN_GIT.txt testAPI_v1.3.3-9-gcc07f2ca_NOT_IN_GIT.txt testAPI_v1.3.4-rc_NOT_IN_GIT.txt testCommandLine.sh testCommandLine_v1.3.1-22-g232c7fa5_NOT_IN_GIT.txt testCommandLine_v1.3.1-22-g40e95fbd_NOT_IN_GIT.txt testCommandLine_v1.3.1-5-g7f6daf66_NOT_IN_GIT.txt testCommandLine_v1.3.2-18-g2b387977_NOT_IN_GIT.txt testCommandLine_v1.3.2-19-gc3bff5e9_NOT_IN_GIT.txt testCommandLine_v1.3.3-9-gcc07f2ca_NOT_IN_GIT.txt testCommandLine_v1.3.4-rc_NOT_IN_GIT.txt testRestartCylce.sh testRestartCylce_inDocker.sh testRestartCylce_inDocker_v1.3.1-22-g232c7fa5_NOT_IN_GIT.txt testRestartCylce_inDocker_v1.3.1-22-g40e95fbd_NOT_IN_GIT.txt testRestartCylce_inDocker_v1.3.1-5-g7f6daf66_NOT_IN_GIT.txt testRestartCylce_inDocker_v1.3.2-18-g2b387977_NOT_IN_GIT.txt testRestartCylce_inDocker_v1.3.2-19-gc3bff5e9_NOT_IN_GIT.txt testRestartCylce_inDocker_v1.3.3-9-gcc07f2ca_NOT_IN_GIT.txt testRestartCylce_inDocker_v1.3.4-rc_NOT_IN_GIT.txt testRestartCylce_v1.3.1-22-g232c7fa5_NOT_IN_GIT.txt testRestartCylce_v1.3.1-22-g40e95fbd_NOT_IN_GIT.txt testRestartCylce_v1.3.1-5-g7f6daf66_NOT_IN_GIT.txt testRestartCylce_v1.3.2-18-g2b387977_NOT_IN_GIT.txt testRestartCylce_v1.3.2-19-gc3bff5e9_NOT_IN_GIT.txt testRestartCylce_v1.3.3-9-gcc07f2ca_NOT_IN_GIT.txt testRestartCylce_v1.3.4-rc_NOT_IN_GIT.txt wrap_bash_tests.sh Custom analysis for a given pipeline, such as an R or python script \n README.md basicRealTest.sh basicRealTest_v1.3.1-22-g232c7fa5_NOT_IN_GIT.txt basicRealTest_v1.3.1-22-g40e95fbd_NOT_IN_GIT.txt basicRealTest_v1.3.1-5-g7f6daf66_NOT_IN_GIT.txt basicRealTest_v1.3.2-18-g2b387977_NOT_IN_GIT.txt basicRealTest_v1.3.2-19-gc3bff5e9_NOT_IN_GIT.txt basicRealTest_v1.3.3-9-gcc07f2ca_NOT_IN_GIT.txt basicRealTest_v1.3.4-rc_NOT_IN_GIT.txt configFile empty_testList.txt empty_testList_results_NOT_IN_GIT.txt expected generalize.sh output output-api pipelines restartDir testAPI.sh testAPI_v1.3.1-22-g232c7fa5_NOT_IN_GIT.txt testAPI_v1.3.1-22-g40e95fbd_NOT_IN_GIT.txt testAPI_v1.3.1-5-g7f6daf66_NOT_IN_GIT.txt testAPI_v1.3.2-18-g2b387977_NOT_IN_GIT.txt testAPI_v1.3.2-19-gc3bff5e9_NOT_IN_GIT.txt testAPI_v1.3.3-9-gcc07f2ca_NOT_IN_GIT.txt testAPI_v1.3.4-rc_NOT_IN_GIT.txt testCommandLine.sh testCommandLine_v1.3.1-22-g232c7fa5_NOT_IN_GIT.txt testCommandLine_v1.3.1-22-g40e95fbd_NOT_IN_GIT.txt testCommandLine_v1.3.1-5-g7f6daf66_NOT_IN_GIT.txt testCommandLine_v1.3.2-18-g2b387977_NOT_IN_GIT.txt testCommandLine_v1.3.2-19-gc3bff5e9_NOT_IN_GIT.txt testCommandLine_v1.3.3-9-gcc07f2ca_NOT_IN_GIT.txt testCommandLine_v1.3.4-rc_NOT_IN_GIT.txt testRestartCylce.sh testRestartCylce_inDocker.sh testRestartCylce_inDocker_v1.3.1-22-g232c7fa5_NOT_IN_GIT.txt testRestartCylce_inDocker_v1.3.1-22-g40e95fbd_NOT_IN_GIT.txt testRestartCylce_inDocker_v1.3.1-5-g7f6daf66_NOT_IN_GIT.txt testRestartCylce_inDocker_v1.3.2-18-g2b387977_NOT_IN_GIT.txt testRestartCylce_inDocker_v1.3.2-19-gc3bff5e9_NOT_IN_GIT.txt testRestartCylce_inDocker_v1.3.3-9-gcc07f2ca_NOT_IN_GIT.txt testRestartCylce_inDocker_v1.3.4-rc_NOT_IN_GIT.txt testRestartCylce_v1.3.1-22-g232c7fa5_NOT_IN_GIT.txt testRestartCylce_v1.3.1-22-g40e95fbd_NOT_IN_GIT.txt testRestartCylce_v1.3.1-5-g7f6daf66_NOT_IN_GIT.txt testRestartCylce_v1.3.2-18-g2b387977_NOT_IN_GIT.txt testRestartCylce_v1.3.2-19-gc3bff5e9_NOT_IN_GIT.txt testRestartCylce_v1.3.3-9-gcc07f2ca_NOT_IN_GIT.txt testRestartCylce_v1.3.4-rc_NOT_IN_GIT.txt wrap_bash_tests.sh Any steps where an appropriate BioLockJ module does not exist \n \nAny step in your analysis process that might otherwise have to be done manually can be stored as a custom script so that the entire process is as reproducible as possible. \n \nIt is STRONGLY encouraged that users write scripts using common module conventions: \n \n README.md basicRealTest.sh basicRealTest_v1.3.1-22-g232c7fa5_NOT_IN_GIT.txt basicRealTest_v1.3.1-22-g40e95fbd_NOT_IN_GIT.txt basicRealTest_v1.3.1-5-g7f6daf66_NOT_IN_GIT.txt basicRealTest_v1.3.2-18-g2b387977_NOT_IN_GIT.txt basicRealTest_v1.3.2-19-gc3bff5e9_NOT_IN_GIT.txt basicRealTest_v1.3.3-9-gcc07f2ca_NOT_IN_GIT.txt basicRealTest_v1.3.4-rc_NOT_IN_GIT.txt configFile empty_testList.txt empty_testList_results_NOT_IN_GIT.txt expected generalize.sh output output-api pipelines restartDir testAPI.sh testAPI_v1.3.1-22-g232c7fa5_NOT_IN_GIT.txt testAPI_v1.3.1-22-g40e95fbd_NOT_IN_GIT.txt testAPI_v1.3.1-5-g7f6daf66_NOT_IN_GIT.txt testAPI_v1.3.2-18-g2b387977_NOT_IN_GIT.txt testAPI_v1.3.2-19-gc3bff5e9_NOT_IN_GIT.txt testAPI_v1.3.3-9-gcc07f2ca_NOT_IN_GIT.txt testAPI_v1.3.4-rc_NOT_IN_GIT.txt testCommandLine.sh testCommandLine_v1.3.1-22-g232c7fa5_NOT_IN_GIT.txt testCommandLine_v1.3.1-22-g40e95fbd_NOT_IN_GIT.txt testCommandLine_v1.3.1-5-g7f6daf66_NOT_IN_GIT.txt testCommandLine_v1.3.2-18-g2b387977_NOT_IN_GIT.txt testCommandLine_v1.3.2-19-gc3bff5e9_NOT_IN_GIT.txt testCommandLine_v1.3.3-9-gcc07f2ca_NOT_IN_GIT.txt testCommandLine_v1.3.4-rc_NOT_IN_GIT.txt testRestartCylce.sh testRestartCylce_inDocker.sh testRestartCylce_inDocker_v1.3.1-22-g232c7fa5_NOT_IN_GIT.txt testRestartCylce_inDocker_v1.3.1-22-g40e95fbd_NOT_IN_GIT.txt testRestartCylce_inDocker_v1.3.1-5-g7f6daf66_NOT_IN_GIT.txt testRestartCylce_inDocker_v1.3.2-18-g2b387977_NOT_IN_GIT.txt testRestartCylce_inDocker_v1.3.2-19-gc3bff5e9_NOT_IN_GIT.txt testRestartCylce_inDocker_v1.3.3-9-gcc07f2ca_NOT_IN_GIT.txt testRestartCylce_inDocker_v1.3.4-rc_NOT_IN_GIT.txt testRestartCylce_v1.3.1-22-g232c7fa5_NOT_IN_GIT.txt testRestartCylce_v1.3.1-22-g40e95fbd_NOT_IN_GIT.txt testRestartCylce_v1.3.1-5-g7f6daf66_NOT_IN_GIT.txt testRestartCylce_v1.3.2-18-g2b387977_NOT_IN_GIT.txt testRestartCylce_v1.3.2-19-gc3bff5e9_NOT_IN_GIT.txt testRestartCylce_v1.3.3-9-gcc07f2ca_NOT_IN_GIT.txt testRestartCylce_v1.3.4-rc_NOT_IN_GIT.txt wrap_bash_tests.sh use relative file paths (starting with `.` or `..`) \n README.md basicRealTest.sh basicRealTest_v1.3.1-22-g232c7fa5_NOT_IN_GIT.txt basicRealTest_v1.3.1-22-g40e95fbd_NOT_IN_GIT.txt basicRealTest_v1.3.1-5-g7f6daf66_NOT_IN_GIT.txt basicRealTest_v1.3.2-18-g2b387977_NOT_IN_GIT.txt basicRealTest_v1.3.2-19-gc3bff5e9_NOT_IN_GIT.txt basicRealTest_v1.3.3-9-gcc07f2ca_NOT_IN_GIT.txt basicRealTest_v1.3.4-rc_NOT_IN_GIT.txt configFile empty_testList.txt empty_testList_results_NOT_IN_GIT.txt expected generalize.sh output output-api pipelines restartDir testAPI.sh testAPI_v1.3.1-22-g232c7fa5_NOT_IN_GIT.txt testAPI_v1.3.1-22-g40e95fbd_NOT_IN_GIT.txt testAPI_v1.3.1-5-g7f6daf66_NOT_IN_GIT.txt testAPI_v1.3.2-18-g2b387977_NOT_IN_GIT.txt testAPI_v1.3.2-19-gc3bff5e9_NOT_IN_GIT.txt testAPI_v1.3.3-9-gcc07f2ca_NOT_IN_GIT.txt testAPI_v1.3.4-rc_NOT_IN_GIT.txt testCommandLine.sh testCommandLine_v1.3.1-22-g232c7fa5_NOT_IN_GIT.txt testCommandLine_v1.3.1-22-g40e95fbd_NOT_IN_GIT.txt testCommandLine_v1.3.1-5-g7f6daf66_NOT_IN_GIT.txt testCommandLine_v1.3.2-18-g2b387977_NOT_IN_GIT.txt testCommandLine_v1.3.2-19-gc3bff5e9_NOT_IN_GIT.txt testCommandLine_v1.3.3-9-gcc07f2ca_NOT_IN_GIT.txt testCommandLine_v1.3.4-rc_NOT_IN_GIT.txt testRestartCylce.sh testRestartCylce_inDocker.sh testRestartCylce_inDocker_v1.3.1-22-g232c7fa5_NOT_IN_GIT.txt testRestartCylce_inDocker_v1.3.1-22-g40e95fbd_NOT_IN_GIT.txt testRestartCylce_inDocker_v1.3.1-5-g7f6daf66_NOT_IN_GIT.txt testRestartCylce_inDocker_v1.3.2-18-g2b387977_NOT_IN_GIT.txt testRestartCylce_inDocker_v1.3.2-19-gc3bff5e9_NOT_IN_GIT.txt testRestartCylce_inDocker_v1.3.3-9-gcc07f2ca_NOT_IN_GIT.txt testRestartCylce_inDocker_v1.3.4-rc_NOT_IN_GIT.txt testRestartCylce_v1.3.1-22-g232c7fa5_NOT_IN_GIT.txt testRestartCylce_v1.3.1-22-g40e95fbd_NOT_IN_GIT.txt testRestartCylce_v1.3.1-5-g7f6daf66_NOT_IN_GIT.txt testRestartCylce_v1.3.2-18-g2b387977_NOT_IN_GIT.txt testRestartCylce_v1.3.2-19-gc3bff5e9_NOT_IN_GIT.txt testRestartCylce_v1.3.3-9-gcc07f2ca_NOT_IN_GIT.txt testRestartCylce_v1.3.4-rc_NOT_IN_GIT.txt wrap_bash_tests.sh put all generated output in the modules `output` directory (`../output`) \n README.md basicRealTest.sh basicRealTest_v1.3.1-22-g232c7fa5_NOT_IN_GIT.txt basicRealTest_v1.3.1-22-g40e95fbd_NOT_IN_GIT.txt basicRealTest_v1.3.1-5-g7f6daf66_NOT_IN_GIT.txt basicRealTest_v1.3.2-18-g2b387977_NOT_IN_GIT.txt basicRealTest_v1.3.2-19-gc3bff5e9_NOT_IN_GIT.txt basicRealTest_v1.3.3-9-gcc07f2ca_NOT_IN_GIT.txt basicRealTest_v1.3.4-rc_NOT_IN_GIT.txt configFile empty_testList.txt empty_testList_results_NOT_IN_GIT.txt expected generalize.sh output output-api pipelines restartDir testAPI.sh testAPI_v1.3.1-22-g232c7fa5_NOT_IN_GIT.txt testAPI_v1.3.1-22-g40e95fbd_NOT_IN_GIT.txt testAPI_v1.3.1-5-g7f6daf66_NOT_IN_GIT.txt testAPI_v1.3.2-18-g2b387977_NOT_IN_GIT.txt testAPI_v1.3.2-19-gc3bff5e9_NOT_IN_GIT.txt testAPI_v1.3.3-9-gcc07f2ca_NOT_IN_GIT.txt testAPI_v1.3.4-rc_NOT_IN_GIT.txt testCommandLine.sh testCommandLine_v1.3.1-22-g232c7fa5_NOT_IN_GIT.txt testCommandLine_v1.3.1-22-g40e95fbd_NOT_IN_GIT.txt testCommandLine_v1.3.1-5-g7f6daf66_NOT_IN_GIT.txt testCommandLine_v1.3.2-18-g2b387977_NOT_IN_GIT.txt testCommandLine_v1.3.2-19-gc3bff5e9_NOT_IN_GIT.txt testCommandLine_v1.3.3-9-gcc07f2ca_NOT_IN_GIT.txt testCommandLine_v1.3.4-rc_NOT_IN_GIT.txt testRestartCylce.sh testRestartCylce_inDocker.sh testRestartCylce_inDocker_v1.3.1-22-g232c7fa5_NOT_IN_GIT.txt testRestartCylce_inDocker_v1.3.1-22-g40e95fbd_NOT_IN_GIT.txt testRestartCylce_inDocker_v1.3.1-5-g7f6daf66_NOT_IN_GIT.txt testRestartCylce_inDocker_v1.3.2-18-g2b387977_NOT_IN_GIT.txt testRestartCylce_inDocker_v1.3.2-19-gc3bff5e9_NOT_IN_GIT.txt testRestartCylce_inDocker_v1.3.3-9-gcc07f2ca_NOT_IN_GIT.txt testRestartCylce_inDocker_v1.3.4-rc_NOT_IN_GIT.txt testRestartCylce_v1.3.1-22-g232c7fa5_NOT_IN_GIT.txt testRestartCylce_v1.3.1-22-g40e95fbd_NOT_IN_GIT.txt testRestartCylce_v1.3.1-5-g7f6daf66_NOT_IN_GIT.txt testRestartCylce_v1.3.2-18-g2b387977_NOT_IN_GIT.txt testRestartCylce_v1.3.2-19-gc3bff5e9_NOT_IN_GIT.txt testRestartCylce_v1.3.3-9-gcc07f2ca_NOT_IN_GIT.txt testRestartCylce_v1.3.4-rc_NOT_IN_GIT.txt wrap_bash_tests.sh put any temporary files in the modules `temp` directory (`../tmep`). \n README.md basicRealTest.sh basicRealTest_v1.3.1-22-g232c7fa5_NOT_IN_GIT.txt basicRealTest_v1.3.1-22-g40e95fbd_NOT_IN_GIT.txt basicRealTest_v1.3.1-5-g7f6daf66_NOT_IN_GIT.txt basicRealTest_v1.3.2-18-g2b387977_NOT_IN_GIT.txt basicRealTest_v1.3.2-19-gc3bff5e9_NOT_IN_GIT.txt basicRealTest_v1.3.3-9-gcc07f2ca_NOT_IN_GIT.txt basicRealTest_v1.3.4-rc_NOT_IN_GIT.txt configFile empty_testList.txt empty_testList_results_NOT_IN_GIT.txt expected generalize.sh output output-api pipelines restartDir testAPI.sh testAPI_v1.3.1-22-g232c7fa5_NOT_IN_GIT.txt testAPI_v1.3.1-22-g40e95fbd_NOT_IN_GIT.txt testAPI_v1.3.1-5-g7f6daf66_NOT_IN_GIT.txt testAPI_v1.3.2-18-g2b387977_NOT_IN_GIT.txt testAPI_v1.3.2-19-gc3bff5e9_NOT_IN_GIT.txt testAPI_v1.3.3-9-gcc07f2ca_NOT_IN_GIT.txt testAPI_v1.3.4-rc_NOT_IN_GIT.txt testCommandLine.sh testCommandLine_v1.3.1-22-g232c7fa5_NOT_IN_GIT.txt testCommandLine_v1.3.1-22-g40e95fbd_NOT_IN_GIT.txt testCommandLine_v1.3.1-5-g7f6daf66_NOT_IN_GIT.txt testCommandLine_v1.3.2-18-g2b387977_NOT_IN_GIT.txt testCommandLine_v1.3.2-19-gc3bff5e9_NOT_IN_GIT.txt testCommandLine_v1.3.3-9-gcc07f2ca_NOT_IN_GIT.txt testCommandLine_v1.3.4-rc_NOT_IN_GIT.txt testRestartCylce.sh testRestartCylce_inDocker.sh testRestartCylce_inDocker_v1.3.1-22-g232c7fa5_NOT_IN_GIT.txt testRestartCylce_inDocker_v1.3.1-22-g40e95fbd_NOT_IN_GIT.txt testRestartCylce_inDocker_v1.3.1-5-g7f6daf66_NOT_IN_GIT.txt testRestartCylce_inDocker_v1.3.2-18-g2b387977_NOT_IN_GIT.txt testRestartCylce_inDocker_v1.3.2-19-gc3bff5e9_NOT_IN_GIT.txt testRestartCylce_inDocker_v1.3.3-9-gcc07f2ca_NOT_IN_GIT.txt testRestartCylce_inDocker_v1.3.4-rc_NOT_IN_GIT.txt testRestartCylce_v1.3.1-22-g232c7fa5_NOT_IN_GIT.txt testRestartCylce_v1.3.1-22-g40e95fbd_NOT_IN_GIT.txt testRestartCylce_v1.3.1-5-g7f6daf66_NOT_IN_GIT.txt testRestartCylce_v1.3.2-18-g2b387977_NOT_IN_GIT.txt testRestartCylce_v1.3.2-19-gc3bff5e9_NOT_IN_GIT.txt testRestartCylce_v1.3.3-9-gcc07f2ca_NOT_IN_GIT.txt testRestartCylce_v1.3.4-rc_NOT_IN_GIT.txt wrap_bash_tests.sh the main pipeline directory would be `../..`, and the output of a previous module such as `PearMergedReads` would be in `../../*_PearMergedReads/output` \n \nTo use the GenMod module multiple times in a single pipeline, use the `AS` keyword to direct properties to the correct instance of the module. \n \nFor example: \n``` \n#BioModule biolockj.module.diy.GenMod AS Part1 \n#<other modules> \n#BioModule biolockj.module.diy.GenMod AS Part2 \n \nPart1.launcher=python \nPart1.script=path/to/first/script.py \n \nPart2.script=path/to/bash/script/doLast.sh \n``` \nWith this, `script.py` will be run using python. Then other modules will run. Then `doLast.sh` will be run using the default system (probably bash, unless it has a shebang line specifiying something else). \n",
 "post-req modules": [],
-"title": "Demultiplexer",
+"title": "GenMod",
 "properties": [
 {
 "property": "cluster.batchCommand",
@@ -837,35 +978,21 @@
 {
 "property": "cluster.statusCommand",
 "type": "string",
-"description": "Terminal command used to submit jobs on the cluster"
-},
-{
-"property": "demultiplexer.barcodeCutoff",
-"default": "0.05"
-},
-{"property": "demultiplexer.barcodeRevComp"},
-{"property": "demultiplexer.strategy"},
-{
-"property": "docker.imgVersion",
-"type": "string",
-"description": "indicate specific version of Docker images"
+"description": "Terminal command used to check the status of jobs on the cluster"
 },
 {
 "property": "docker.saveContainerOnExit",
 "type": "boolean",
-"description": "if ture, docker run command will NOT include the --rm flag"
-},
-{
-"property": "docker.user",
-"type": "string",
-"description": "name of the Docker Hub user for getting docker containers"
+"description": "If Y, docker run command will NOT include the --rm flag"
 },
 {
-"property": "metadata.barcodeColumn",
-"description": "metadata column with identifying barcodes",
-"default": "BarcodeSequence",
-"type": "string"
+"property": "docker.verifyImage",
+"type": "boolean",
+"description": "In check dependencies, run a test to verify the docker image."
 },
+{"property": "genMod.launcher"},
+{"property": "genMod.param"},
+{"property": "genMod.scriptPath"},
 {
 "property": "script.defaultHeader",
 "description": "Store default script header for MAIN script and locally run WORKER scripts.",
@@ -898,13 +1025,20 @@
 ]
 },
 {
-"citation": "Module developed by Mike Sioda\nBioLockj <VERSION>",
-"usage": "#BioModule biolockj.module.implicit.parser.r16s.RdpParser",
+"menuPlacement": [
+"biolockj",
+"module",
+"getData",
+"sra",
+"SraDownload"
+],
+"citation": "[sra-tools](https://github.com/ncbi/sra-tools)\nModule developed by Philip Badzuh\nBioLockJ <VERSION>",
+"usage": "#BioModule biolockj.module.getData.sra.SraDownload",
 "pre-req modules": [],
-"description": "Build OTU tables from [RDP](http://rdp.cme.msu.edu/classifier/classifier.jsp) reports.",
-"details": "",
+"description": "SraDownload downloads and compresses short read archive (SRA) files to fastq.gz",
+"details": "Downloading and compressing files requires fasterq-dump and gzip.The accessions to download can be specified using any ONE of the following:<br> 1. A metadata file (given by *metadata.filePath* that has column *sra.accessionIdColumn*.<br> 2. *sra.sraProjectId*, OR <br> 3. *sra.sraAccList*<br>\n*sra.destinationDir* gives an external directory that can be shared across pipelines. This is recommended. If it is not specified, the files will be downlaoded to this modules output directory. <br>\nSuggested: input.dirPaths = ${sra.destinationDir}<br>\nTypically, BioLockJ will automatically determine modules to add to the pipeline to process sequence data. If the files are not present on the system when the pipeline starts, then it is up to the user to configure any and all sequence processing modules.",
 "post-req modules": [],
-"title": "RdpParser",
+"title": "SraDownload",
 "properties": [
 {
 "property": "cluster.batchCommand",
@@ -929,26 +1063,32 @@
 {
 "property": "cluster.statusCommand",
 "type": "string",
-"description": "Terminal command used to submit jobs on the cluster"
+"description": "Terminal command used to check the status of jobs on the cluster"
 },
 {
-"property": "docker.imgVersion",
-"type": "string",
-"description": "indicate specific version of Docker images"
+"property": "docker.saveContainerOnExit",
+"type": "boolean",
+"description": "If Y, docker run command will NOT include the --rm flag"
 },
 {
-"property": "docker.saveContainerOnExit",
+"property": "docker.verifyImage",
 "type": "boolean",
-"description": "if ture, docker run command will NOT include the --rm flag"
+"description": "In check dependencies, run a test to verify the docker image."
 },
 {
-"property": "docker.user",
-"type": "string",
-"description": "name of the Docker Hub user for getting docker containers"
+"property": "exe.fasterq-dump",
+"type": "executable",
+"description": "Path for the \"fasterq-dump\" executable; if not supplied, any script that needs the fasterq-dump command will assume it is on the PATH."
 },
 {
-"property": "rdp.minThresholdScore",
-"default": "80"
+"property": "exe.gzip",
+"type": "executable",
+"description": "Path for the \"gzip\" executable; if not supplied, any script that needs the gzip command will assume it is on the PATH."
+},
+{
+"property": "metadata.filePath",
+"type": "string",
+"description": "If absolute file path, use file as metadata.<br>If directory path, must find exactly 1 file within, to use as metadata."
 },
 {
 "property": "script.defaultHeader",
@@ -978,17 +1118,28 @@
 "property": "script.timeout",
 "type": "integer",
 "description": "Sets # of minutes before worker scripts times out."
-}
+},
+{"property": "sra.accessionIdColumn"},
+{"property": "sra.destinationDir"},
+{"property": "sra.sraAccList"},
+{"property": "sra.sraProjectId"}
 ]
 },
 {
-"citation": "Module developed by Mike Sioda\nBioLockJ <VERSION>",
-"usage": "#BioModule biolockj.module.implicit.parser.wgs.Humann2Parser",
+"menuPlacement": [
+"biolockj",
+"module",
+"getData",
+"sra",
+"SraMetaDB"
+],
+"citation": "Module developed by Malcolm Zapatas and Ivory Blakley\nBioLockJ <VERSION>",
+"usage": "#BioModule biolockj.module.getData.sra.SraMetaDB",
 "pre-req modules": [],
-"description": "Build OTU tables from HumanN2 classifier module output.",
-"details": "",
+"description": "Makes sure that the SRAmetadb exists, downloads if it does not already exist.",
+"details": "If *sra.forceDbUpdate* is set to Y, then the zipped form of the database is downloaded, and kept and used to compare the local version to the server version; and the server version is downloaded if it is newer.\n\nServer version location: https://starbuck1.s3.amazonaws.com/sradb/SRAmetadb.sqlite.gz\n\n*sra.metaDataDir* directory must exist. If the database does not exist at that location, it will be downloaded.\n\nThe download process is somewhat error-prone, especially in docker. The download is about 4GB and the unzipped database is up to 30GB.It is generally recommended to download and unzip the database manually:\n\nwget https://starbuck1.s3.amazonaws.com/sradb/SRAmetadb.sqlite.gz; <br>gunzip SRAmetadb.sqlite",
 "post-req modules": [],
-"title": "Humann2Parser",
+"title": "SraMetaDB",
 "properties": [
 {
 "property": "cluster.batchCommand",
@@ -1013,25 +1164,28 @@
 {
 "property": "cluster.statusCommand",
 "type": "string",
-"description": "Terminal command used to submit jobs on the cluster"
+"description": "Terminal command used to check the status of jobs on the cluster"
 },
 {
-"property": "docker.imgVersion",
-"type": "string",
-"description": "indicate specific version of Docker images"
+"property": "docker.saveContainerOnExit",
+"type": "boolean",
+"description": "If Y, docker run command will NOT include the --rm flag"
 },
 {
-"property": "docker.saveContainerOnExit",
+"property": "docker.verifyImage",
 "type": "boolean",
-"description": "if ture, docker run command will NOT include the --rm flag"
+"description": "In check dependencies, run a test to verify the docker image."
 },
 {
-"property": "docker.user",
-"type": "string",
-"description": "name of the Docker Hub user for getting docker containers"
+"property": "exe.gunzip",
+"type": "executable",
+"description": "Path for the \"gunzip\" executable; if not supplied, any script that needs the gunzip command will assume it is on the PATH."
+},
+{
+"property": "exe.wget",
+"type": "executable",
+"description": "Path for the \"wget\" executable; if not supplied, any script that needs the wget command will assume it is on the PATH."
 },
-{"property": "humann2.keepUnintegrated"},
-{"property": "humann2.keepUnmapped"},
 {
 "property": "script.defaultHeader",
 "description": "Store default script header for MAIN script and locally run WORKER scripts.",
@@ -1060,17 +1214,26 @@
 "property": "script.timeout",
 "type": "integer",
 "description": "Sets # of minutes before worker scripts times out."
-}
+},
+{"property": "sra.forceDbUpdate"},
+{"property": "sra.metaDataDir"}
 ]
 },
 {
-"citation": "Module developed by Mike Sioda\nBioLockj <VERSION>",
-"usage": "#BioModule biolockj.module.implicit.parser.wgs.KrakenParser",
-"pre-req modules": [],
-"description": "Build OTU tables from [KRAKEN](http://ccb.jhu.edu/software/kraken/) mpa-format reports.",
-"details": "",
+"menuPlacement": [
+"biolockj",
+"module",
+"getData",
+"sra",
+"SraMetaData"
+],
+"citation": "Module developed by Malcolm Zapatas and Ivory Blakley\nBioLockJ <VERSION>",
+"usage": "#BioModule biolockj.module.getData.sra.SraMetaData",
+"pre-req modules": ["biolockj.module.getData.sra.SraMetaDB"],
+"description": "Extract metadata via pysradb from local copy of SRAmetadb.sqlite.",
+"details": "The **biolockj.module.getData.sra.SraMetaDB** module is added a pre-requisite to ensure that the database is available.",
 "post-req modules": [],
-"title": "KrakenParser",
+"title": "SraMetaData",
 "properties": [
 {
 "property": "cluster.batchCommand",
@@ -1095,28 +1258,121 @@
 {
 "property": "cluster.statusCommand",
 "type": "string",
-"description": "Terminal command used to submit jobs on the cluster"
+"description": "Terminal command used to check the status of jobs on the cluster"
 },
 {
-"property": "docker.imgVersion",
-"type": "string",
-"description": "indicate specific version of Docker images"
+"property": "docker.saveContainerOnExit",
+"type": "boolean",
+"description": "If Y, docker run command will NOT include the --rm flag"
 },
 {
-"property": "docker.saveContainerOnExit",
+"property": "docker.verifyImage",
 "type": "boolean",
-"description": "if ture, docker run command will NOT include the --rm flag"
+"description": "In check dependencies, run a test to verify the docker image."
 },
 {
-"property": "docker.user",
-"type": "string",
-"description": "name of the Docker Hub user for getting docker containers"
+"property": "exe.pysradb",
+"type": "executable",
+"description": "Path for the \"pysradb\" executable; if not supplied, any script that needs the pysradb command will assume it is on the PATH."
 },
 {
-"property": "report.unclassifiedTaxa",
-"description": "report unclassified taxa",
-"default": "Y",
-"type": "boolean"
+"property": "script.defaultHeader",
+"description": "Store default script header for MAIN script and locally run WORKER scripts.",
+"default": "#!/bin/bash",
+"type": "string"
+},
+{
+"property": "script.numThreads",
+"description": "Used to reserve cluster resources and passed to any external application call that accepts a numThreads parameter.",
+"default": "8",
+"type": "integer"
+},
+{
+"property": "script.numWorkers",
+"description": "Set number of samples to process per script (if parallel processing)",
+"default": "1",
+"type": "integer"
+},
+{
+"property": "script.permissions",
+"description": "Used as chmod permission parameter (ex: 774)",
+"default": "770",
+"type": "string"
+},
+{
+"property": "script.timeout",
+"type": "integer",
+"description": "Sets # of minutes before worker scripts times out."
+},
+{"property": "sra.metaDataDir"},
+{"property": "sra.sraProjectId"}
+]
+},
+{
+"menuPlacement": [
+"biolockj",
+"module",
+"getData",
+"sra",
+"SrpSrrConverter"
+],
+"citation": "Module developed by Malcolm Zapatas and Ivory Blakley\nBioLockJ <VERSION>",
+"usage": "#BioModule biolockj.module.getData.sra.SrpSrrConverter",
+"pre-req modules": [],
+"description": "Create an SraAccList.txt file from an SRA project identifier.",
+"details": "Typcially, this module is only added to the pipeline when SraDownload needs it.<br>\nThis sets the value of *sra.sraAccList* to the SraAccList.txt file in this modules output directory",
+"post-req modules": [],
+"title": "SrpSrrConverter",
+"properties": [
+{
+"property": "cluster.batchCommand",
+"type": "string",
+"description": "Terminal command used to submit jobs on the cluster"
+},
+{
+"property": "cluster.jobHeader",
+"type": "string",
+"description": "Header written at top of worker scripts"
+},
+{
+"property": "cluster.modules",
+"type": "list",
+"description": "List of cluster modules to load at start of worker scripts"
+},
+{
+"property": "cluster.prologue",
+"type": "string",
+"description": "To run at the start of every script after loading cluster modules (if any)"
+},
+{
+"property": "cluster.statusCommand",
+"type": "string",
+"description": "Terminal command used to check the status of jobs on the cluster"
+},
+{
+"property": "docker.saveContainerOnExit",
+"type": "boolean",
+"description": "If Y, docker run command will NOT include the --rm flag"
+},
+{
+"property": "docker.verifyImage",
+"type": "boolean",
+"description": "In check dependencies, run a test to verify the docker image."
+},
+{
+"property": "exe.efetch",
+"type": "executable",
+"description": "Path for the \"efetch\" executable; if not supplied, any script that needs the efetch command will assume it is on the PATH."
+},
+{
+"property": "exe.esearch",
+"type": "executable",
+"description": "Path for the \"esearch\" executable; if not supplied, any script that needs the esearch command will assume it is on the PATH."
+},
+{
+"property": "exe.xtract",
+"type": "executable",
+"description": "Path for the \"xtract\" executable; if not supplied, any script that needs the xtract command will assume it is on the PATH."
 },
 {
 "property": "script.defaultHeader",
@@ -1146,53 +1402,870 @@
 "property": "script.timeout",
 "type": "integer",
 "description": "Sets # of minutes before worker scripts times out."
-}
+},
+{"property": "sra.sraProjectId"}
 ]
 },
 {
-"citation": "Module developed by Mike Sioda.\nBioLockJ <VERSION>",
-"usage": "#BioModule biolockj.module.report.Email",
+"menuPlacement": [
+"biolockj",
+"module",
+"implicit",
+"Demultiplexer"
+],
+"citation": "Module developed by Mike Sioda\nBioLockJ <VERSION>",
+"usage": "#BioModule biolockj.module.implicit.Demultiplexer",
 "pre-req modules": [],
-"description": "Send user an email containing the pipeline summary when the pipeline either completes or fails.",
+"description": "Demultiplex samples into separate files for each sample.",
 "details": "",
 "post-req modules": [],
-"title": "Email",
+"title": "Demultiplexer",
 "properties": [
 {
-"property": "mail.encryptedPassword",
-"default": "7GYvu1m+Yv1Gk7Cd9BLaznJ/jq33g0q1"
+"property": "cluster.batchCommand",
+"type": "string",
+"description": "Terminal command used to submit jobs on the cluster"
 },
 {
-"property": "mail.from",
-"default": "biolockj@gmail.com"
+"property": "cluster.jobHeader",
+"type": "string",
+"description": "Header written at top of worker scripts"
 },
 {
-"property": "mail.smtp.auth",
-"default": "Y"
+"property": "cluster.modules",
+"type": "list",
+"description": "List of cluster modules to load at start of worker scripts"
 },
 {
-"property": "mail.smtp.host",
-"default": "smtp.gmail.com"
+"property": "cluster.prologue",
+"type": "string",
+"description": "To run at the start of every script after loading cluster modules (if any)"
 },
 {
-"property": "mail.smtp.port",
-"default": "587"
+"property": "cluster.statusCommand",
+"type": "string",
+"description": "Terminal command used to check the status of jobs on the cluster"
 },
 {
-"property": "mail.smtp.starttls.enable",
-"default": "Y"
+"property": "demultiplexer.barcodeCutoff",
+"default": "0.05"
 },
-{"property": "mail.to"}
+{"property": "demultiplexer.barcodeRevComp"},
+{"property": "demultiplexer.strategy"},
+{
+"property": "docker.saveContainerOnExit",
+"type": "boolean",
+"description": "If Y, docker run command will NOT include the --rm flag"
+},
+{
+"property": "docker.verifyImage",
+"type": "boolean",
+"description": "In check dependencies, run a test to verify the docker image."
+},
+{
+"property": "metadata.barcodeColumn",
+"description": "metadata column with identifying barcodes",
+"default": "BarcodeSequence",
+"type": "string"
+},
+{
+"property": "script.defaultHeader",
+"description": "Store default script header for MAIN script and locally run WORKER scripts.",
+"default": "#!/bin/bash",
+"type": "string"
+},
+{
+"property": "script.numThreads",
+"description": "Used to reserve cluster resources and passed to any external application call that accepts a numThreads parameter.",
+"default": "8",
+"type": "integer"
+},
+{
+"property": "script.numWorkers",
+"description": "Set number of samples to process per script (if parallel processing)",
+"default": "1",
+"type": "integer"
+},
+{
+"property": "script.permissions",
+"description": "Used as chmod permission parameter (ex: 774)",
+"default": "770",
+"type": "string"
+},
+{
+"property": "script.timeout",
+"type": "integer",
+"description": "Sets # of minutes before worker scripts times out."
+}
 ]
 },
 {
-"citation": "Module developed by Mike Sioda\nBioLockj <VERSION>",
-"usage": "#BioModule biolockj.module.report.otu.RarefyOtuCounts",
+"menuPlacement": [
+"biolockj",
+"module",
+"implicit",
+"ImportMetadata"
+],
+"citation": "Module developed by Mike Sioda\nBioLockJ <VERSION>",
+"usage": "#BioModule biolockj.module.implicit.ImportMetadata",
 "pre-req modules": [],
-"description": "Applies a mean iterative post-OTU classification rarefication algorithm so that each output sample will have approximately the same number of OTUs.",
+"description": "Read existing metadata file, or create a default one.",
+"details": "*This module is automatically added to the beginning of every pipeline.*\nThis module ensures that every pipeline has a metadata file, which is requried for modules that add columns to the metadata. If the configuration file does not specify a metadata file, this module will create an empty table with a row for each file in the input directory. This also ensures that any pre-existing metadata file has a suitable format.",
+"post-req modules": [],
+"title": "ImportMetadata",
+"properties": [
+{
+"property": "metadata.columnDelim",
+"description": "defines how metadata columns are separated; Typically files are tab or comma separated.",
+"default": "\\t",
+"type": "string"
+},
+{
+"property": "metadata.filePath",
+"type": "string",
+"description": "If absolute file path, use file as metadata.<br>If directory path, must find exactly 1 file within, to use as metadata."
+}
+]
+},
+{
+"menuPlacement": [
+"biolockj",
+"module",
+"implicit",
+"parser",
+"r16s",
+"RdpParser"
+],
+"citation": "Module developed by Mike Sioda\nBioLockJ <VERSION>",
+"usage": "#BioModule biolockj.module.implicit.parser.r16s.RdpParser",
+"pre-req modules": [],
+"description": "Build OTU tables from [RDP](http://rdp.cme.msu.edu/classifier/classifier.jsp) reports.",
 "details": "",
 "post-req modules": [],
-"title": "RarefyOtuCounts",
+"title": "RdpParser",
+"properties": [
+{
+"property": "cluster.batchCommand",
+"type": "string",
+"description": "Terminal command used to submit jobs on the cluster"
+},
+{
+"property": "cluster.jobHeader",
+"type": "string",
+"description": "Header written at top of worker scripts"
+},
+{
+"property": "cluster.modules",
+"type": "list",
+"description": "List of cluster modules to load at start of worker scripts"
+},
+{
+"property": "cluster.prologue",
+"type": "string",
+"description": "To run at the start of every script after loading cluster modules (if any)"
+},
+{
+"property": "cluster.statusCommand",
+"type": "string",
+"description": "Terminal command used to check the status of jobs on the cluster"
+},
+{
+"property": "docker.saveContainerOnExit",
+"type": "boolean",
+"description": "If Y, docker run command will NOT include the --rm flag"
+},
+{
+"property": "docker.verifyImage",
+"type": "boolean",
+"description": "In check dependencies, run a test to verify the docker image."
+},
+{
+"property": "rdp.minThresholdScore",
+"default": "80"
+},
+{
+"property": "report.numHits",
+"description": "Options: Y/N. If Y, and add Num_Hits to metadata",
+"default": "Y",
+"type": "boolean"
+},
+{
+"property": "report.unclassifiedTaxa",
+"description": "report unclassified taxa",
+"default": "Y",
+"type": "boolean"
+},
+{
+"property": "script.defaultHeader",
+"description": "Store default script header for MAIN script and locally run WORKER scripts.",
+"default": "#!/bin/bash",
+"type": "string"
+},
+{
+"property": "script.numThreads",
+"description": "Used to reserve cluster resources and passed to any external application call that accepts a numThreads parameter.",
+"default": "8",
+"type": "integer"
+},
+{
+"property": "script.numWorkers",
+"description": "Set number of samples to process per script (if parallel processing)",
+"default": "1",
+"type": "integer"
+},
+{
+"property": "script.permissions",
+"description": "Used as chmod permission parameter (ex: 774)",
+"default": "770",
+"type": "string"
+},
+{
+"property": "script.timeout",
+"type": "integer",
+"description": "Sets # of minutes before worker scripts times out."
+}
+]
+},
+{
+"menuPlacement": [
+"biolockj",
+"module",
+"implicit",
+"parser",
+"wgs",
+"Humann2Parser"
+],
+"citation": "Module developed by Mike Sioda\nBioLockJ <VERSION>",
+"usage": "#BioModule biolockj.module.implicit.parser.wgs.Humann2Parser",
+"pre-req modules": [],
+"description": "Build OTU tables from HumanN2 classifier module output.",
+"details": "",
+"post-req modules": [],
+"title": "Humann2Parser",
+"properties": [
+{
+"property": "cluster.batchCommand",
+"type": "string",
+"description": "Terminal command used to submit jobs on the cluster"
+},
+{
+"property": "cluster.jobHeader",
+"type": "string",
+"description": "Header written at top of worker scripts"
+},
+{
+"property": "cluster.modules",
+"type": "list",
+"description": "List of cluster modules to load at start of worker scripts"
+},
+{
+"property": "cluster.prologue",
+"type": "string",
+"description": "To run at the start of every script after loading cluster modules (if any)"
+},
+{
+"property": "cluster.statusCommand",
+"type": "string",
+"description": "Terminal command used to check the status of jobs on the cluster"
+},
+{
+"property": "docker.saveContainerOnExit",
+"type": "boolean",
+"description": "If Y, docker run command will NOT include the --rm flag"
+},
+{
+"property": "docker.verifyImage",
+"type": "boolean",
+"description": "In check dependencies, run a test to verify the docker image."
+},
+{"property": "humann2.keepUnintegrated"},
+{"property": "humann2.keepUnmapped"},
+{
+"property": "report.numHits",
+"description": "Options: Y/N. If Y, and add Num_Hits to metadata",
+"default": "Y",
+"type": "boolean"
+},
+{
+"property": "report.unclassifiedTaxa",
+"description": "report unclassified taxa",
+"default": "Y",
+"type": "boolean"
+},
+{
+"property": "script.defaultHeader",
+"description": "Store default script header for MAIN script and locally run WORKER scripts.",
+"default": "#!/bin/bash",
+"type": "string"
+},
+{
+"property": "script.numThreads",
+"description": "Used to reserve cluster resources and passed to any external application call that accepts a numThreads parameter.",
+"default": "8",
+"type": "integer"
+},
+{
+"property": "script.numWorkers",
+"description": "Set number of samples to process per script (if parallel processing)",
+"default": "1",
+"type": "integer"
+},
+{
+"property": "script.permissions",
+"description": "Used as chmod permission parameter (ex: 774)",
+"default": "770",
+"type": "string"
+},
+{
+"property": "script.timeout",
+"type": "integer",
+"description": "Sets # of minutes before worker scripts times out."
+}
+]
+},
+{
+"menuPlacement": [
+"biolockj",
+"module",
+"implicit",
+"parser",
+"wgs",
+"Kraken2Parser"
+],
+"citation": "Module developed by Mike Sioda\nBioLockJ <VERSION>",
+"usage": "#BioModule biolockj.module.implicit.parser.wgs.Kraken2Parser",
+"pre-req modules": [],
+"description": "Build OTU tables from [KRAKEN](http://ccb.jhu.edu/software/kraken/) mpa-format reports.",
+"details": "",
+"post-req modules": [],
+"title": "Kraken2Parser",
+"properties": [
+{
+"property": "cluster.batchCommand",
+"type": "string",
+"description": "Terminal command used to submit jobs on the cluster"
+},
+{
+"property": "cluster.jobHeader",
+"type": "string",
+"description": "Header written at top of worker scripts"
+},
+{
+"property": "cluster.modules",
+"type": "list",
+"description": "List of cluster modules to load at start of worker scripts"
+},
+{
+"property": "cluster.prologue",
+"type": "string",
+"description": "To run at the start of every script after loading cluster modules (if any)"
+},
+{
+"property": "cluster.statusCommand",
+"type": "string",
+"description": "Terminal command used to check the status of jobs on the cluster"
+},
+{
+"property": "docker.saveContainerOnExit",
+"type": "boolean",
+"description": "If Y, docker run command will NOT include the --rm flag"
+},
+{
+"property": "docker.verifyImage",
+"type": "boolean",
+"description": "In check dependencies, run a test to verify the docker image."
+},
+{
+"property": "report.numHits",
+"description": "Options: Y/N. If Y, and add Num_Hits to metadata",
+"default": "Y",
+"type": "boolean"
+},
+{
+"property": "report.unclassifiedTaxa",
+"description": "report unclassified taxa",
+"default": "Y",
+"type": "boolean"
+},
+{
+"property": "script.defaultHeader",
+"description": "Store default script header for MAIN script and locally run WORKER scripts.",
+"default": "#!/bin/bash",
+"type": "string"
+},
+{
+"property": "script.numThreads",
+"description": "Used to reserve cluster resources and passed to any external application call that accepts a numThreads parameter.",
+"default": "8",
+"type": "integer"
+},
+{
+"property": "script.numWorkers",
+"description": "Set number of samples to process per script (if parallel processing)",
+"default": "1",
+"type": "integer"
+},
+{
+"property": "script.permissions",
+"description": "Used as chmod permission parameter (ex: 774)",
+"default": "770",
+"type": "string"
+},
+{
+"property": "script.timeout",
+"type": "integer",
+"description": "Sets # of minutes before worker scripts times out."
+}
+]
+},
+{
+"menuPlacement": [
+"biolockj",
+"module",
+"implicit",
+"parser",
+"wgs",
+"KrakenParser"
+],
+"citation": "Module developed by Mike Sioda\nBioLockJ <VERSION>",
+"usage": "#BioModule biolockj.module.implicit.parser.wgs.KrakenParser",
+"pre-req modules": [],
+"description": "Build OTU tables from [KRAKEN](http://ccb.jhu.edu/software/kraken/) mpa-format reports.",
+"details": "",
+"post-req modules": [],
+"title": "KrakenParser",
+"properties": [
+{
+"property": "cluster.batchCommand",
+"type": "string",
+"description": "Terminal command used to submit jobs on the cluster"
+},
+{
+"property": "cluster.jobHeader",
+"type": "string",
+"description": "Header written at top of worker scripts"
+},
+{
+"property": "cluster.modules",
+"type": "list",
+"description": "List of cluster modules to load at start of worker scripts"
+},
+{
+"property": "cluster.prologue",
+"type": "string",
+"description": "To run at the start of every script after loading cluster modules (if any)"
+},
+{
+"property": "cluster.statusCommand",
+"type": "string",
+"description": "Terminal command used to check the status of jobs on the cluster"
+},
+{
+"property": "docker.saveContainerOnExit",
+"type": "boolean",
+"description": "If Y, docker run command will NOT include the --rm flag"
+},
+{
+"property": "docker.verifyImage",
+"type": "boolean",
+"description": "In check dependencies, run a test to verify the docker image."
+},
+{
+"property": "report.numHits",
+"description": "Options: Y/N. If Y, and add Num_Hits to metadata",
+"default": "Y",
+"type": "boolean"
+},
+{
+"property": "report.unclassifiedTaxa",
+"description": "report unclassified taxa",
+"default": "Y",
+"type": "boolean"
+},
+{
+"property": "script.defaultHeader",
+"description": "Store default script header for MAIN script and locally run WORKER scripts.",
+"default": "#!/bin/bash",
+"type": "string"
+},
+{
+"property": "script.numThreads",
+"description": "Used to reserve cluster resources and passed to any external application call that accepts a numThreads parameter.",
+"default": "8",
+"type": "integer"
+},
+{
+"property": "script.numWorkers",
+"description": "Set number of samples to process per script (if parallel processing)",
+"default": "1",
+"type": "integer"
+},
+{
+"property": "script.permissions",
+"description": "Used as chmod permission parameter (ex: 774)",
+"default": "770",
+"type": "string"
+},
+{
+"property": "script.timeout",
+"type": "integer",
+"description": "Sets # of minutes before worker scripts times out."
+}
+]
+},
+{
+"menuPlacement": [
+"biolockj",
+"module",
+"report",
+"Email"
+],
+"citation": "Module developed by Mike Sioda.\nBioLockJ <VERSION>",
+"usage": "#BioModule biolockj.module.report.Email",
+"pre-req modules": [],
+"description": "Send an email containing the pipeline summary when the pipeline either completes or fails.",
+"details": "",
+"post-req modules": [],
+"title": "Email",
+"properties": [
+{
+"property": "mail.encryptedPassword",
+"default": "7GYvu1m+Yv1Gk7Cd9BLaznJ/jq33g0q1"
+},
+{
+"property": "mail.from",
+"default": "biolockj@gmail.com"
+},
+{
+"property": "mail.smtp.auth",
+"default": "Y"
+},
+{
+"property": "mail.smtp.host",
+"default": "smtp.gmail.com"
+},
+{
+"property": "mail.smtp.port",
+"default": "587"
+},
+{
+"property": "mail.smtp.starttls.enable",
+"default": "Y"
+},
+{"property": "mail.to"}
+]
+},
+{
+"menuPlacement": [
+"biolockj",
+"module",
+"report",
+"otu",
+"RarefyOtuCounts"
+],
+"citation": "Module developed by Mike Sioda\nBioLockJ <VERSION>",
+"usage": "#BioModule biolockj.module.report.otu.RarefyOtuCounts",
+"pre-req modules": [],
+"description": "Applies a mean iterative post-OTU classification rarefication algorithm so that each output sample will have approximately the same number of OTUs.",
+"details": "",
+"post-req modules": [],
+"title": "RarefyOtuCounts",
+"properties": [
+{
+"property": "cluster.batchCommand",
+"type": "string",
+"description": "Terminal command used to submit jobs on the cluster"
+},
+{
+"property": "cluster.jobHeader",
+"type": "string",
+"description": "Header written at top of worker scripts"
+},
+{
+"property": "cluster.modules",
+"type": "list",
+"description": "List of cluster modules to load at start of worker scripts"
+},
+{
+"property": "cluster.prologue",
+"type": "string",
+"description": "To run at the start of every script after loading cluster modules (if any)"
+},
+{
+"property": "cluster.statusCommand",
+"type": "string",
+"description": "Terminal command used to check the status of jobs on the cluster"
+},
+{
+"property": "docker.saveContainerOnExit",
+"type": "boolean",
+"description": "If Y, docker run command will NOT include the --rm flag"
+},
+{
+"property": "docker.verifyImage",
+"type": "boolean",
+"description": "In check dependencies, run a test to verify the docker image."
+},
+{
+"property": "rarefyOtuCounts.iterations",
+"default": "10"
+},
+{
+"property": "rarefyOtuCounts.lowAbundantCutoff",
+"default": "0.01"
+},
+{
+"property": "rarefyOtuCounts.quantile",
+"default": "0.5"
+},
+{"property": "rarefyOtuCounts.rmLowSamples"},
+{
+"property": "script.defaultHeader",
+"description": "Store default script header for MAIN script and locally run WORKER scripts.",
+"default": "#!/bin/bash",
+"type": "string"
+},
+{
+"property": "script.numThreads",
+"description": "Used to reserve cluster resources and passed to any external application call that accepts a numThreads parameter.",
+"default": "8",
+"type": "integer"
+},
+{
+"property": "script.numWorkers",
+"description": "Set number of samples to process per script (if parallel processing)",
+"default": "1",
+"type": "integer"
+},
+{
+"property": "script.permissions",
+"description": "Used as chmod permission parameter (ex: 774)",
+"default": "770",
+"type": "string"
+},
+{
+"property": "script.timeout",
+"type": "integer",
+"description": "Sets # of minutes before worker scripts times out."
+}
+]
+},
+{
+"menuPlacement": [
+"biolockj",
+"module",
+"report",
+"otu",
+"RemoveLowOtuCounts"
+],
+"citation": "Module developed by Mike Sioda\nBioLockJ <VERSION>",
+"usage": "#BioModule biolockj.module.report.otu.RemoveLowOtuCounts",
+"pre-req modules": [],
+"description": "Removes OTUs with counts below report.minCount.",
+"details": "",
+"post-req modules": [],
+"title": "RemoveLowOtuCounts",
+"properties": [
+{
+"property": "cluster.batchCommand",
+"type": "string",
+"description": "Terminal command used to submit jobs on the cluster"
+},
+{
+"property": "cluster.jobHeader",
+"type": "string",
+"description": "Header written at top of worker scripts"
+},
+{
+"property": "cluster.modules",
+"type": "list",
+"description": "List of cluster modules to load at start of worker scripts"
+},
+{
+"property": "cluster.prologue",
+"type": "string",
+"description": "To run at the start of every script after loading cluster modules (if any)"
+},
+{
+"property": "cluster.statusCommand",
+"type": "string",
+"description": "Terminal command used to check the status of jobs on the cluster"
+},
+{
+"property": "docker.saveContainerOnExit",
+"type": "boolean",
+"description": "If Y, docker run command will NOT include the --rm flag"
+},
+{
+"property": "docker.verifyImage",
+"type": "boolean",
+"description": "In check dependencies, run a test to verify the docker image."
+},
+{
+"property": "script.defaultHeader",
+"description": "Store default script header for MAIN script and locally run WORKER scripts.",
+"default": "#!/bin/bash",
+"type": "string"
+},
+{
+"property": "script.numThreads",
+"description": "Used to reserve cluster resources and passed to any external application call that accepts a numThreads parameter.",
+"default": "8",
+"type": "integer"
+},
+{
+"property": "script.numWorkers",
+"description": "Set number of samples to process per script (if parallel processing)",
+"default": "1",
+"type": "integer"
+},
+{
+"property": "script.permissions",
+"description": "Used as chmod permission parameter (ex: 774)",
+"default": "770",
+"type": "string"
+},
+{
+"property": "script.timeout",
+"type": "integer",
+"description": "Sets # of minutes before worker scripts times out."
+}
+]
+},
+{
+"menuPlacement": [
+"biolockj",
+"module",
+"report",
+"r",
+"R_CalculateStats"
+],
+"citation": "BioLockJ <VERSION>\nModule developted by Mike Sioda.",
+"usage": "#BioModule biolockj.module.report.r.R_CalculateStats",
+"description": "Generate a summary statistics table with [adjusted and unadjusted] [parameteric and non-parametirc] p-values and r<sup>2<\/sup> values for each reportable metadata field and each *report.taxonomyLevel* configured.",
+"details": "",
+"title": "R_CalculateStats",
+"properties": [
+{
+"property": "cluster.batchCommand",
+"type": "string",
+"description": "Terminal command used to submit jobs on the cluster"
+},
+{
+"property": "cluster.jobHeader",
+"type": "string",
+"description": "Header written at top of worker scripts"
+},
+{
+"property": "cluster.modules",
+"type": "list",
+"description": "List of cluster modules to load at start of worker scripts"
+},
+{
+"property": "cluster.prologue",
+"type": "string",
+"description": "To run at the start of every script after loading cluster modules (if any)"
+},
+{
+"property": "cluster.statusCommand",
+"type": "string",
+"description": "Terminal command used to check the status of jobs on the cluster"
+},
+{
+"property": "docker.saveContainerOnExit",
+"type": "boolean",
+"description": "If Y, docker run command will NOT include the --rm flag"
+},
+{
+"property": "docker.verifyImage",
+"type": "boolean",
+"description": "In check dependencies, run a test to verify the docker image."
+},
+{
+"property": "exe.Rscript",
+"type": "executable",
+"description": "Path for the \"Rscript\" executable; if not supplied, any script that needs the Rscript command will assume it is on the PATH."
+},
+{
+"property": "pipeline.defaultStatsModule",
+"description": "Java class name for default module used generate p-value and other stats",
+"default": "biolockj.module.report.r.R_CalculateStats",
+"type": "string"
+},
+{
+"property": "r.colorFile",
+"type": "file path",
+"description": "path to a tab-delimited file giving the color to use for each value of each metadata field plotted."
+},
+{
+"property": "r.debug",
+"description": "Options: Y/N. If Y, will generate R Script log files",
+"default": "Y",
+"type": "boolean"
+},
+{
+"property": "r.saveRData",
+"type": "boolean",
+"description": "If Y, all R script generating BioModules will save R Session data to the module output directory to a file using the extension \".RData\""
+},
+{
+"property": "r.timeout",
+"description": "the # minutes before R Script will time out and fail; If undefined, no timeout is used.",
+"default": "10",
+"type": "integer"
+},
+{
+"property": "r_CalculateStats.pAdjustMethod",
+"default": "BH"
+},
+{
+"property": "r_CalculateStats.pAdjustScope",
+"default": "LOCAL"
+},
+{
+"property": "script.defaultHeader",
+"description": "Store default script header for MAIN script and locally run WORKER scripts.",
+"default": "#!/bin/bash",
+"type": "string"
+},
+{
+"property": "script.numThreads",
+"description": "Used to reserve cluster resources and passed to any external application call that accepts a numThreads parameter.",
+"default": "8",
+"type": "integer"
+},
+{
+"property": "script.numWorkers",
+"description": "Set number of samples to process per script (if parallel processing)",
+"default": "1",
+"type": "integer"
+},
+{
+"property": "script.permissions",
+"description": "Used as chmod permission parameter (ex: 774)",
+"default": "770",
+"type": "string"
+},
+{
+"property": "script.timeout",
+"type": "integer",
+"description": "Sets # of minutes before worker scripts times out."
+}
+]
+},
+{
+"menuPlacement": [
+"biolockj",
+"module",
+"report",
+"r",
+"R_PlotEffectSize"
+],
+"citation": "BioLockJ <VERSION>\nModule developted by Ivory Blakley.",
+"usage": "#BioModule biolockj.module.report.r.R_PlotEffectSize",
+"description": "Generate horizontal barplot representing effect size (Cohen's d, r<sup>2<\/sup>, and/or fold change) for each reportable metadata field and each *report.taxonomyLevel* configured.",
+"details": "",
+"title": "R_PlotEffectSize",
 "properties": [
 {
 "property": "cluster.batchCommand",
@@ -1217,36 +2290,68 @@
 {
 "property": "cluster.statusCommand",
 "type": "string",
-"description": "Terminal command used to submit jobs on the cluster"
+"description": "Terminal command used to check the status of jobs on the cluster"
 },
 {
-"property": "docker.imgVersion",
-"type": "string",
-"description": "indicate specific version of Docker images"
+"property": "docker.saveContainerOnExit",
+"type": "boolean",
+"description": "If Y, docker run command will NOT include the --rm flag"
 },
 {
-"property": "docker.saveContainerOnExit",
+"property": "docker.verifyImage",
 "type": "boolean",
-"description": "if ture, docker run command will NOT include the --rm flag"
+"description": "In check dependencies, run a test to verify the docker image."
 },
 {
-"property": "docker.user",
-"type": "string",
-"description": "name of the Docker Hub user for getting docker containers"
+"property": "exe.Rscript",
+"type": "executable",
+"description": "Path for the \"Rscript\" executable; if not supplied, any script that needs the Rscript command will assume it is on the PATH."
 },
 {
-"property": "rarefyOtuCounts.iterations",
-"default": "10"
+"property": "pipeline.defaultStatsModule",
+"description": "Java class name for default module used generate p-value and other stats",
+"default": "biolockj.module.report.r.R_CalculateStats",
+"type": "string"
 },
 {
-"property": "rarefyOtuCounts.lowAbundantCutoff",
-"default": "0.01"
+"property": "r.colorFile",
+"type": "file path",
+"description": "path to a tab-delimited file giving the color to use for each value of each metadata field plotted."
 },
 {
-"property": "rarefyOtuCounts.quantile",
-"default": "0.5"
+"property": "r.debug",
+"description": "Options: Y/N. If Y, will generate R Script log files",
+"default": "Y",
+"type": "boolean"
 },
-{"property": "rarefyOtuCounts.rmLowSamples"},
+{
+"property": "r.saveRData",
+"type": "boolean",
+"description": "If Y, all R script generating BioModules will save R Session data to the module output directory to a file using the extension \".RData\""
+},
+{
+"property": "r.timeout",
+"description": "the # minutes before R Script will time out and fail; If undefined, no timeout is used.",
+"default": "10",
+"type": "integer"
+},
+{"property": "r_PlotEffectSize.disableCohensD"},
+{
+"property": "r_PlotEffectSize.disableFoldChange",
+"default": "Y"
+},
+{"property": "r_PlotEffectSize.disablePvalAdj"},
+{"property": "r_PlotEffectSize.disableRSquared"},
+{
+"property": "r_PlotEffectSize.excludePvalAbove",
+"default": "1"
+},
+{
+"property": "r_PlotEffectSize.maxNumTaxa",
+"default": "40"
+},
+{"property": "r_PlotEffectSize.parametricPval"},
+{"property": "r_PlotEffectSize.taxa"},
 {
 "property": "script.defaultHeader",
 "description": "Store default script header for MAIN script and locally run WORKER scripts.",
@@ -1279,10 +2384,18 @@
 ]
 },
 {
-"description": "Generate a summary statistics table with [adjusted and unadjusted] [parameteric and non-parametirc] p-values and r<sup>2<\/sup> values for each reportable metadata field and each *report.taxonomyLevel* configured.",
+"menuPlacement": [
+"biolockj",
+"module",
+"report",
+"r",
+"R_PlotMds"
+],
+"citation": "Module developed by Mike Sioda\nBioLockJ <VERSION>",
+"usage": "#BioModule biolockj.module.report.r.R_PlotMds",
+"description": "Generate sets of multidimensional scaling plots showing 2 axes at a time (up to the <*r_PlotMds.numAxis*>th axis) with color coding based on each categorical metadata field (default) or by each field given in *r_PlotMds.reportFields*",
 "details": "",
-"title": "R_CalculateStats",
-"citation": "BioLockJ <VERSION>\nModule developted by Mike Sioda.",
+"title": "R_PlotMds",
 "properties": [
 {
 "property": "cluster.batchCommand",
@@ -1307,22 +2420,17 @@
 {
 "property": "cluster.statusCommand",
 "type": "string",
-"description": "Terminal command used to submit jobs on the cluster"
-},
-{
-"property": "docker.imgVersion",
-"type": "string",
-"description": "indicate specific version of Docker images"
+"description": "Terminal command used to check the status of jobs on the cluster"
 },
 {
 "property": "docker.saveContainerOnExit",
 "type": "boolean",
-"description": "if ture, docker run command will NOT include the --rm flag"
+"description": "If Y, docker run command will NOT include the --rm flag"
 },
 {
-"property": "docker.user",
-"type": "string",
-"description": "name of the Docker Hub user for getting docker containers"
+"property": "docker.verifyImage",
+"type": "boolean",
+"description": "In check dependencies, run a test to verify the docker image."
 },
 {
 "property": "exe.Rscript",
@@ -1330,17 +2438,46 @@
 "description": "Path for the \"Rscript\" executable; if not supplied, any script that needs the Rscript command will assume it is on the PATH."
 },
 {
+"property": "pipeline.defaultStatsModule",
+"description": "Java class name for default module used generate p-value and other stats",
+"default": "biolockj.module.report.r.R_CalculateStats",
+"type": "string"
+},
+{
+"property": "r.colorBase",
+"description": "base color used for labels & headings in the PDF report; Must be a valid color in R.",
+"default": "black",
+"type": "string"
+},
+{
 "property": "r.colorFile",
 "type": "file path",
 "description": "path to a tab-delimited file giving the color to use for each value of each metadata field plotted."
 },
 {
+"property": "r.colorHighlight",
+"description": "color is used to highlight significant OTUs in plot",
+"default": "red",
+"type": "string"
+},
+{
+"property": "r.colorPalette",
+"type": "string",
+"description": "palette argument passed to [get_palette {ggpubr}](https://www.rdocumentation.org/packages/ggpubr/versions/0.2/topics/get_palette) to select colors for some output visualiztions"
+},
+{
 "property": "r.debug",
 "description": "Options: Y/N. If Y, will generate R Script log files",
 "default": "Y",
 "type": "boolean"
 },
 {
+"property": "r.pch",
+"description": "Sets R plot pch parameter for PDF report",
+"default": "21",
+"type": "integer"
+},
+{
 "property": "r.saveRData",
 "type": "boolean",
 "description": "If Y, all R script generating BioModules will save R Session data to the module output directory to a file using the extension \".RData\""
@@ -1352,12 +2489,17 @@
 "type": "integer"
 },
 {
-"property": "r_CalculateStats.pAdjustMethod",
-"default": "BH"
+"property": "r_PlotMds.distance",
+"default": "bray"
 },
 {
-"property": "r_CalculateStats.pAdjustScope",
-"default": "LOCAL"
+"property": "r_PlotMds.numAxis",
+"default": "3"
+},
+{
+"property": "r_PlotMds.reportFields",
+"type": "list",
+"description": "Metadata column names indicating fields to include in the MDS report; Fields listed here must exist in the metadata file."
 },
 {
 "property": "script.defaultHeader",
@@ -1388,14 +2530,21 @@
 "type": "integer",
 "description": "Sets # of minutes before worker scripts times out."
 }
-],
-"usage": "#BioModule biolockj.module.report.r.R_CalculateStats"
+]
 },
 {
-"description": "Generate horizontal barplot representing effect size (Cohen's d, r<sup>2<\/sup>, and/or fold change) for each reportable metadata field and each *report.taxonomyLevel* configured.",
+"menuPlacement": [
+"biolockj",
+"module",
+"report",
+"r",
+"R_PlotOtus"
+],
+"citation": "Module developed by Mike Sioda\nBioLockJ <VERSION>",
+"usage": "#BioModule biolockj.module.report.r.R_PlotOtus",
+"description": "Generate OTU-metadata box-plots and scatter-plots for each reportable metadata field and each *report.taxonomyLevel* configured",
 "details": "",
-"title": "R_PlotEffectSize",
-"citation": "BioLockJ <VERSION>\nModule developted by Ivory Blakley.",
+"title": "R_PlotOtus",
 "properties": [
 {
 "property": "cluster.batchCommand",
@@ -1420,22 +2569,17 @@
 {
 "property": "cluster.statusCommand",
 "type": "string",
-"description": "Terminal command used to submit jobs on the cluster"
-},
-{
-"property": "docker.imgVersion",
-"type": "string",
-"description": "indicate specific version of Docker images"
+"description": "Terminal command used to check the status of jobs on the cluster"
 },
 {
 "property": "docker.saveContainerOnExit",
 "type": "boolean",
-"description": "if ture, docker run command will NOT include the --rm flag"
+"description": "If Y, docker run command will NOT include the --rm flag"
 },
 {
-"property": "docker.user",
-"type": "string",
-"description": "name of the Docker Hub user for getting docker containers"
+"property": "docker.verifyImage",
+"type": "boolean",
+"description": "In check dependencies, run a test to verify the docker image."
 },
 {
 "property": "exe.Rscript",
@@ -1443,44 +2587,72 @@
 "description": "Path for the \"Rscript\" executable; if not supplied, any script that needs the Rscript command will assume it is on the PATH."
 },
 {
+"property": "pipeline.defaultStatsModule",
+"description": "Java class name for default module used generate p-value and other stats",
+"default": "biolockj.module.report.r.R_CalculateStats",
+"type": "string"
+},
+{
+"property": "r.colorBase",
+"description": "base color used for labels & headings in the PDF report; Must be a valid color in R.",
+"default": "black",
+"type": "string"
+},
+{
 "property": "r.colorFile",
 "type": "file path",
 "description": "path to a tab-delimited file giving the color to use for each value of each metadata field plotted."
 },
 {
+"property": "r.colorHighlight",
+"description": "color is used to highlight significant OTUs in plot",
+"default": "red",
+"type": "string"
+},
+{
+"property": "r.colorPalette",
+"type": "string",
+"description": "palette argument passed to [get_palette {ggpubr}](https://www.rdocumentation.org/packages/ggpubr/versions/0.2/topics/get_palette) to select colors for some output visualiztions"
+},
+{
+"property": "r.colorPoint",
+"description": "default color of scatterplot and strip-chart plot points",
+"default": "black",
+"type": "string"
+},
+{
 "property": "r.debug",
 "description": "Options: Y/N. If Y, will generate R Script log files",
 "default": "Y",
 "type": "boolean"
 },
 {
-"property": "r.saveRData",
-"type": "boolean",
-"description": "If Y, all R script generating BioModules will save R Session data to the module output directory to a file using the extension \".RData\""
+"property": "r.pValFormat",
+"default": "%1.2g"
 },
 {
-"property": "r.timeout",
-"description": "the # minutes before R Script will time out and fail; If undefined, no timeout is used.",
-"default": "10",
+"property": "r.pch",
+"description": "Sets R plot pch parameter for PDF report",
+"default": "21",
 "type": "integer"
 },
-{"property": "r_PlotEffectSize.disableCohensD"},
 {
-"property": "r_PlotEffectSize.disableFoldChange",
-"default": "Y"
+"property": "r.rareOtuThreshold",
+"description": "If >=1, R will filter OTUs found in fewer than this many samples. If <1, R will interperate the value as a percentage and discard OTUs not found in at least that percentage of samples",
+"default": "1",
+"type": "numeric"
 },
-{"property": "r_PlotEffectSize.disablePvalAdj"},
-{"property": "r_PlotEffectSize.disableRSquared"},
 {
-"property": "r_PlotEffectSize.excludePvalAbove",
-"default": "1"
+"property": "r.saveRData",
+"type": "boolean",
+"description": "If Y, all R script generating BioModules will save R Session data to the module output directory to a file using the extension \".RData\""
 },
 {
-"property": "r_PlotEffectSize.maxNumTaxa",
-"default": "40"
+"property": "r.timeout",
+"description": "the # minutes before R Script will time out and fail; If undefined, no timeout is used.",
+"default": "10",
+"type": "integer"
 },
-{"property": "r_PlotEffectSize.parametricPval"},
-{"property": "r_PlotEffectSize.taxa"},
 {
 "property": "script.defaultHeader",
 "description": "Store default script header for MAIN script and locally run WORKER scripts.",
@@ -1510,14 +2682,21 @@
 "type": "integer",
 "description": "Sets # of minutes before worker scripts times out."
 }
-],
-"usage": "#BioModule biolockj.module.report.r.R_PlotEffectSize"
+]
 },
 {
-"description": "Generate sets of multidimensional scaling plots showing 2 axes at a time (up to the <*r_PlotMds.numAxis*>th axis) with color coding based on each categorical metadata field (default) or by each field given in *r_PlotMds.reportFields*",
+"menuPlacement": [
+"biolockj",
+"module",
+"report",
+"r",
+"R_PlotPvalHistograms"
+],
+"citation": "Module developed by Mike Sioda\nBioLockJ <VERSION>",
+"usage": "#BioModule biolockj.module.report.r.R_PlotPvalHistograms",
+"description": "Generate p-value histograms for each reportable metadata field and each *report.taxonomyLevel* configured",
 "details": "",
-"title": "R_PlotMds",
-"citation": "Module developed by Mike Sioda\nBioLockj <VERSION>",
+"title": "R_PlotPvalHistograms",
 "properties": [
 {
 "property": "cluster.batchCommand",
@@ -1542,22 +2721,17 @@
 {
 "property": "cluster.statusCommand",
 "type": "string",
-"description": "Terminal command used to submit jobs on the cluster"
-},
-{
-"property": "docker.imgVersion",
-"type": "string",
-"description": "indicate specific version of Docker images"
+"description": "Terminal command used to check the status of jobs on the cluster"
 },
 {
 "property": "docker.saveContainerOnExit",
 "type": "boolean",
-"description": "if ture, docker run command will NOT include the --rm flag"
+"description": "If Y, docker run command will NOT include the --rm flag"
 },
 {
-"property": "docker.user",
-"type": "string",
-"description": "name of the Docker Hub user for getting docker containers"
+"property": "docker.verifyImage",
+"type": "boolean",
+"description": "In check dependencies, run a test to verify the docker image."
 },
 {
 "property": "exe.Rscript",
@@ -1565,9 +2739,9 @@
 "description": "Path for the \"Rscript\" executable; if not supplied, any script that needs the Rscript command will assume it is on the PATH."
 },
 {
-"property": "r.colorBase",
-"description": "base color used for labels & headings in the PDF report; Must be a valid color in R.",
-"default": "black",
+"property": "pipeline.defaultStatsModule",
+"description": "Java class name for default module used generate p-value and other stats",
+"default": "biolockj.module.report.r.R_CalculateStats",
 "type": "string"
 },
 {
@@ -1576,51 +2750,107 @@
 "description": "path to a tab-delimited file giving the color to use for each value of each metadata field plotted."
 },
 {
-"property": "r.colorHighlight",
-"description": "color is used to highlight significant OTUs in plot",
-"default": "red",
+"property": "r.debug",
+"description": "Options: Y/N. If Y, will generate R Script log files",
+"default": "Y",
+"type": "boolean"
+},
+{
+"property": "r.pvalCutoff",
+"description": "p-value cutoff used to assign label _r.colorHighlight_",
+"default": "0.05",
+"type": "numeric"
+},
+{
+"property": "r.saveRData",
+"type": "boolean",
+"description": "If Y, all R script generating BioModules will save R Session data to the module output directory to a file using the extension \".RData\""
+},
+{
+"property": "r.timeout",
+"description": "the # minutes before R Script will time out and fail; If undefined, no timeout is used.",
+"default": "10",
+"type": "integer"
+},
+{
+"property": "script.defaultHeader",
+"description": "Store default script header for MAIN script and locally run WORKER scripts.",
+"default": "#!/bin/bash",
 "type": "string"
 },
 {
-"property": "r.colorPalette",
-"type": "string",
-"description": "palette argument passed to [get_palette {ggpubr}](https://www.rdocumentation.org/packages/ggpubr/versions/0.2/topics/get_palette) to select colors for some output visualiztions"
+"property": "script.numThreads",
+"description": "Used to reserve cluster resources and passed to any external application call that accepts a numThreads parameter.",
+"default": "8",
+"type": "integer"
+},
+{
+"property": "script.numWorkers",
+"description": "Set number of samples to process per script (if parallel processing)",
+"default": "1",
+"type": "integer"
+},
+{
+"property": "script.permissions",
+"description": "Used as chmod permission parameter (ex: 774)",
+"default": "770",
+"type": "string"
+},
+{
+"property": "script.timeout",
+"type": "integer",
+"description": "Sets # of minutes before worker scripts times out."
+}
+]
 },
 {
-"property": "r.debug",
-"description": "Options: Y/N. If Y, will generate R Script log files",
-"default": "Y",
-"type": "boolean"
+"menuPlacement": [
+"biolockj",
+"module",
+"report",
+"taxa",
+"AddPseudoCount"
+],
+"citation": "BioLockJ <VERSION>",
+"usage": "#BioModule biolockj.module.report.taxa.AddPseudoCount",
+"description": "Add a pseudocount (+1) to each value in each taxa table.",
+"details": "*If the pipeline input does not include at least one taxa table, then the BuildTaxaTables class is added by this module as a pre-requisite.*\n",
+"title": "AddPseudoCount",
+"properties": [
+{
+"property": "cluster.batchCommand",
+"type": "string",
+"description": "Terminal command used to submit jobs on the cluster"
 },
 {
-"property": "r.pch",
-"description": "Sets R plot pch parameter for PDF report",
-"default": "21",
-"type": "integer"
+"property": "cluster.jobHeader",
+"type": "string",
+"description": "Header written at top of worker scripts"
 },
 {
-"property": "r.saveRData",
-"type": "boolean",
-"description": "If Y, all R script generating BioModules will save R Session data to the module output directory to a file using the extension \".RData\""
+"property": "cluster.modules",
+"type": "list",
+"description": "List of cluster modules to load at start of worker scripts"
 },
 {
-"property": "r.timeout",
-"description": "the # minutes before R Script will time out and fail; If undefined, no timeout is used.",
-"default": "10",
-"type": "integer"
+"property": "cluster.prologue",
+"type": "string",
+"description": "To run at the start of every script after loading cluster modules (if any)"
 },
 {
-"property": "r_PlotMds.distance",
-"default": "bray"
+"property": "cluster.statusCommand",
+"type": "string",
+"description": "Terminal command used to check the status of jobs on the cluster"
 },
 {
-"property": "r_PlotMds.numAxis",
-"default": "3"
+"property": "docker.saveContainerOnExit",
+"type": "boolean",
+"description": "If Y, docker run command will NOT include the --rm flag"
 },
 {
-"property": "r_PlotMds.reportFields",
-"type": "list",
-"description": "Metadata column names indicating fields to include in the MDS report; Fields listed here must exist in the metadata file."
+"property": "docker.verifyImage",
+"type": "boolean",
+"description": "In check dependencies, run a test to verify the docker image."
 },
 {
 "property": "script.defaultHeader",
@@ -1651,14 +2881,21 @@
 "type": "integer",
 "description": "Sets # of minutes before worker scripts times out."
 }
-],
-"usage": "#BioModule biolockj.module.report.r.R_PlotMds"
+]
 },
 {
-"description": "Generate OTU-metadata box-plots and scatter-plots for each reportable metadata field and each *report.taxonomyLevel* configured",
-"details": "",
-"title": "R_PlotOtus",
-"citation": "Module developed by Mike Sioda\nBioLockj <VERSION>",
+"menuPlacement": [
+"biolockj",
+"module",
+"report",
+"taxa",
+"NormalizeByReadsPerMillion"
+],
+"citation": "Module developed by Ivory Blakley\nBioLockj <VERSION>",
+"usage": "#BioModule biolockj.module.report.taxa.NormalizeByReadsPerMillion",
+"description": "Represent each count value in the table as: counts / (total counts in sample / 1 million)",
+"details": "*If the pipeline input does not include at least one taxa table, then the BuildTaxaTables class is added by this module as a pre-requisite.*\n",
+"title": "NormalizeByReadsPerMillion",
 "properties": [
 {
 "property": "cluster.batchCommand",
@@ -1683,88 +2920,106 @@
 {
 "property": "cluster.statusCommand",
 "type": "string",
-"description": "Terminal command used to submit jobs on the cluster"
-},
-{
-"property": "docker.imgVersion",
-"type": "string",
-"description": "indicate specific version of Docker images"
+"description": "Terminal command used to check the status of jobs on the cluster"
 },
 {
 "property": "docker.saveContainerOnExit",
 "type": "boolean",
-"description": "if ture, docker run command will NOT include the --rm flag"
+"description": "If Y, docker run command will NOT include the --rm flag"
 },
 {
-"property": "docker.user",
-"type": "string",
-"description": "name of the Docker Hub user for getting docker containers"
+"property": "docker.verifyImage",
+"type": "boolean",
+"description": "In check dependencies, run a test to verify the docker image."
 },
 {
-"property": "exe.Rscript",
-"type": "executable",
-"description": "Path for the \"Rscript\" executable; if not supplied, any script that needs the Rscript command will assume it is on the PATH."
+"property": "script.defaultHeader",
+"description": "Store default script header for MAIN script and locally run WORKER scripts.",
+"default": "#!/bin/bash",
+"type": "string"
 },
 {
-"property": "r.colorBase",
-"description": "base color used for labels & headings in the PDF report; Must be a valid color in R.",
-"default": "black",
-"type": "string"
+"property": "script.numThreads",
+"description": "Used to reserve cluster resources and passed to any external application call that accepts a numThreads parameter.",
+"default": "8",
+"type": "integer"
 },
 {
-"property": "r.colorFile",
-"type": "file path",
-"description": "path to a tab-delimited file giving the color to use for each value of each metadata field plotted."
+"property": "script.numWorkers",
+"description": "Set number of samples to process per script (if parallel processing)",
+"default": "1",
+"type": "integer"
 },
 {
-"property": "r.colorHighlight",
-"description": "color is used to highlight significant OTUs in plot",
-"default": "red",
+"property": "script.permissions",
+"description": "Used as chmod permission parameter (ex: 774)",
+"default": "770",
 "type": "string"
 },
 {
-"property": "r.colorPalette",
+"property": "script.timeout",
+"type": "integer",
+"description": "Sets # of minutes before worker scripts times out."
+}
+]
+},
+{
+"menuPlacement": [
+"biolockj",
+"module",
+"rnaseq",
+"DESeq2"
+],
+"citation": "R Core Team (2019). R: A language and environment for statistical computing. R Foundation for Statistical Computing, Vienna, Austria. URL https://www.R-project.org/.\nLove, M.I., Huber, W., Anders, S. (2014) Moderated estimation of fold change and dispersion for RNA-seq data with DESeq2. Genome Biology, 15:550. 10.1186/s13059-014-0550-8\n\nModule developed by Ivory, Ke and Rosh\nBioLockJ <VERSION>",
+"usage": "#BioModule biolockj.module.rnaseq.DESeq2",
+"pre-req modules": [],
+"description": "Determine statistically significant differences using DESeq2.",
+"details": "The two methods of expresison the design are mutually exclusive.<br>*deseq2.designFormula* is used as an exact string to pass as the design argument to DESeqDataSetFromMatrix(); example: \" ~ Location:SoilType\" (DO include quotes around the formula). *deseq2.designFactors* is a list (such as \"fist,second\") of one or more metadata columns to use in a formula. Using this method, the formula will take the form: \" ~ first + second \" <br>The following two lines are equivilent:<br>`deseq2.designFormula =\"~ treatment + batch\"`<br>`deseq2.designFactors = treatment,batch `\n\nAdvanced users may want to make more advanced modifications to the call to the DESeq2 functions. The easiest way to do this is to run the module with the default script, and treat that as a working template (ie, see how input/outputs are passed to/from the R script). Modify the script in that first pipeline, and save the modified script to a stable location. Then run the pipeline with *deseq2.scriptPath* giving the path to the modified script.",
+"post-req modules": [],
+"title": "DESeq2",
+"properties": [
+{
+"property": "cluster.batchCommand",
 "type": "string",
-"description": "palette argument passed to [get_palette {ggpubr}](https://www.rdocumentation.org/packages/ggpubr/versions/0.2/topics/get_palette) to select colors for some output visualiztions"
+"description": "Terminal command used to submit jobs on the cluster"
 },
 {
-"property": "r.colorPoint",
-"description": "default color of scatterplot and strip-chart plot points",
-"default": "black",
-"type": "string"
+"property": "cluster.jobHeader",
+"type": "string",
+"description": "Header written at top of worker scripts"
 },
 {
-"property": "r.debug",
-"description": "Options: Y/N. If Y, will generate R Script log files",
-"default": "Y",
-"type": "boolean"
+"property": "cluster.modules",
+"type": "list",
+"description": "List of cluster modules to load at start of worker scripts"
 },
 {
-"property": "r.pValFormat",
-"default": "%1.2g"
+"property": "cluster.prologue",
+"type": "string",
+"description": "To run at the start of every script after loading cluster modules (if any)"
 },
 {
-"property": "r.pch",
-"description": "Sets R plot pch parameter for PDF report",
-"default": "21",
-"type": "integer"
+"property": "cluster.statusCommand",
+"type": "string",
+"description": "Terminal command used to check the status of jobs on the cluster"
 },
+{"property": "deseq2.designFactors"},
+{"property": "deseq2.designFormula"},
+{"property": "deseq2.scriptPath"},
 {
-"property": "r.rareOtuThreshold",
-"description": "If >=1, R will filter OTUs found in fewer than this many samples. If <1, R will interperate the value as a percentage and discard OTUs not found in at least that percentage of samples",
-"default": "1",
-"type": "numeric"
+"property": "docker.saveContainerOnExit",
+"type": "boolean",
+"description": "If Y, docker run command will NOT include the --rm flag"
 },
 {
-"property": "r.saveRData",
+"property": "docker.verifyImage",
 "type": "boolean",
-"description": "If Y, all R script generating BioModules will save R Session data to the module output directory to a file using the extension \".RData\""
+"description": "In check dependencies, run a test to verify the docker image."
 },
 {
-"property": "r.timeout",
-"description": "the # minutes before R Script will time out and fail; If undefined, no timeout is used.",
-"default": "10",
-"type": "integer"
+"property": "exe.Rscript",
+"type": "executable",
+"description": "Path for the \"Rscript\" executable; if not supplied, any script that needs the Rscript command will assume it is on the PATH."
 },
 {
 "property": "script.defaultHeader",
@@ -1795,14 +3050,22 @@
 "type": "integer",
 "description": "Sets # of minutes before worker scripts times out."
 }
-],
-"usage": "#BioModule biolockj.module.report.r.R_PlotOtus"
+]
 },
 {
-"description": "Generate p-value histograms for each reportable metadata field and each *report.taxonomyLevel* configured",
-"details": "",
-"title": "R_PlotPvalHistograms",
-"citation": "Module developed by Mike Sioda\nBioLockj <VERSION>",
+"menuPlacement": [
+"biolockj",
+"module",
+"seq",
+"AwkFastaConverter"
+],
+"citation": "BioLockJ <VERSION>\nModule developed by Mike Sioda",
+"usage": "#BioModule biolockj.module.seq.AwkFastaConverter",
+"pre-req modules": [],
+"description": "Convert fastq files into fasta format.",
+"details": "This module was first introduced because it was required for [QIIME](http://qiime.org).",
+"post-req modules": [],
+"title": "AwkFastaConverter",
 "properties": [
 {
 "property": "cluster.batchCommand",
@@ -1827,55 +3090,27 @@
 {
 "property": "cluster.statusCommand",
 "type": "string",
-"description": "Terminal command used to submit jobs on the cluster"
-},
-{
-"property": "docker.imgVersion",
-"type": "string",
-"description": "indicate specific version of Docker images"
+"description": "Terminal command used to check the status of jobs on the cluster"
 },
 {
 "property": "docker.saveContainerOnExit",
 "type": "boolean",
-"description": "if ture, docker run command will NOT include the --rm flag"
+"description": "If Y, docker run command will NOT include the --rm flag"
 },
 {
-"property": "docker.user",
-"type": "string",
-"description": "name of the Docker Hub user for getting docker containers"
+"property": "docker.verifyImage",
+"type": "boolean",
+"description": "In check dependencies, run a test to verify the docker image."
 },
 {
-"property": "exe.Rscript",
+"property": "exe.awk",
 "type": "executable",
-"description": "Path for the \"Rscript\" executable; if not supplied, any script that needs the Rscript command will assume it is on the PATH."
-},
-{
-"property": "r.colorFile",
-"type": "file path",
-"description": "path to a tab-delimited file giving the color to use for each value of each metadata field plotted."
-},
-{
-"property": "r.debug",
-"description": "Options: Y/N. If Y, will generate R Script log files",
-"default": "Y",
-"type": "boolean"
-},
-{
-"property": "r.pvalCutoff",
-"description": "p-value cutoff used to assign label _r.colorHighlight_",
-"default": "0.05",
-"type": "numeric"
-},
-{
-"property": "r.saveRData",
-"type": "boolean",
-"description": "If Y, all R script generating BioModules will save R Session data to the module output directory to a file using the extension \".RData\""
+"description": "Path for the \"awk\" executable; if not supplied, any script that needs the awk command will assume it is on the PATH."
 },
 {
-"property": "r.timeout",
-"description": "the # minutes before R Script will time out and fail; If undefined, no timeout is used.",
-"default": "10",
-"type": "integer"
+"property": "exe.gzip",
+"type": "executable",
+"description": "Path for the \"gzip\" executable; if not supplied, any script that needs the gzip command will assume it is on the PATH."
 },
 {
 "property": "script.defaultHeader",
@@ -1906,14 +3141,22 @@
 "type": "integer",
 "description": "Sets # of minutes before worker scripts times out."
 }
-],
-"usage": "#BioModule biolockj.module.report.r.R_PlotPvalHistograms"
+]
 },
 {
-"description": "Add a pseudocount (+1) to each value in each taxa table.",
+"menuPlacement": [
+"biolockj",
+"module",
+"seq",
+"Gunzipper"
+],
+"citation": "BioLockJ <VERSION>\nModule developed by Mike Sioda",
+"usage": "#BioModule biolockj.module.seq.Gunzipper",
+"pre-req modules": [],
+"description": "Decompress gzipped files.",
 "details": "",
-"title": "AddPseudoCount",
-"citation": "BioLockJ <VERSION>",
+"post-req modules": [],
+"title": "Gunzipper",
 "properties": [
 {
 "property": "cluster.batchCommand",
@@ -1938,22 +3181,22 @@
 {
 "property": "cluster.statusCommand",
 "type": "string",
-"description": "Terminal command used to submit jobs on the cluster"
+"description": "Terminal command used to check the status of jobs on the cluster"
 },
 {
-"property": "docker.imgVersion",
-"type": "string",
-"description": "indicate specific version of Docker images"
+"property": "docker.saveContainerOnExit",
+"type": "boolean",
+"description": "If Y, docker run command will NOT include the --rm flag"
 },
 {
-"property": "docker.saveContainerOnExit",
+"property": "docker.verifyImage",
 "type": "boolean",
-"description": "if ture, docker run command will NOT include the --rm flag"
+"description": "In check dependencies, run a test to verify the docker image."
 },
 {
-"property": "docker.user",
-"type": "string",
-"description": "name of the Docker Hub user for getting docker containers"
+"property": "exe.gzip",
+"type": "executable",
+"description": "Path for the \"gzip\" executable; if not supplied, any script that needs the gzip command will assume it is on the PATH."
 },
 {
 "property": "script.defaultHeader",
@@ -1984,10 +3227,15 @@
 "type": "integer",
 "description": "Sets # of minutes before worker scripts times out."
 }
-],
-"usage": "#BioModule biolockj.module.report.taxa.AddPseudoCount"
+]
 },
 {
+"menuPlacement": [
+"biolockj",
+"module",
+"seq",
+"KneadData"
+],
 "citation": "https://bitbucket.org/biobakery/kneaddata/wiki/Home\nModule developed by Mike Sioda",
 "usage": "#BioModule biolockj.module.seq.KneadData",
 "pre-req modules": [],
@@ -2019,22 +3267,17 @@
 {
 "property": "cluster.statusCommand",
 "type": "string",
-"description": "Terminal command used to submit jobs on the cluster"
-},
-{
-"property": "docker.imgVersion",
-"type": "string",
-"description": "indicate specific version of Docker images"
+"description": "Terminal command used to check the status of jobs on the cluster"
 },
 {
 "property": "docker.saveContainerOnExit",
 "type": "boolean",
-"description": "if ture, docker run command will NOT include the --rm flag"
+"description": "If Y, docker run command will NOT include the --rm flag"
 },
 {
-"property": "docker.user",
-"type": "string",
-"description": "name of the Docker Hub user for getting docker containers"
+"property": "docker.verifyImage",
+"type": "boolean",
+"description": "In check dependencies, run a test to verify the docker image."
 },
 {
 "property": "exe.kneaddata",
@@ -2075,7 +3318,13 @@
 ]
 },
 {
-"citation": "Module developed by Mike Sioda\nBioLockj <VERSION>",
+"menuPlacement": [
+"biolockj",
+"module",
+"seq",
+"Multiplexer"
+],
+"citation": "Module developed by Mike Sioda\nBioLockJ <VERSION>",
 "usage": "#BioModule biolockj.module.seq.Multiplexer",
 "pre-req modules": [],
 "description": "Multiplex samples into a single file, or two files (one with forward reads, one with reverse reads) if multiplexing paired reads.",
@@ -2106,22 +3355,17 @@
 {
 "property": "cluster.statusCommand",
 "type": "string",
-"description": "Terminal command used to submit jobs on the cluster"
-},
-{
-"property": "docker.imgVersion",
-"type": "string",
-"description": "indicate specific version of Docker images"
+"description": "Terminal command used to check the status of jobs on the cluster"
 },
 {
 "property": "docker.saveContainerOnExit",
 "type": "boolean",
-"description": "if ture, docker run command will NOT include the --rm flag"
+"description": "If Y, docker run command will NOT include the --rm flag"
 },
 {
-"property": "docker.user",
-"type": "string",
-"description": "name of the Docker Hub user for getting docker containers"
+"property": "docker.verifyImage",
+"type": "boolean",
+"description": "In check dependencies, run a test to verify the docker image."
 },
 {
 "property": "metadata.barcodeColumn",
@@ -2165,6 +3409,12 @@
 ]
 },
 {
+"menuPlacement": [
+"biolockj",
+"module",
+"seq",
+"PearMergeReads"
+],
 "citation": "Jiajie Zhang, Kassian Kobert, Tomáš Flouri, Alexandros Stamatakis, PEAR: a fast and accurate Illumina Paired-End reAd mergeR, Bioinformatics, Volume 30, Issue 5, 1 March 2014, Pages 614\u2013620, https://doi.org/10.1093/bioinformatics/btt593\nhttps://cme.h-its.org/exelixis/web/software/pear/doc.html\nModule developed by Mike Sioda",
 "usage": "#BioModule biolockj.module.seq.PearMergeReads",
 "pre-req modules": [],
@@ -2196,22 +3446,17 @@
 {
 "property": "cluster.statusCommand",
 "type": "string",
-"description": "Terminal command used to submit jobs on the cluster"
-},
-{
-"property": "docker.imgVersion",
-"type": "string",
-"description": "indicate specific version of Docker images"
+"description": "Terminal command used to check the status of jobs on the cluster"
 },
 {
 "property": "docker.saveContainerOnExit",
 "type": "boolean",
-"description": "if ture, docker run command will NOT include the --rm flag"
+"description": "If Y, docker run command will NOT include the --rm flag"
 },
 {
-"property": "docker.user",
-"type": "string",
-"description": "name of the Docker Hub user for getting docker containers"
+"property": "docker.verifyImage",
+"type": "boolean",
+"description": "In check dependencies, run a test to verify the docker image."
 },
 {
 "property": "exe.pear",
@@ -2251,10 +3496,17 @@
 ]
 },
 {
-"description": "Randomly select samples to reduce all samples to the configured maximum.<br> Samples with less than the minimum number of reads are discarded. ",
-"details": "",
+"menuPlacement": [
+"biolockj",
+"module",
+"seq",
+"RarefySeqs"
+],
+"citation": "Module developed by Mike Sioda\nBioLockJ <VERSION>",
+"usage": "#BioModule biolockj.module.seq.RarefySeqs",
+"description": "Randomly sub-sample sequences to reduce all samples to the configured maximum.",
+"details": "Randomly sub-sample sequences to reduce all samples to the configured maximum `rarefySeqs.max`. Samples with less than the minimum number of reads `rarefySeqs.min` are discarded.<br>This module will add **biolockj.module.implicit.RegisterNumReads** if there is not already a module to count starting reads per sample.<br>If the input data are paired reads, this module will add a sequence merger, based on property `pipeline.defaultSeqMerger` (currently: biolockj.module.seq.PearMergeReads).",
 "title": "RarefySeqs",
-"citation": "Module developed by Mike Sioda\nBioLockj <VERSION>",
 "properties": [
 {
 "property": "cluster.batchCommand",
@@ -2279,22 +3531,23 @@
 {
 "property": "cluster.statusCommand",
 "type": "string",
-"description": "Terminal command used to submit jobs on the cluster"
+"description": "Terminal command used to check the status of jobs on the cluster"
 },
 {
-"property": "docker.imgVersion",
-"type": "string",
-"description": "indicate specific version of Docker images"
+"property": "docker.saveContainerOnExit",
+"type": "boolean",
+"description": "If Y, docker run command will NOT include the --rm flag"
 },
 {
-"property": "docker.saveContainerOnExit",
+"property": "docker.verifyImage",
 "type": "boolean",
-"description": "if ture, docker run command will NOT include the --rm flag"
+"description": "In check dependencies, run a test to verify the docker image."
 },
 {
-"property": "docker.user",
-"type": "string",
-"description": "name of the Docker Hub user for getting docker containers"
+"property": "pipeline.defaultSeqMerger",
+"description": "Java class name for default module used combined paired read files",
+"default": "biolockj.module.seq.PearMergeReads",
+"type": "string"
 },
 {"property": "rarefySeqs.max"},
 {"property": "rarefySeqs.min"},
@@ -2327,11 +3580,16 @@
 "type": "integer",
 "description": "Sets # of minutes before worker scripts times out."
 }
-],
-"usage": "#BioModule biolockj.module.seq.RarefySeqs"
+]
 },
 {
-"citation": "Module developed by Mike Sioda\nBioLockj <VERSION>",
+"menuPlacement": [
+"biolockj",
+"module",
+"seq",
+"SeqFileValidator"
+],
+"citation": "Module developed by Mike Sioda\nBioLockJ <VERSION>",
 "usage": "#BioModule biolockj.module.seq.SeqFileValidator",
 "pre-req modules": [],
 "description": "This BioModule validates fasta/fastq file formats are valid and enforces min/max read lengths.",
@@ -2362,22 +3620,17 @@
 {
 "property": "cluster.statusCommand",
 "type": "string",
-"description": "Terminal command used to submit jobs on the cluster"
-},
-{
-"property": "docker.imgVersion",
-"type": "string",
-"description": "indicate specific version of Docker images"
+"description": "Terminal command used to check the status of jobs on the cluster"
 },
 {
 "property": "docker.saveContainerOnExit",
 "type": "boolean",
-"description": "if ture, docker run command will NOT include the --rm flag"
+"description": "If Y, docker run command will NOT include the --rm flag"
 },
 {
-"property": "docker.user",
-"type": "string",
-"description": "name of the Docker Hub user for getting docker containers"
+"property": "docker.verifyImage",
+"type": "boolean",
+"description": "In check dependencies, run a test to verify the docker image."
 },
 {
 "property": "script.defaultHeader",
@@ -2417,7 +3670,13 @@
 ]
 },
 {
-"citation": "Module developed by Mike Sioda\nBioLockj <VERSION>",
+"menuPlacement": [
+"biolockj",
+"module",
+"seq",
+"TrimPrimers"
+],
+"citation": "Module developed by Mike Sioda\nBioLockJ <VERSION>",
 "usage": "#BioModule biolockj.module.seq.TrimPrimers",
 "pre-req modules": [],
 "description": "Remove primers from reads, option to discard reads unless primers are attached to both forward and reverse reads.",
@@ -2448,22 +3707,17 @@
 {
 "property": "cluster.statusCommand",
 "type": "string",
-"description": "Terminal command used to submit jobs on the cluster"
-},
-{
-"property": "docker.imgVersion",
-"type": "string",
-"description": "indicate specific version of Docker images"
+"description": "Terminal command used to check the status of jobs on the cluster"
 },
 {
 "property": "docker.saveContainerOnExit",
 "type": "boolean",
-"description": "if ture, docker run command will NOT include the --rm flag"
+"description": "If Y, docker run command will NOT include the --rm flag"
 },
 {
-"property": "docker.user",
-"type": "string",
-"description": "name of the Docker Hub user for getting docker containers"
+"property": "docker.verifyImage",
+"type": "boolean",
+"description": "In check dependencies, run a test to verify the docker image."
 },
 {
 "property": "script.defaultHeader",
@@ -2502,6 +3756,11 @@
 ]
 },
 {
+"menuPlacement": [
+"sheepdog",
+"modules",
+"CopyMasterProps"
+],
 "citation": "Ivory Blakley",
 "usage": "#BioModule sheepdog.modules.CopyMasterProps",
 "pre-req modules": [],
@@ -2510,5 +3769,22 @@
 "post-req modules": [],
 "title": "CopyMasterProps",
 "properties": []
+},
+{
+"menuPlacement": [
+"testBash",
+"PipelineTime"
+],
+"citation": "Module developed by Ivory Blakley.",
+"usage": "#BioModule testBash.PipelineTime",
+"pre-req modules": [],
+"description": "This module allows for tests that fail a pipeline if it takes to long or finishes too quickly.",
+"details": "",
+"post-req modules": [],
+"title": "PipelineTime",
+"properties": [
+{"property": "pipelineTime.maxMillis"},
+{"property": "pipelineTime.minMillis"}
+]
 }
 ]
-
api-test_22_unknown_query --> just as expected.
-
oh no! examine api-test_23_unknown_option !
diff --git a/Users/ieclabau/git/sheepdog_testing_suite/test/bash/expected/api-test_23_unknown_option_generic.out b/Users/ieclabau/git/sheepdog_testing_suite/test/bash/output-api/api-test_23_unknown_option_generic.out
index a1b7d0d..72e35af 100644
--- a/Users/ieclabau/git/sheepdog_testing_suite/test/bash/expected/api-test_23_unknown_option_generic.out
+++ b/Users/ieclabau/git/sheepdog_testing_suite/test/bash/output-api/api-test_23_unknown_option_generic.out
@@ -8,12 +8,12 @@ biolockj-api <query> [options...]
 
 For some uses, redirecting stderr is recommended:
 biolockj-api <query> [options...] 2> /dev/null
+Options shown in [ ] are optional for a given query.
 
 Use biolockj-api without args to get help menu.
 
 Options:
 
-Options shown in [ ] are optional for a given query.
 --external-modules <dir>
 path to a directory containing additional modules
 --module <module_path>
@@ -83,12 +83,12 @@ biolockj-api <query> [options...]
 
 For some uses, redirecting stderr is recommended:
 biolockj-api <query> [options...] 2> /dev/null
+Options shown in [ ] are optional for a given query.
 
 Use biolockj-api without args to get help menu.
 
 Options:
 
-Options shown in [ ] are optional for a given query.
 --external-modules <dir>
 path to a directory containing additional modules
 --module <module_path>
-
api-test_24_debug_option --> just as expected.
